{"version":3,"sources":["../../../../src/components/TextArea/hotkeys.tsx"],"names":["insertText","TextAreaTextApi","insertBeforeEachLine","stopPropagation","e","preventDefault","options","target","starVal","value","substr","selectionStart","valArr","split","currentLineStr","length","textArea","tabSize","keyCode","space","Array","join","val","selectionEnd","_star","substring","_end","modifiedTextLine","forEach","item","idx","push","modifiedText","oldSelectText","newStarNum","setSelectionRange","start","indexOf","end","modifiedTextObj","replaceSelection","test"],"mappings":"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","sourcesContent":["import insertText from '../../utils/InsertTextAtPosition';\nimport { TextAreaTextApi } from '../../commands';\nimport { insertBeforeEachLine } from '../../commands/list';\n\n\nexport interface IHotkeyOptions {\n  tabSize?: number;\n}\n\n/**\n * - `13` - `Enter`\n * - `9` - `Tab`\n */\nfunction stopPropagation(e: React.KeyboardEvent<HTMLTextAreaElement>) {\n  e.stopPropagation();\n  e.preventDefault();\n}\n\nexport default (options: IHotkeyOptions, e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n  const target = e.target as HTMLTextAreaElement;\n  const starVal = target.value.substr(0, target.selectionStart);\n  const valArr = starVal.split('\\n');\n  const currentLineStr = valArr[valArr.length - 1];\n  const textArea = new TextAreaTextApi(target);\n  if (!options.tabSize) {\n    options.tabSize = 2;\n  }\n  /**\n   * `9` - `Tab`\n   */\n  if (e.keyCode === 9) {\n    stopPropagation(e);\n    const space = new Array(options.tabSize + 1).join(' ');\n    let val = space;\n    if (target.selectionStart !== target.selectionEnd) {\n      const _star = target.value.substring(0, target.selectionStart).split('\\n');\n      const _end = target.value.substring(0, target.selectionEnd).split('\\n');\n      const modifiedTextLine: string[] = [];\n      _end.forEach((item, idx) => {\n        if (item !== _star[idx]) {\n          modifiedTextLine.push(item);\n        }\n      });\n      const modifiedText = modifiedTextLine.join('\\n');\n      const oldSelectText = target.value.substring(target.selectionStart, target.selectionEnd);\n      const newStarNum = target.value.substring(0, target.selectionStart).length;\n\n      textArea.setSelectionRange({\n        start: target.value.indexOf(modifiedText),\n        end: target.selectionEnd,\n      });\n\n      const modifiedTextObj = insertBeforeEachLine(modifiedText, space);\n      textArea.replaceSelection(modifiedTextObj.modifiedText);\n      textArea.setSelectionRange({\n        start: newStarNum + options.tabSize,\n        end: newStarNum + oldSelectText.length + (modifiedTextLine.length * options.tabSize),\n      });\n    } else {\n      return insertText(target, val);\n    }\n  } else if (e.keyCode === 13 && /^-\\s/.test(currentLineStr)) {\n    /**\n     * `13` - `Enter`\n     */\n    stopPropagation(e);\n    return insertText(target, `\\n- `);\n  }\n}"]}