{"ast":null,"code":"Prism.languages.rest = {\n  table: [{\n    pattern: /(^[\\t ]*)(?:\\+[=-]+)+\\+(?:\\r?\\n|\\r)(?:\\1[+|].+[+|](?:\\r?\\n|\\r))+\\1(?:\\+[=-]+)+\\+/m,\n    lookbehind: !0,\n    inside: {\n      punctuation: /\\||(?:\\+[=-]+)+\\+/\n    }\n  }, {\n    pattern: /(^[\\t ]*)=+ [ =]*=(?:(?:\\r?\\n|\\r)\\1.+)+(?:\\r?\\n|\\r)\\1=+ [ =]*=(?=(?:\\r?\\n|\\r){2}|\\s*$)/m,\n    lookbehind: !0,\n    inside: {\n      punctuation: /[=-]+/\n    }\n  }],\n  \"substitution-def\": {\n    pattern: /(^[\\t ]*\\.\\. )\\|(?:[^|\\s](?:[^|]*[^|\\s])?)\\| [^:]+::/m,\n    lookbehind: !0,\n    inside: {\n      substitution: {\n        pattern: /^\\|(?:[^|\\s]|[^|\\s][^|]*[^|\\s])\\|/,\n        alias: \"attr-value\",\n        inside: {\n          punctuation: /^\\||\\|$/\n        }\n      },\n      directive: {\n        pattern: /( )(?! )[^:]+::/,\n        lookbehind: !0,\n        alias: \"function\",\n        inside: {\n          punctuation: /::$/\n        }\n      }\n    }\n  },\n  \"link-target\": [{\n    pattern: /(^[\\t ]*\\.\\. )\\[[^\\]]+\\]/m,\n    lookbehind: !0,\n    alias: \"string\",\n    inside: {\n      punctuation: /^\\[|\\]$/\n    }\n  }, {\n    pattern: /(^[\\t ]*\\.\\. )_(?:`[^`]+`|(?:[^:\\\\]|\\\\.)+):/m,\n    lookbehind: !0,\n    alias: \"string\",\n    inside: {\n      punctuation: /^_|:$/\n    }\n  }],\n  directive: {\n    pattern: /(^[\\t ]*\\.\\. )[^:]+::/m,\n    lookbehind: !0,\n    alias: \"function\",\n    inside: {\n      punctuation: /::$/\n    }\n  },\n  comment: {\n    pattern: /(^[\\t ]*\\.\\.)(?:(?: .+)?(?:(?:\\r?\\n|\\r).+)+| .+)(?=(?:\\r?\\n|\\r){2}|$)/m,\n    lookbehind: !0\n  },\n  title: [{\n    pattern: /^(([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+)(?:\\r?\\n|\\r).+(?:\\r?\\n|\\r)\\1$/m,\n    inside: {\n      punctuation: /^[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+|[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\n      important: /.+/\n    }\n  }, {\n    pattern: /(^|(?:\\r?\\n|\\r){2}).+(?:\\r?\\n|\\r)([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+(?=\\r?\\n|\\r|$)/,\n    lookbehind: !0,\n    inside: {\n      punctuation: /[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\n      important: /.+/\n    }\n  }],\n  hr: {\n    pattern: /((?:\\r?\\n|\\r){2})([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2{3,}(?=(?:\\r?\\n|\\r){2})/,\n    lookbehind: !0,\n    alias: \"punctuation\"\n  },\n  field: {\n    pattern: /(^[\\t ]*):[^:\\r\\n]+:(?= )/m,\n    lookbehind: !0,\n    alias: \"attr-name\"\n  },\n  \"command-line-option\": {\n    pattern: /(^[\\t ]*)(?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?(?:, (?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?)*(?=(?:\\r?\\n|\\r)? {2,}\\S)/im,\n    lookbehind: !0,\n    alias: \"symbol\"\n  },\n  \"literal-block\": {\n    pattern: /::(?:\\r?\\n|\\r){2}([ \\t]+)(?![ \\t]).+(?:(?:\\r?\\n|\\r)\\1.+)*/,\n    inside: {\n      \"literal-block-punctuation\": {\n        pattern: /^::/,\n        alias: \"punctuation\"\n      }\n    }\n  },\n  \"quoted-literal-block\": {\n    pattern: /::(?:\\r?\\n|\\r){2}([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]).*(?:(?:\\r?\\n|\\r)\\1.*)*/,\n    inside: {\n      \"literal-block-punctuation\": {\n        pattern: /^(?:::|([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\1*)/m,\n        alias: \"punctuation\"\n      }\n    }\n  },\n  \"list-bullet\": {\n    pattern: /(^[\\t ]*)(?:[*+\\-•‣⁃]|\\(?(?:\\d+|[a-z]|[ivxdclm]+)\\)|(?:\\d+|[a-z]|[ivxdclm]+)\\.)(?= )/im,\n    lookbehind: !0,\n    alias: \"punctuation\"\n  },\n  \"doctest-block\": {\n    pattern: /(^[\\t ]*)>>> .+(?:(?:\\r?\\n|\\r).+)*/m,\n    lookbehind: !0,\n    inside: {\n      punctuation: /^>>>/\n    }\n  },\n  inline: [{\n    pattern: /(^|[\\s\\-:\\/'\"<(\\[{])(?::[^:]+:`.*?`|`.*?`:[^:]+:|(\\*\\*?|``?|\\|)(?!\\s)(?:(?!\\2).)*\\S\\2(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$))/m,\n    lookbehind: !0,\n    inside: {\n      bold: {\n        pattern: /(^\\*\\*).+(?=\\*\\*$)/,\n        lookbehind: !0\n      },\n      italic: {\n        pattern: /(^\\*).+(?=\\*$)/,\n        lookbehind: !0\n      },\n      \"inline-literal\": {\n        pattern: /(^``).+(?=``$)/,\n        lookbehind: !0,\n        alias: \"symbol\"\n      },\n      role: {\n        pattern: /^:[^:]+:|:[^:]+:$/,\n        alias: \"function\",\n        inside: {\n          punctuation: /^:|:$/\n        }\n      },\n      \"interpreted-text\": {\n        pattern: /(^`).+(?=`$)/,\n        lookbehind: !0,\n        alias: \"attr-value\"\n      },\n      substitution: {\n        pattern: /(^\\|).+(?=\\|$)/,\n        lookbehind: !0,\n        alias: \"attr-value\"\n      },\n      punctuation: /\\*\\*?|``?|\\|/\n    }\n  }],\n  link: [{\n    pattern: /\\[[^\\[\\]]+\\]_(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/,\n    alias: \"string\",\n    inside: {\n      punctuation: /^\\[|\\]_$/\n    }\n  }, {\n    pattern: /(?:\\b[a-z\\d]+(?:[_.:+][a-z\\d]+)*_?_|`[^`]+`_?_|_`[^`]+`)(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/i,\n    alias: \"string\",\n    inside: {\n      punctuation: /^_?`|`$|`?_?_$/\n    }\n  }],\n  punctuation: {\n    pattern: /(^[\\t ]*)(?:\\|(?= |$)|(?:---?|—|\\.\\.|__)(?= )|\\.\\.$)/m,\n    lookbehind: !0\n  }\n};","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/github/react-snippy/node_modules/prismjs/components/prism-rest.min.js"],"names":["Prism","languages","rest","table","pattern","lookbehind","inside","punctuation","substitution","alias","directive","comment","title","important","hr","field","inline","bold","italic","role","link"],"mappings":"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","sourcesContent":["Prism.languages.rest={table:[{pattern:/(^[\\t ]*)(?:\\+[=-]+)+\\+(?:\\r?\\n|\\r)(?:\\1[+|].+[+|](?:\\r?\\n|\\r))+\\1(?:\\+[=-]+)+\\+/m,lookbehind:!0,inside:{punctuation:/\\||(?:\\+[=-]+)+\\+/}},{pattern:/(^[\\t ]*)=+ [ =]*=(?:(?:\\r?\\n|\\r)\\1.+)+(?:\\r?\\n|\\r)\\1=+ [ =]*=(?=(?:\\r?\\n|\\r){2}|\\s*$)/m,lookbehind:!0,inside:{punctuation:/[=-]+/}}],\"substitution-def\":{pattern:/(^[\\t ]*\\.\\. )\\|(?:[^|\\s](?:[^|]*[^|\\s])?)\\| [^:]+::/m,lookbehind:!0,inside:{substitution:{pattern:/^\\|(?:[^|\\s]|[^|\\s][^|]*[^|\\s])\\|/,alias:\"attr-value\",inside:{punctuation:/^\\||\\|$/}},directive:{pattern:/( )(?! )[^:]+::/,lookbehind:!0,alias:\"function\",inside:{punctuation:/::$/}}}},\"link-target\":[{pattern:/(^[\\t ]*\\.\\. )\\[[^\\]]+\\]/m,lookbehind:!0,alias:\"string\",inside:{punctuation:/^\\[|\\]$/}},{pattern:/(^[\\t ]*\\.\\. )_(?:`[^`]+`|(?:[^:\\\\]|\\\\.)+):/m,lookbehind:!0,alias:\"string\",inside:{punctuation:/^_|:$/}}],directive:{pattern:/(^[\\t ]*\\.\\. )[^:]+::/m,lookbehind:!0,alias:\"function\",inside:{punctuation:/::$/}},comment:{pattern:/(^[\\t ]*\\.\\.)(?:(?: .+)?(?:(?:\\r?\\n|\\r).+)+| .+)(?=(?:\\r?\\n|\\r){2}|$)/m,lookbehind:!0},title:[{pattern:/^(([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+)(?:\\r?\\n|\\r).+(?:\\r?\\n|\\r)\\1$/m,inside:{punctuation:/^[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+|[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,important:/.+/}},{pattern:/(^|(?:\\r?\\n|\\r){2}).+(?:\\r?\\n|\\r)([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+(?=\\r?\\n|\\r|$)/,lookbehind:!0,inside:{punctuation:/[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,important:/.+/}}],hr:{pattern:/((?:\\r?\\n|\\r){2})([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2{3,}(?=(?:\\r?\\n|\\r){2})/,lookbehind:!0,alias:\"punctuation\"},field:{pattern:/(^[\\t ]*):[^:\\r\\n]+:(?= )/m,lookbehind:!0,alias:\"attr-name\"},\"command-line-option\":{pattern:/(^[\\t ]*)(?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?(?:, (?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?)*(?=(?:\\r?\\n|\\r)? {2,}\\S)/im,lookbehind:!0,alias:\"symbol\"},\"literal-block\":{pattern:/::(?:\\r?\\n|\\r){2}([ \\t]+)(?![ \\t]).+(?:(?:\\r?\\n|\\r)\\1.+)*/,inside:{\"literal-block-punctuation\":{pattern:/^::/,alias:\"punctuation\"}}},\"quoted-literal-block\":{pattern:/::(?:\\r?\\n|\\r){2}([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]).*(?:(?:\\r?\\n|\\r)\\1.*)*/,inside:{\"literal-block-punctuation\":{pattern:/^(?:::|([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\1*)/m,alias:\"punctuation\"}}},\"list-bullet\":{pattern:/(^[\\t ]*)(?:[*+\\-•‣⁃]|\\(?(?:\\d+|[a-z]|[ivxdclm]+)\\)|(?:\\d+|[a-z]|[ivxdclm]+)\\.)(?= )/im,lookbehind:!0,alias:\"punctuation\"},\"doctest-block\":{pattern:/(^[\\t ]*)>>> .+(?:(?:\\r?\\n|\\r).+)*/m,lookbehind:!0,inside:{punctuation:/^>>>/}},inline:[{pattern:/(^|[\\s\\-:\\/'\"<(\\[{])(?::[^:]+:`.*?`|`.*?`:[^:]+:|(\\*\\*?|``?|\\|)(?!\\s)(?:(?!\\2).)*\\S\\2(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$))/m,lookbehind:!0,inside:{bold:{pattern:/(^\\*\\*).+(?=\\*\\*$)/,lookbehind:!0},italic:{pattern:/(^\\*).+(?=\\*$)/,lookbehind:!0},\"inline-literal\":{pattern:/(^``).+(?=``$)/,lookbehind:!0,alias:\"symbol\"},role:{pattern:/^:[^:]+:|:[^:]+:$/,alias:\"function\",inside:{punctuation:/^:|:$/}},\"interpreted-text\":{pattern:/(^`).+(?=`$)/,lookbehind:!0,alias:\"attr-value\"},substitution:{pattern:/(^\\|).+(?=\\|$)/,lookbehind:!0,alias:\"attr-value\"},punctuation:/\\*\\*?|``?|\\|/}}],link:[{pattern:/\\[[^\\[\\]]+\\]_(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/,alias:\"string\",inside:{punctuation:/^\\[|\\]_$/}},{pattern:/(?:\\b[a-z\\d]+(?:[_.:+][a-z\\d]+)*_?_|`[^`]+`_?_|_`[^`]+`)(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/i,alias:\"string\",inside:{punctuation:/^_?`|`$|`?_?_$/}}],punctuation:{pattern:/(^[\\t ]*)(?:\\|(?= |$)|(?:---?|—|\\.\\.|__)(?= )|\\.\\.$)/m,lookbehind:!0}};"]},"metadata":{},"sourceType":"script"}