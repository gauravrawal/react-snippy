{"ast":null,"code":"module.exports = configure;\n\nfunction configure(base, extension) {\n  var index = -1;\n  var key; // First do subextensions.\n\n  if (extension.extensions) {\n    while (++index < extension.extensions.length) {\n      configure(base, extension.extensions[index]);\n    }\n  }\n\n  for (key in extension) {\n    if (key === 'extensions') {// Empty.\n    } else if (key === 'unsafe' || key === 'join') {\n      base[key] = base[key].concat(extension[key] || []);\n    } else if (key === 'handlers') {\n      base[key] = Object.assign(base[key], extension[key] || {});\n    } else {\n      base.options[key] = extension[key];\n    }\n  }\n\n  return base;\n}","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/jbook/node_modules/mdast-util-to-markdown/lib/configure.js"],"names":["module","exports","configure","base","extension","index","key","extensions","length","concat","Object","assign","options"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiBC,SAAjB;;AAEA,SAASA,SAAT,CAAmBC,IAAnB,EAAyBC,SAAzB,EAAoC;AAClC,MAAIC,KAAK,GAAG,CAAC,CAAb;AACA,MAAIC,GAAJ,CAFkC,CAIlC;;AACA,MAAIF,SAAS,CAACG,UAAd,EAA0B;AACxB,WAAO,EAAEF,KAAF,GAAUD,SAAS,CAACG,UAAV,CAAqBC,MAAtC,EAA8C;AAC5CN,MAAAA,SAAS,CAACC,IAAD,EAAOC,SAAS,CAACG,UAAV,CAAqBF,KAArB,CAAP,CAAT;AACD;AACF;;AAED,OAAKC,GAAL,IAAYF,SAAZ,EAAuB;AACrB,QAAIE,GAAG,KAAK,YAAZ,EAA0B,CACxB;AACD,KAFD,MAEO,IAAIA,GAAG,KAAK,QAAR,IAAoBA,GAAG,KAAK,MAAhC,EAAwC;AAC7CH,MAAAA,IAAI,CAACG,GAAD,CAAJ,GAAYH,IAAI,CAACG,GAAD,CAAJ,CAAUG,MAAV,CAAiBL,SAAS,CAACE,GAAD,CAAT,IAAkB,EAAnC,CAAZ;AACD,KAFM,MAEA,IAAIA,GAAG,KAAK,UAAZ,EAAwB;AAC7BH,MAAAA,IAAI,CAACG,GAAD,CAAJ,GAAYI,MAAM,CAACC,MAAP,CAAcR,IAAI,CAACG,GAAD,CAAlB,EAAyBF,SAAS,CAACE,GAAD,CAAT,IAAkB,EAA3C,CAAZ;AACD,KAFM,MAEA;AACLH,MAAAA,IAAI,CAACS,OAAL,CAAaN,GAAb,IAAoBF,SAAS,CAACE,GAAD,CAA7B;AACD;AACF;;AAED,SAAOH,IAAP;AACD","sourcesContent":["module.exports = configure\n\nfunction configure(base, extension) {\n  var index = -1\n  var key\n\n  // First do subextensions.\n  if (extension.extensions) {\n    while (++index < extension.extensions.length) {\n      configure(base, extension.extensions[index])\n    }\n  }\n\n  for (key in extension) {\n    if (key === 'extensions') {\n      // Empty.\n    } else if (key === 'unsafe' || key === 'join') {\n      base[key] = base[key].concat(extension[key] || [])\n    } else if (key === 'handlers') {\n      base[key] = Object.assign(base[key], extension[key] || {})\n    } else {\n      base.options[key] = extension[key]\n    }\n  }\n\n  return base\n}\n"]},"metadata":{},"sourceType":"script"}