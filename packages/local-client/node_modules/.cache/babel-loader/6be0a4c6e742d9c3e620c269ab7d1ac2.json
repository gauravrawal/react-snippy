{"ast":null,"code":"import insertText from '../../utils/InsertTextAtPosition';\nimport { TextAreaTextApi } from '../../commands';\nimport { insertBeforeEachLine } from '../../commands/list';\n/**\n * - `13` - `Enter`\n * - `9` - `Tab`\n */\n\nfunction stopPropagation(e) {\n  e.stopPropagation();\n  e.preventDefault();\n}\n\nexport default (function (options, e) {\n  var target = e.target;\n  var starVal = target.value.substr(0, target.selectionStart);\n  var valArr = starVal.split('\\n');\n  var currentLineStr = valArr[valArr.length - 1];\n  var textArea = new TextAreaTextApi(target);\n\n  if (!options.tabSize) {\n    options.tabSize = 2;\n  }\n  /**\n   * `9` - `Tab`\n   */\n\n\n  if (e.keyCode === 9) {\n    stopPropagation(e);\n    var space = new Array(options.tabSize + 1).join(' ');\n    var val = space;\n\n    if (target.selectionStart !== target.selectionEnd) {\n      var _star = target.value.substring(0, target.selectionStart).split('\\n');\n\n      var _end = target.value.substring(0, target.selectionEnd).split('\\n');\n\n      var modifiedTextLine = [];\n\n      _end.forEach(function (item, idx) {\n        if (item !== _star[idx]) {\n          modifiedTextLine.push(item);\n        }\n      });\n\n      var modifiedText = modifiedTextLine.join('\\n');\n      var oldSelectText = target.value.substring(target.selectionStart, target.selectionEnd);\n      var newStarNum = target.value.substring(0, target.selectionStart).length;\n      textArea.setSelectionRange({\n        start: target.value.indexOf(modifiedText),\n        end: target.selectionEnd\n      });\n      var modifiedTextObj = insertBeforeEachLine(modifiedText, space);\n      textArea.replaceSelection(modifiedTextObj.modifiedText);\n      textArea.setSelectionRange({\n        start: newStarNum + options.tabSize,\n        end: newStarNum + oldSelectText.length + modifiedTextLine.length * options.tabSize\n      });\n    } else {\n      return insertText(target, val);\n    }\n  } else if (e.keyCode === 13 && /^-\\s/.test(currentLineStr)) {\n    /**\n     * `13` - `Enter`\n     */\n    stopPropagation(e);\n    return insertText(target, \"\\n- \");\n  }\n});","map":{"version":3,"sources":["../../../../src/components/TextArea/hotkeys.tsx"],"names":["e","target","starVal","valArr","currentLineStr","textArea","options","stopPropagation","space","val","_star","_end","modifiedTextLine","item","modifiedText","oldSelectText","newStarNum","start","end","selectionEnd","modifiedTextObj","insertBeforeEachLine","tabSize","insertText"],"mappings":"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","sourcesContent":["import insertText from '../../utils/InsertTextAtPosition';\nimport { TextAreaTextApi } from '../../commands';\nimport { insertBeforeEachLine } from '../../commands/list';\n\n\nexport interface IHotkeyOptions {\n  tabSize?: number;\n}\n\n/**\n * - `13` - `Enter`\n * - `9` - `Tab`\n */\nfunction stopPropagation(e: React.KeyboardEvent<HTMLTextAreaElement>) {\n  e.stopPropagation();\n  e.preventDefault();\n}\n\nexport default (options: IHotkeyOptions, e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n  const target = e.target as HTMLTextAreaElement;\n  const starVal = target.value.substr(0, target.selectionStart);\n  const valArr = starVal.split('\\n');\n  const currentLineStr = valArr[valArr.length - 1];\n  const textArea = new TextAreaTextApi(target);\n  if (!options.tabSize) {\n    options.tabSize = 2;\n  }\n  /**\n   * `9` - `Tab`\n   */\n  if (e.keyCode === 9) {\n    stopPropagation(e);\n    const space = new Array(options.tabSize + 1).join(' ');\n    let val = space;\n    if (target.selectionStart !== target.selectionEnd) {\n      const _star = target.value.substring(0, target.selectionStart).split('\\n');\n      const _end = target.value.substring(0, target.selectionEnd).split('\\n');\n      const modifiedTextLine: string[] = [];\n      _end.forEach((item, idx) => {\n        if (item !== _star[idx]) {\n          modifiedTextLine.push(item);\n        }\n      });\n      const modifiedText = modifiedTextLine.join('\\n');\n      const oldSelectText = target.value.substring(target.selectionStart, target.selectionEnd);\n      const newStarNum = target.value.substring(0, target.selectionStart).length;\n\n      textArea.setSelectionRange({\n        start: target.value.indexOf(modifiedText),\n        end: target.selectionEnd,\n      });\n\n      const modifiedTextObj = insertBeforeEachLine(modifiedText, space);\n      textArea.replaceSelection(modifiedTextObj.modifiedText);\n      textArea.setSelectionRange({\n        start: newStarNum + options.tabSize,\n        end: newStarNum + oldSelectText.length + (modifiedTextLine.length * options.tabSize),\n      });\n    } else {\n      return insertText(target, val);\n    }\n  } else if (e.keyCode === 13 && /^-\\s/.test(currentLineStr)) {\n    /**\n     * `13` - `Enter`\n     */\n    stopPropagation(e);\n    return insertText(target, `\\n- `);\n  }\n}"]},"metadata":{},"sourceType":"module"}