{"ast":null,"code":"Prism.languages.graphql = {\n  comment: /#.*/,\n  description: {\n    pattern: /(?:\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")(?=\\s*[a-z_])/i,\n    greedy: !0,\n    alias: \"string\",\n    inside: {\n      \"language-markdown\": {\n        pattern: /(^\"(?:\"\")?)(?!\\1)[\\s\\S]+(?=\\1$)/,\n        lookbehind: !0,\n        inside: Prism.languages.markdown\n      }\n    }\n  },\n  string: {\n    pattern: /\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n    greedy: !0\n  },\n  number: /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n  boolean: /\\b(?:true|false)\\b/,\n  variable: /\\$[a-z_]\\w*/i,\n  directive: {\n    pattern: /@[a-z_]\\w*/i,\n    alias: \"function\"\n  },\n  \"attr-name\": {\n    pattern: /[a-z_]\\w*(?=\\s*(?:\\((?:[^()\"]|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")*\\))?:)/i,\n    greedy: !0\n  },\n  \"atom-input\": {\n    pattern: /[A-Z]\\w*Input(?=!?.*$)/m,\n    alias: \"class-name\"\n  },\n  scalar: /\\b(?:Boolean|Float|ID|Int|String)\\b/,\n  constant: /\\b[A-Z][A-Z_\\d]*\\b/,\n  \"class-name\": {\n    pattern: /(\\b(?:enum|implements|interface|on|scalar|type|union)\\s+|&\\s*|:\\s*|\\[)[A-Z_]\\w*/,\n    lookbehind: !0\n  },\n  fragment: {\n    pattern: /(\\bfragment\\s+|\\.{3}\\s*(?!on\\b))[a-zA-Z_]\\w*/,\n    lookbehind: !0,\n    alias: \"function\"\n  },\n  \"definition-mutation\": {\n    pattern: /(\\bmutation\\s+)[a-zA-Z_]\\w*/,\n    lookbehind: !0,\n    alias: \"function\"\n  },\n  \"definition-query\": {\n    pattern: /(\\bquery\\s+)[a-zA-Z_]\\w*/,\n    lookbehind: !0,\n    alias: \"function\"\n  },\n  keyword: /\\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\\b/,\n  operator: /[!=|&]|\\.{3}/,\n  \"property-query\": /\\w+(?=\\s*\\()/,\n  object: /\\w+(?=\\s*\\{)/,\n  punctuation: /[!(){}\\[\\]:=,]/,\n  property: /\\w+/\n}, Prism.hooks.add(\"after-tokenize\", function (n) {\n  if (\"graphql\" === n.language) for (var o = n.tokens.filter(function (n) {\n    return \"string\" != typeof n && \"comment\" !== n.type && \"scalar\" !== n.type;\n  }), s = 0; s < o.length;) {\n    var t = o[s++];\n\n    if (\"keyword\" === t.type && \"mutation\" === t.content) {\n      var e = [];\n\n      if (c([\"definition-mutation\", \"punctuation\"]) && \"(\" === l(1).content) {\n        s += 2;\n        var a = f(/^\\($/, /^\\)$/);\n        if (-1 === a) continue;\n\n        for (; s < a; s++) {\n          var r = l(0);\n          \"variable\" === r.type && (m(r, \"variable-input\"), e.push(r.content));\n        }\n\n        s = a + 1;\n      }\n\n      if (c([\"punctuation\", \"property-query\"]) && \"{\" === l(0).content && (s++, m(l(0), \"property-mutation\"), 0 < e.length)) {\n        var i = f(/^\\{$/, /^\\}$/);\n        if (-1 === i) continue;\n\n        for (var u = s; u < i; u++) {\n          var p = o[u];\n          \"variable\" === p.type && 0 <= e.indexOf(p.content) && m(p, \"variable-input\");\n        }\n      }\n    }\n  }\n\n  function l(n) {\n    return o[s + n];\n  }\n\n  function c(n, t) {\n    t = t || 0;\n\n    for (var e = 0; e < n.length; e++) {\n      var a = l(e + t);\n      if (!a || a.type !== n[e]) return !1;\n    }\n\n    return !0;\n  }\n\n  function f(n, t) {\n    for (var e = 1, a = s; a < o.length; a++) {\n      var r = o[a],\n          i = r.content;\n      if (\"punctuation\" === r.type && \"string\" == typeof i) if (n.test(i)) e++;else if (t.test(i) && 0 === --e) return a;\n    }\n\n    return -1;\n  }\n\n  function m(n, t) {\n    var e = n.alias;\n    e ? Array.isArray(e) || (n.alias = e = [e]) : n.alias = e = [], e.push(t);\n  }\n});","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/jbook/node_modules/prismjs/components/prism-graphql.min.js"],"names":["Prism","languages","graphql","comment","description","pattern","greedy","alias","inside","lookbehind","markdown","string","number","boolean","variable","directive","scalar","constant","fragment","keyword","operator","object","punctuation","property","hooks","add","n","language","o","tokens","filter","type","s","length","t","content","e","c","l","a","f","r","m","push","i","u","p","indexOf","test","Array","isArray"],"mappings":"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","sourcesContent":["Prism.languages.graphql={comment:/#.*/,description:{pattern:/(?:\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")(?=\\s*[a-z_])/i,greedy:!0,alias:\"string\",inside:{\"language-markdown\":{pattern:/(^\"(?:\"\")?)(?!\\1)[\\s\\S]+(?=\\1$)/,lookbehind:!0,inside:Prism.languages.markdown}}},string:{pattern:/\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,greedy:!0},number:/(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,boolean:/\\b(?:true|false)\\b/,variable:/\\$[a-z_]\\w*/i,directive:{pattern:/@[a-z_]\\w*/i,alias:\"function\"},\"attr-name\":{pattern:/[a-z_]\\w*(?=\\s*(?:\\((?:[^()\"]|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")*\\))?:)/i,greedy:!0},\"atom-input\":{pattern:/[A-Z]\\w*Input(?=!?.*$)/m,alias:\"class-name\"},scalar:/\\b(?:Boolean|Float|ID|Int|String)\\b/,constant:/\\b[A-Z][A-Z_\\d]*\\b/,\"class-name\":{pattern:/(\\b(?:enum|implements|interface|on|scalar|type|union)\\s+|&\\s*|:\\s*|\\[)[A-Z_]\\w*/,lookbehind:!0},fragment:{pattern:/(\\bfragment\\s+|\\.{3}\\s*(?!on\\b))[a-zA-Z_]\\w*/,lookbehind:!0,alias:\"function\"},\"definition-mutation\":{pattern:/(\\bmutation\\s+)[a-zA-Z_]\\w*/,lookbehind:!0,alias:\"function\"},\"definition-query\":{pattern:/(\\bquery\\s+)[a-zA-Z_]\\w*/,lookbehind:!0,alias:\"function\"},keyword:/\\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\\b/,operator:/[!=|&]|\\.{3}/,\"property-query\":/\\w+(?=\\s*\\()/,object:/\\w+(?=\\s*\\{)/,punctuation:/[!(){}\\[\\]:=,]/,property:/\\w+/},Prism.hooks.add(\"after-tokenize\",function(n){if(\"graphql\"===n.language)for(var o=n.tokens.filter(function(n){return\"string\"!=typeof n&&\"comment\"!==n.type&&\"scalar\"!==n.type}),s=0;s<o.length;){var t=o[s++];if(\"keyword\"===t.type&&\"mutation\"===t.content){var e=[];if(c([\"definition-mutation\",\"punctuation\"])&&\"(\"===l(1).content){s+=2;var a=f(/^\\($/,/^\\)$/);if(-1===a)continue;for(;s<a;s++){var r=l(0);\"variable\"===r.type&&(m(r,\"variable-input\"),e.push(r.content))}s=a+1}if(c([\"punctuation\",\"property-query\"])&&\"{\"===l(0).content&&(s++,m(l(0),\"property-mutation\"),0<e.length)){var i=f(/^\\{$/,/^\\}$/);if(-1===i)continue;for(var u=s;u<i;u++){var p=o[u];\"variable\"===p.type&&0<=e.indexOf(p.content)&&m(p,\"variable-input\")}}}}function l(n){return o[s+n]}function c(n,t){t=t||0;for(var e=0;e<n.length;e++){var a=l(e+t);if(!a||a.type!==n[e])return!1}return!0}function f(n,t){for(var e=1,a=s;a<o.length;a++){var r=o[a],i=r.content;if(\"punctuation\"===r.type&&\"string\"==typeof i)if(n.test(i))e++;else if(t.test(i)&&0===--e)return a}return-1}function m(n,t){var e=n.alias;e?Array.isArray(e)||(n.alias=e=[e]):n.alias=e=[],e.push(t)}});"]},"metadata":{},"sourceType":"script"}