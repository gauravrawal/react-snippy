{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/gauravrawal/gaurav/udemy/jbook/src/components/code-cell.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport CodeEditor from \"./code-editor\";\nimport Preview from \"./preview\";\nimport bundle from \"../bundler\";\nimport Resizable from \"./resizable\";\n\nconst CodeCell = () => {\n  _s();\n\n  const [code, setCode] = useState(\"\");\n  const [input, setInput] = useState(\"\");\n\n  const onClick = async () => {\n    const output = await bundle(input);\n    setCode(output);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Resizable, {\n    direction: \"vertical\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CodeEditor, {\n        initialValue: \"\",\n        onChange: value => setInput(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClick,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Preview, {\n        code: code\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CodeCell, \"e1boTA5gaxHcOsORar48WvuvZa4=\");\n\n_c = CodeCell;\nexport default CodeCell;\n\nvar _c;\n\n$RefreshReg$(_c, \"CodeCell\");","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/jbook/src/components/code-cell.tsx"],"names":["useState","CodeEditor","Preview","bundle","Resizable","CodeCell","code","setCode","input","setInput","onClick","output","value"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMU,OAAO,GAAG,YAAY;AAC1B,UAAMC,MAAM,GAAG,MAAMR,MAAM,CAACK,KAAD,CAA3B;AACAD,IAAAA,OAAO,CAACI,MAAD,CAAP;AACD,GAHD;;AAKA,sBACE,QAAC,SAAD;AAAW,IAAA,SAAS,EAAC,UAArB;AAAA,2BACE;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,YAAY,EAAC,EAAzB;AAA4B,QAAA,QAAQ,EAAGC,KAAD,IAAWH,QAAQ,CAACG,KAAD;AAAzD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,+BACE;AAAQ,UAAA,OAAO,EAAEF,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE,QAAC,OAAD;AAAS,QAAA,IAAI,EAAEJ;AAAf;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CApBD;;GAAMD,Q;;KAAAA,Q;AAsBN,eAAeA,QAAf","sourcesContent":["import { useState } from \"react\";\nimport CodeEditor from \"./code-editor\";\nimport Preview from \"./preview\";\nimport bundle from \"../bundler\";\nimport Resizable from \"./resizable\";\n\nconst CodeCell = () => {\n  const [code, setCode] = useState(\"\");\n  const [input, setInput] = useState(\"\");\n\n  const onClick = async () => {\n    const output = await bundle(input);\n    setCode(output);\n  };\n\n  return (\n    <Resizable direction=\"vertical\">\n      <div>\n        <CodeEditor initialValue=\"\" onChange={(value) => setInput(value)} />\n        <div>\n          <button onClick={onClick}>Submit</button>\n        </div>\n        <Preview code={code} />\n      </div>\n    </Resizable>\n  );\n};\n\nexport default CodeCell;\n"]},"metadata":{},"sourceType":"module"}