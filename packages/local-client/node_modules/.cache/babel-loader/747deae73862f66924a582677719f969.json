{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactDraggable = require(\"react-draggable\");\n\nvar _utils = require(\"./utils\");\n\nvar _propTypes = require(\"./propTypes\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar Resizable = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Resizable, _React$Component);\n\n  function Resizable() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", undefined);\n\n    _defineProperty(_assertThisInitialized(_this), \"lastHandleRect\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"slack\", null);\n\n    return _this;\n  }\n\n  var _proto = Resizable.prototype;\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.resetData();\n  };\n\n  _proto.lockAspectRatio = function lockAspectRatio(width, height, aspectRatio) {\n    height = width / aspectRatio;\n    width = height * aspectRatio;\n    return [width, height];\n  };\n\n  _proto.resetData = function resetData() {\n    this.lastHandleRect = this.slack = null;\n  } // Clamp width and height within provided constraints\n  ;\n\n  _proto.runConstraints = function runConstraints(width, height) {\n    var _ref = [this.props.minConstraints, this.props.maxConstraints],\n        min = _ref[0],\n        max = _ref[1];\n    if (!min && !max) return [width, height]; // If constraining to min and max, we need to also fit width and height to aspect ratio.\n\n    if (this.props.lockAspectRatio) {\n      var resizingHorizontally = height === this.props.height;\n\n      if (resizingHorizontally) {\n        var ratio = this.props.width / this.props.height;\n        height = width / ratio;\n        width = height * ratio;\n      } else {\n        // Take into account vertical resize with N/S handles on locked aspect\n        // ratio. Calculate the change height-first, instead of width-first\n        var _ratio = this.props.height / this.props.width;\n\n        width = height / _ratio;\n        height = width * _ratio;\n      }\n    }\n\n    var oldW = width,\n        oldH = height; // Add slack to the values used to calculate bound position. This will ensure that if\n    // we start removing slack, the element won't react to it right away until it's been\n    // completely removed.\n\n    var _ref2 = this.slack || [0, 0],\n        slackW = _ref2[0],\n        slackH = _ref2[1];\n\n    width += slackW;\n    height += slackH;\n\n    if (min) {\n      width = Math.max(min[0], width);\n      height = Math.max(min[1], height);\n    }\n\n    if (max) {\n      width = Math.min(max[0], width);\n      height = Math.min(max[1], height);\n    } // If the width or height changed, we must have introduced some slack. Record it for the next iteration.\n\n\n    this.slack = [slackW + (oldW - width), slackH + (oldH - height)];\n    return [width, height];\n  }\n  /**\n   * Wrapper around drag events to provide more useful data.\n   *\n   * @param  {String} handlerName Handler name to wrap.\n   * @return {Function}           Handler function.\n   */\n  ;\n\n  _proto.resizeHandler = function resizeHandler(handlerName, axis) {\n    var _this2 = this;\n\n    return function (e, _ref3) {\n      var node = _ref3.node,\n          deltaX = _ref3.deltaX,\n          deltaY = _ref3.deltaY; // Reset data in case it was left over somehow (should not be possible)\n\n      if (handlerName === 'onResizeStart') _this2.resetData(); // Axis restrictions\n\n      var canDragX = (_this2.props.axis === 'both' || _this2.props.axis === 'x') && axis !== 'n' && axis !== 's';\n      var canDragY = (_this2.props.axis === 'both' || _this2.props.axis === 'y') && axis !== 'e' && axis !== 'w'; // No dragging possible.\n\n      if (!canDragX && !canDragY) return; // Decompose axis for later use\n\n      var axisV = axis[0];\n      var axisH = axis[axis.length - 1]; // intentionally not axis[1], so that this catches axis === 'w' for example\n      // Track the element being dragged to account for changes in position.\n      // If a handle's position is changed between callbacks, we need to factor this in to the next callback.\n      // Failure to do so will cause the element to \"skip\" when resized upwards or leftwards.\n\n      var handleRect = node.getBoundingClientRect();\n\n      if (_this2.lastHandleRect != null) {\n        // If the handle has repositioned on either axis since last render,\n        // we need to increase our callback values by this much.\n        // Only checking 'n', 'w' since resizing by 's', 'w' won't affect the overall position on page,\n        if (axisH === 'w') {\n          var deltaLeftSinceLast = handleRect.left - _this2.lastHandleRect.left;\n          deltaX += deltaLeftSinceLast;\n        }\n\n        if (axisV === 'n') {\n          var deltaTopSinceLast = handleRect.top - _this2.lastHandleRect.top;\n          deltaY += deltaTopSinceLast;\n        }\n      } // Storage of last rect so we know how much it has really moved.\n\n\n      _this2.lastHandleRect = handleRect; // Reverse delta if using top or left drag handles.\n\n      if (axisH === 'w') deltaX = -deltaX;\n      if (axisV === 'n') deltaY = -deltaY; // Update w/h by the deltas. Also factor in transformScale.\n\n      var width = _this2.props.width + (canDragX ? deltaX / _this2.props.transformScale : 0);\n      var height = _this2.props.height + (canDragY ? deltaY / _this2.props.transformScale : 0); // Run user-provided constraints.\n\n      var _this2$runConstraints = _this2.runConstraints(width, height);\n\n      width = _this2$runConstraints[0];\n      height = _this2$runConstraints[1];\n      var dimensionsChanged = width !== _this2.props.width || height !== _this2.props.height; // Call user-supplied callback if present.\n\n      var cb = typeof _this2.props[handlerName] === 'function' ? _this2.props[handlerName] : null; // Don't call 'onResize' if dimensions haven't changed.\n\n      var shouldSkipCb = handlerName === 'onResize' && !dimensionsChanged;\n\n      if (cb && !shouldSkipCb) {\n        if (typeof e.persist === 'function') e.persist();\n        cb(e, {\n          node: node,\n          size: {\n            width: width,\n            height: height\n          },\n          handle: axis\n        });\n      } // Reset internal data\n\n\n      if (handlerName === 'onResizeStop') _this2.resetData();\n    };\n  };\n\n  _proto.renderResizeHandle = function renderResizeHandle(resizeHandleAxis) {\n    var handle = this.props.handle;\n\n    if (handle) {\n      if (typeof handle === 'function') {\n        return handle(resizeHandleAxis);\n      }\n\n      return handle;\n    }\n\n    return /*#__PURE__*/_react.default.createElement(\"span\", {\n      className: \"react-resizable-handle react-resizable-handle-\" + resizeHandleAxis\n    });\n  };\n\n  _proto.render = function render() {\n    var _this3 = this; // Pass along only props not meant for the `<Resizable>`.`\n    // eslint-disable-next-line no-unused-vars\n\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        className = _this$props.className,\n        draggableOpts = _this$props.draggableOpts,\n        width = _this$props.width,\n        height = _this$props.height,\n        handle = _this$props.handle,\n        handleSize = _this$props.handleSize,\n        lockAspectRatio = _this$props.lockAspectRatio,\n        axis = _this$props.axis,\n        minConstraints = _this$props.minConstraints,\n        maxConstraints = _this$props.maxConstraints,\n        onResize = _this$props.onResize,\n        onResizeStop = _this$props.onResizeStop,\n        onResizeStart = _this$props.onResizeStart,\n        resizeHandles = _this$props.resizeHandles,\n        transformScale = _this$props.transformScale,\n        p = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"className\", \"draggableOpts\", \"width\", \"height\", \"handle\", \"handleSize\", \"lockAspectRatio\", \"axis\", \"minConstraints\", \"maxConstraints\", \"onResize\", \"onResizeStop\", \"onResizeStart\", \"resizeHandles\", \"transformScale\"]); // What we're doing here is getting the child of this element, and cloning it with this element's props.\n    // We are then defining its children as:\n    // Its original children (resizable's child's children), and\n    // One or more draggable handles.\n\n\n    return (0, _utils.cloneElement)(children, _objectSpread(_objectSpread({}, p), {}, {\n      className: (className ? className + \" \" : '') + \"react-resizable\",\n      children: [].concat(children.props.children, resizeHandles.map(function (handleAxis) {\n        return /*#__PURE__*/_react.default.createElement(_reactDraggable.DraggableCore, _extends({}, draggableOpts, {\n          key: \"resizableHandle-\" + handleAxis,\n          onStop: _this3.resizeHandler('onResizeStop', handleAxis),\n          onStart: _this3.resizeHandler('onResizeStart', handleAxis),\n          onDrag: _this3.resizeHandler('onResize', handleAxis)\n        }), _this3.renderResizeHandle(handleAxis));\n      }))\n    }));\n  };\n\n  return Resizable;\n}(_react.default.Component);\n\nexports.default = Resizable;\n\n_defineProperty(Resizable, \"propTypes\", _propTypes.resizableProps);\n\n_defineProperty(Resizable, \"defaultProps\", {\n  handleSize: [20, 20],\n  lockAspectRatio: false,\n  axis: 'both',\n  minConstraints: [20, 20],\n  maxConstraints: [Infinity, Infinity],\n  resizeHandles: ['se'],\n  transformScale: 1\n});","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/github/react-snippy/node_modules/react-resizable/build/Resizable.js"],"names":["exports","__esModule","default","_react","_interopRequireDefault","require","_reactDraggable","_utils","_propTypes","obj","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","_objectSpread","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_objectWithoutPropertiesLoose","excluded","sourceKeys","indexOf","_assertThisInitialized","self","ReferenceError","_inheritsLoose","subClass","superClass","create","constructor","__proto__","value","configurable","writable","Resizable","_React$Component","_this","_len","args","Array","_key","concat","undefined","_proto","componentWillUnmount","resetData","lockAspectRatio","width","height","aspectRatio","lastHandleRect","slack","runConstraints","_ref","props","minConstraints","maxConstraints","min","max","resizingHorizontally","ratio","_ratio","oldW","oldH","_ref2","slackW","slackH","Math","resizeHandler","handlerName","axis","_this2","e","_ref3","node","deltaX","deltaY","canDragX","canDragY","axisV","axisH","handleRect","getBoundingClientRect","deltaLeftSinceLast","left","deltaTopSinceLast","top","transformScale","_this2$runConstraints","dimensionsChanged","cb","shouldSkipCb","persist","size","handle","renderResizeHandle","resizeHandleAxis","createElement","className","render","_this3","_this$props","children","draggableOpts","handleSize","onResize","onResizeStop","onResizeStart","resizeHandles","p","cloneElement","map","handleAxis","DraggableCore","onStop","onStart","onDrag","Component","resizableProps","Infinity"],"mappings":"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","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactDraggable = require(\"react-draggable\");\n\nvar _utils = require(\"./utils\");\n\nvar _propTypes = require(\"./propTypes\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar Resizable = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Resizable, _React$Component);\n\n  function Resizable() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", undefined);\n\n    _defineProperty(_assertThisInitialized(_this), \"lastHandleRect\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"slack\", null);\n\n    return _this;\n  }\n\n  var _proto = Resizable.prototype;\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.resetData();\n  };\n\n  _proto.lockAspectRatio = function lockAspectRatio(width, height, aspectRatio) {\n    height = width / aspectRatio;\n    width = height * aspectRatio;\n    return [width, height];\n  };\n\n  _proto.resetData = function resetData() {\n    this.lastHandleRect = this.slack = null;\n  } // Clamp width and height within provided constraints\n  ;\n\n  _proto.runConstraints = function runConstraints(width, height) {\n    var _ref = [this.props.minConstraints, this.props.maxConstraints],\n        min = _ref[0],\n        max = _ref[1];\n    if (!min && !max) return [width, height]; // If constraining to min and max, we need to also fit width and height to aspect ratio.\n\n    if (this.props.lockAspectRatio) {\n      var resizingHorizontally = height === this.props.height;\n\n      if (resizingHorizontally) {\n        var ratio = this.props.width / this.props.height;\n        height = width / ratio;\n        width = height * ratio;\n      } else {\n        // Take into account vertical resize with N/S handles on locked aspect\n        // ratio. Calculate the change height-first, instead of width-first\n        var _ratio = this.props.height / this.props.width;\n\n        width = height / _ratio;\n        height = width * _ratio;\n      }\n    }\n\n    var oldW = width,\n        oldH = height; // Add slack to the values used to calculate bound position. This will ensure that if\n    // we start removing slack, the element won't react to it right away until it's been\n    // completely removed.\n\n    var _ref2 = this.slack || [0, 0],\n        slackW = _ref2[0],\n        slackH = _ref2[1];\n\n    width += slackW;\n    height += slackH;\n\n    if (min) {\n      width = Math.max(min[0], width);\n      height = Math.max(min[1], height);\n    }\n\n    if (max) {\n      width = Math.min(max[0], width);\n      height = Math.min(max[1], height);\n    } // If the width or height changed, we must have introduced some slack. Record it for the next iteration.\n\n\n    this.slack = [slackW + (oldW - width), slackH + (oldH - height)];\n    return [width, height];\n  }\n  /**\n   * Wrapper around drag events to provide more useful data.\n   *\n   * @param  {String} handlerName Handler name to wrap.\n   * @return {Function}           Handler function.\n   */\n  ;\n\n  _proto.resizeHandler = function resizeHandler(handlerName, axis) {\n    var _this2 = this;\n\n    return function (e, _ref3) {\n      var node = _ref3.node,\n          deltaX = _ref3.deltaX,\n          deltaY = _ref3.deltaY;\n      // Reset data in case it was left over somehow (should not be possible)\n      if (handlerName === 'onResizeStart') _this2.resetData(); // Axis restrictions\n\n      var canDragX = (_this2.props.axis === 'both' || _this2.props.axis === 'x') && axis !== 'n' && axis !== 's';\n      var canDragY = (_this2.props.axis === 'both' || _this2.props.axis === 'y') && axis !== 'e' && axis !== 'w'; // No dragging possible.\n\n      if (!canDragX && !canDragY) return; // Decompose axis for later use\n\n      var axisV = axis[0];\n      var axisH = axis[axis.length - 1]; // intentionally not axis[1], so that this catches axis === 'w' for example\n      // Track the element being dragged to account for changes in position.\n      // If a handle's position is changed between callbacks, we need to factor this in to the next callback.\n      // Failure to do so will cause the element to \"skip\" when resized upwards or leftwards.\n\n      var handleRect = node.getBoundingClientRect();\n\n      if (_this2.lastHandleRect != null) {\n        // If the handle has repositioned on either axis since last render,\n        // we need to increase our callback values by this much.\n        // Only checking 'n', 'w' since resizing by 's', 'w' won't affect the overall position on page,\n        if (axisH === 'w') {\n          var deltaLeftSinceLast = handleRect.left - _this2.lastHandleRect.left;\n          deltaX += deltaLeftSinceLast;\n        }\n\n        if (axisV === 'n') {\n          var deltaTopSinceLast = handleRect.top - _this2.lastHandleRect.top;\n          deltaY += deltaTopSinceLast;\n        }\n      } // Storage of last rect so we know how much it has really moved.\n\n\n      _this2.lastHandleRect = handleRect; // Reverse delta if using top or left drag handles.\n\n      if (axisH === 'w') deltaX = -deltaX;\n      if (axisV === 'n') deltaY = -deltaY; // Update w/h by the deltas. Also factor in transformScale.\n\n      var width = _this2.props.width + (canDragX ? deltaX / _this2.props.transformScale : 0);\n      var height = _this2.props.height + (canDragY ? deltaY / _this2.props.transformScale : 0); // Run user-provided constraints.\n\n      var _this2$runConstraints = _this2.runConstraints(width, height);\n\n      width = _this2$runConstraints[0];\n      height = _this2$runConstraints[1];\n      var dimensionsChanged = width !== _this2.props.width || height !== _this2.props.height; // Call user-supplied callback if present.\n\n      var cb = typeof _this2.props[handlerName] === 'function' ? _this2.props[handlerName] : null; // Don't call 'onResize' if dimensions haven't changed.\n\n      var shouldSkipCb = handlerName === 'onResize' && !dimensionsChanged;\n\n      if (cb && !shouldSkipCb) {\n        if (typeof e.persist === 'function') e.persist();\n        cb(e, {\n          node: node,\n          size: {\n            width: width,\n            height: height\n          },\n          handle: axis\n        });\n      } // Reset internal data\n\n\n      if (handlerName === 'onResizeStop') _this2.resetData();\n    };\n  };\n\n  _proto.renderResizeHandle = function renderResizeHandle(resizeHandleAxis) {\n    var handle = this.props.handle;\n\n    if (handle) {\n      if (typeof handle === 'function') {\n        return handle(resizeHandleAxis);\n      }\n\n      return handle;\n    }\n\n    return /*#__PURE__*/_react.default.createElement(\"span\", {\n      className: \"react-resizable-handle react-resizable-handle-\" + resizeHandleAxis\n    });\n  };\n\n  _proto.render = function render() {\n    var _this3 = this;\n\n    // Pass along only props not meant for the `<Resizable>`.`\n    // eslint-disable-next-line no-unused-vars\n    var _this$props = this.props,\n        children = _this$props.children,\n        className = _this$props.className,\n        draggableOpts = _this$props.draggableOpts,\n        width = _this$props.width,\n        height = _this$props.height,\n        handle = _this$props.handle,\n        handleSize = _this$props.handleSize,\n        lockAspectRatio = _this$props.lockAspectRatio,\n        axis = _this$props.axis,\n        minConstraints = _this$props.minConstraints,\n        maxConstraints = _this$props.maxConstraints,\n        onResize = _this$props.onResize,\n        onResizeStop = _this$props.onResizeStop,\n        onResizeStart = _this$props.onResizeStart,\n        resizeHandles = _this$props.resizeHandles,\n        transformScale = _this$props.transformScale,\n        p = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"className\", \"draggableOpts\", \"width\", \"height\", \"handle\", \"handleSize\", \"lockAspectRatio\", \"axis\", \"minConstraints\", \"maxConstraints\", \"onResize\", \"onResizeStop\", \"onResizeStart\", \"resizeHandles\", \"transformScale\"]); // What we're doing here is getting the child of this element, and cloning it with this element's props.\n    // We are then defining its children as:\n    // Its original children (resizable's child's children), and\n    // One or more draggable handles.\n\n\n    return (0, _utils.cloneElement)(children, _objectSpread(_objectSpread({}, p), {}, {\n      className: (className ? className + \" \" : '') + \"react-resizable\",\n      children: [].concat(children.props.children, resizeHandles.map(function (handleAxis) {\n        return /*#__PURE__*/_react.default.createElement(_reactDraggable.DraggableCore, _extends({}, draggableOpts, {\n          key: \"resizableHandle-\" + handleAxis,\n          onStop: _this3.resizeHandler('onResizeStop', handleAxis),\n          onStart: _this3.resizeHandler('onResizeStart', handleAxis),\n          onDrag: _this3.resizeHandler('onResize', handleAxis)\n        }), _this3.renderResizeHandle(handleAxis));\n      }))\n    }));\n  };\n\n  return Resizable;\n}(_react.default.Component);\n\nexports.default = Resizable;\n\n_defineProperty(Resizable, \"propTypes\", _propTypes.resizableProps);\n\n_defineProperty(Resizable, \"defaultProps\", {\n  handleSize: [20, 20],\n  lockAspectRatio: false,\n  axis: 'both',\n  minConstraints: [20, 20],\n  maxConstraints: [Infinity, Infinity],\n  resizeHandles: ['se'],\n  transformScale: 1\n});"]},"metadata":{},"sourceType":"script"}