{"ast":null,"code":"Prism.languages.vala = Prism.languages.extend('clike', {\n  // Classes copied from prism-csharp\n  'class-name': [{\n    // (Foo bar, Bar baz)\n    pattern: /\\b[A-Z]\\w*(?:\\.\\w+)*\\b(?=(?:\\?\\s+|\\*?\\s+\\*?)\\w)/,\n    inside: {\n      punctuation: /\\./\n    }\n  }, {\n    // [Foo]\n    pattern: /(\\[)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n    lookbehind: true,\n    inside: {\n      punctuation: /\\./\n    }\n  }, {\n    // class Foo : Bar\n    pattern: /(\\b(?:class|interface)\\s+[A-Z]\\w*(?:\\.\\w+)*\\s*:\\s*)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n    lookbehind: true,\n    inside: {\n      punctuation: /\\./\n    }\n  }, {\n    // class Foo\n    pattern: /((?:\\b(?:class|interface|new|struct|enum)\\s+)|(?:catch\\s+\\())[A-Z]\\w*(?:\\.\\w+)*\\b/,\n    lookbehind: true,\n    inside: {\n      punctuation: /\\./\n    }\n  }],\n  'keyword': /\\b(?:bool|char|double|float|null|size_t|ssize_t|string|unichar|void|int|int8|int16|int32|int64|long|short|uchar|uint|uint8|uint16|uint32|uint64|ulong|ushort|class|delegate|enum|errordomain|interface|namespace|struct|break|continue|do|for|foreach|return|while|else|if|switch|assert|case|default|abstract|const|dynamic|ensures|extern|inline|internal|override|private|protected|public|requires|signal|static|virtual|volatile|weak|async|owned|unowned|try|catch|finally|throw|as|base|construct|delete|get|in|is|lock|new|out|params|ref|sizeof|set|this|throws|typeof|using|value|var|yield)\\b/i,\n  'function': /\\b\\w+(?=\\s*\\()/,\n  'number': /(?:\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)(?:f|u?l?)?/i,\n  'operator': /\\+\\+|--|&&|\\|\\||<<=?|>>=?|=>|->|~|[+\\-*\\/%&^|=!<>]=?|\\?\\??|\\.\\.\\./,\n  'punctuation': /[{}[\\];(),.:]/,\n  'constant': /\\b[A-Z0-9_]+\\b/\n});\nPrism.languages.insertBefore('vala', 'string', {\n  'raw-string': {\n    pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n    greedy: true,\n    alias: 'string'\n  },\n  'template-string': {\n    pattern: /@\"[\\s\\S]*?\"/,\n    greedy: true,\n    inside: {\n      'interpolation': {\n        pattern: /\\$(?:\\([^)]*\\)|[a-zA-Z]\\w*)/,\n        inside: {\n          'delimiter': {\n            pattern: /^\\$\\(?|\\)$/,\n            alias: 'punctuation'\n          },\n          rest: Prism.languages.vala\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  }\n});\nPrism.languages.insertBefore('vala', 'keyword', {\n  'regex': {\n    pattern: /\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[imsx]{0,4}(?=\\s*(?:$|[\\r\\n,.;})\\]]))/,\n    greedy: true,\n    inside: {\n      'regex-source': {\n        pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n        lookbehind: true,\n        alias: 'language-regex',\n        inside: Prism.languages.regex\n      },\n      'regex-delimiter': /^\\//,\n      'regex-flags': /^[a-z]+$/\n    }\n  }\n});","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/github/react-snippy/node_modules/prismjs/components/prism-vala.js"],"names":["Prism","languages","vala","extend","pattern","inside","punctuation","lookbehind","insertBefore","greedy","alias","rest","regex"],"mappings":"AAAAA,KAAK,CAACC,SAAN,CAAgBC,IAAhB,GAAuBF,KAAK,CAACC,SAAN,CAAgBE,MAAhB,CAAuB,OAAvB,EAAgC;AACtD;AACA,gBAAc,CACb;AACC;AACAC,IAAAA,OAAO,EAAE,iDAFV;AAGCC,IAAAA,MAAM,EAAE;AACPC,MAAAA,WAAW,EAAE;AADN;AAHT,GADa,EAQb;AACC;AACAF,IAAAA,OAAO,EAAE,0BAFV;AAGCG,IAAAA,UAAU,EAAE,IAHb;AAICF,IAAAA,MAAM,EAAE;AACPC,MAAAA,WAAW,EAAE;AADN;AAJT,GARa,EAgBb;AACC;AACAF,IAAAA,OAAO,EAAE,yEAFV;AAGCG,IAAAA,UAAU,EAAE,IAHb;AAICF,IAAAA,MAAM,EAAE;AACPC,MAAAA,WAAW,EAAE;AADN;AAJT,GAhBa,EAwBb;AACC;AACAF,IAAAA,OAAO,EAAE,mFAFV;AAGCG,IAAAA,UAAU,EAAE,IAHb;AAICF,IAAAA,MAAM,EAAE;AACPC,MAAAA,WAAW,EAAE;AADN;AAJT,GAxBa,CAFwC;AAmCtD,aAAW,2kBAnC2C;AAoCtD,cAAY,gBApC0C;AAqCtD,YAAU,0EArC4C;AAsCtD,cAAY,mEAtC0C;AAuCtD,iBAAe,eAvCuC;AAwCtD,cAAY;AAxC0C,CAAhC,CAAvB;AA2CAN,KAAK,CAACC,SAAN,CAAgBO,YAAhB,CAA6B,MAA7B,EAAqC,QAArC,EAA+C;AAC9C,gBAAc;AACbJ,IAAAA,OAAO,EAAE,gBADI;AAEbK,IAAAA,MAAM,EAAE,IAFK;AAGbC,IAAAA,KAAK,EAAE;AAHM,GADgC;AAM9C,qBAAmB;AAClBN,IAAAA,OAAO,EAAE,aADS;AAElBK,IAAAA,MAAM,EAAE,IAFU;AAGlBJ,IAAAA,MAAM,EAAE;AACP,uBAAiB;AAChBD,QAAAA,OAAO,EAAE,6BADO;AAEhBC,QAAAA,MAAM,EAAE;AACP,uBAAa;AACZD,YAAAA,OAAO,EAAE,YADG;AAEZM,YAAAA,KAAK,EAAE;AAFK,WADN;AAKPC,UAAAA,IAAI,EAAEX,KAAK,CAACC,SAAN,CAAgBC;AALf;AAFQ,OADV;AAWP,gBAAU;AAXH;AAHU;AAN2B,CAA/C;AAyBAF,KAAK,CAACC,SAAN,CAAgBO,YAAhB,CAA6B,MAA7B,EAAqC,SAArC,EAAgD;AAC/C,WAAS;AACRJ,IAAAA,OAAO,EAAE,yFADD;AAERK,IAAAA,MAAM,EAAE,IAFA;AAGRJ,IAAAA,MAAM,EAAE;AACP,sBAAgB;AACfD,QAAAA,OAAO,EAAE,2BADM;AAEfG,QAAAA,UAAU,EAAE,IAFG;AAGfG,QAAAA,KAAK,EAAE,gBAHQ;AAIfL,QAAAA,MAAM,EAAEL,KAAK,CAACC,SAAN,CAAgBW;AAJT,OADT;AAOP,yBAAmB,KAPZ;AAQP,qBAAe;AARR;AAHA;AADsC,CAAhD","sourcesContent":["Prism.languages.vala = Prism.languages.extend('clike', {\n\t// Classes copied from prism-csharp\n\t'class-name': [\n\t\t{\n\t\t\t// (Foo bar, Bar baz)\n\t\t\tpattern: /\\b[A-Z]\\w*(?:\\.\\w+)*\\b(?=(?:\\?\\s+|\\*?\\s+\\*?)\\w)/,\n\t\t\tinside: {\n\t\t\t\tpunctuation: /\\./\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t// [Foo]\n\t\t\tpattern: /(\\[)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\tpunctuation: /\\./\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t// class Foo : Bar\n\t\t\tpattern: /(\\b(?:class|interface)\\s+[A-Z]\\w*(?:\\.\\w+)*\\s*:\\s*)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\tpunctuation: /\\./\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t// class Foo\n\t\t\tpattern: /((?:\\b(?:class|interface|new|struct|enum)\\s+)|(?:catch\\s+\\())[A-Z]\\w*(?:\\.\\w+)*\\b/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\tpunctuation: /\\./\n\t\t\t}\n\t\t}\n\t],\n\t'keyword': /\\b(?:bool|char|double|float|null|size_t|ssize_t|string|unichar|void|int|int8|int16|int32|int64|long|short|uchar|uint|uint8|uint16|uint32|uint64|ulong|ushort|class|delegate|enum|errordomain|interface|namespace|struct|break|continue|do|for|foreach|return|while|else|if|switch|assert|case|default|abstract|const|dynamic|ensures|extern|inline|internal|override|private|protected|public|requires|signal|static|virtual|volatile|weak|async|owned|unowned|try|catch|finally|throw|as|base|construct|delete|get|in|is|lock|new|out|params|ref|sizeof|set|this|throws|typeof|using|value|var|yield)\\b/i,\n\t'function': /\\b\\w+(?=\\s*\\()/,\n\t'number': /(?:\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)(?:f|u?l?)?/i,\n\t'operator': /\\+\\+|--|&&|\\|\\||<<=?|>>=?|=>|->|~|[+\\-*\\/%&^|=!<>]=?|\\?\\??|\\.\\.\\./,\n\t'punctuation': /[{}[\\];(),.:]/,\n\t'constant': /\\b[A-Z0-9_]+\\b/\n});\n\nPrism.languages.insertBefore('vala', 'string', {\n\t'raw-string': {\n\t\tpattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n\t\tgreedy: true,\n\t\talias: 'string'\n\t},\n\t'template-string': {\n\t\tpattern: /@\"[\\s\\S]*?\"/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /\\$(?:\\([^)]*\\)|[a-zA-Z]\\w*)/,\n\t\t\t\tinside: {\n\t\t\t\t\t'delimiter': {\n\t\t\t\t\t\tpattern: /^\\$\\(?|\\)$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.vala\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t}\n});\n\nPrism.languages.insertBefore('vala', 'keyword', {\n\t'regex': {\n\t\tpattern: /\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[imsx]{0,4}(?=\\s*(?:$|[\\r\\n,.;})\\]]))/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'regex-source': {\n\t\t\t\tpattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'language-regex',\n\t\t\t\tinside: Prism.languages.regex\n\t\t\t},\n\t\t\t'regex-delimiter': /^\\//,\n\t\t\t'regex-flags': /^[a-z]+$/,\n\t\t}\n\t}\n});\n"]},"metadata":{},"sourceType":"script"}