{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/gauravrawal/gaurav/udemy/github/react-snippy/src/components/cell-list-item.tsx\";\nimport './cell-list-item.css';\nimport CodeCell from './code-cell';\nimport TextEditor from './text-editor';\nimport ActionBar from './action-bar';\n\nconst CellListItem = ({\n  cell\n}) => {\n  let child;\n\n  if (cell.type === 'code') {\n    child = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(CodeCell, {\n        cell: cell\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  } else {\n    child = /*#__PURE__*/_jsxDEV(TextEditor, {\n      cell: cell\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cell-list-item\",\n    children: [child, /*#__PURE__*/_jsxDEV(ActionBar, {\n      id: cell.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CellListItem;\nexport default CellListItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"CellListItem\");","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/github/react-snippy/src/components/cell-list-item.tsx"],"names":["CodeCell","TextEditor","ActionBar","CellListItem","cell","child","type","id"],"mappings":";;;AAAA,OAAO,sBAAP;AAEA,OAAOA,QAAP,MAAqB,aAArB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,SAAP,MAAsB,cAAtB;;AAKA,MAAMC,YAAyC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC9D,MAAIC,KAAJ;;AACA,MAAID,IAAI,CAACE,IAAL,KAAc,MAAlB,EAA0B;AACxBD,IAAAA,KAAK,gBACH;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,IAAI,EAAED;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AAKD,GAND,MAMO;AACLC,IAAAA,KAAK,gBAAG,QAAC,UAAD;AAAY,MAAA,IAAI,EAAED;AAAlB;AAAA;AAAA;AAAA;AAAA,YAAR;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,eACGC,KADH,eAEE,QAAC,SAAD;AAAW,MAAA,EAAE,EAAED,IAAI,CAACG;AAApB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAlBD;;KAAMJ,Y;AAoBN,eAAeA,YAAf","sourcesContent":["import './cell-list-item.css';\nimport { Cell } from '../state';\nimport CodeCell from './code-cell';\nimport TextEditor from './text-editor';\nimport ActionBar from './action-bar';\n\ninterface CellListItemProps {\n  cell: Cell;\n}\nconst CellListItem: React.FC<CellListItemProps> = ({ cell }) => {\n  let child: JSX.Element;\n  if (cell.type === 'code') {\n    child = (\n      <>\n        <CodeCell cell={cell} />\n      </>\n    );\n  } else {\n    child = <TextEditor cell={cell} />;\n  }\n\n  return (\n    <div className=\"cell-list-item\">\n      {child}\n      <ActionBar id={cell.id} />\n    </div>\n  );\n};\n\nexport default CellListItem;\n"]},"metadata":{},"sourceType":"module"}