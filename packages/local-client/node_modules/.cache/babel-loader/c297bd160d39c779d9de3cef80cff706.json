{"ast":null,"code":"!function (e) {\n  e.languages.velocity = e.languages.extend(\"markup\", {});\n  var n = {\n    variable: {\n      pattern: /(^|[^\\\\](?:\\\\\\\\)*)\\$!?(?:[a-z][\\w-]*(?:\\([^)]*\\))?(?:\\.[a-z][\\w-]*(?:\\([^)]*\\))?|\\[[^\\]]+\\])*|\\{[^}]+\\})/i,\n      lookbehind: !0,\n      inside: {}\n    },\n    string: {\n      pattern: /\"[^\"]*\"|'[^']*'/,\n      greedy: !0\n    },\n    number: /\\b\\d+\\b/,\n    boolean: /\\b(?:true|false)\\b/,\n    operator: /[=!<>]=?|[+*/%-]|&&|\\|\\||\\.\\.|\\b(?:eq|g[et]|l[et]|n(?:e|ot))\\b/,\n    punctuation: /[(){}[\\]:,.]/\n  };\n  n.variable.inside = {\n    string: n.string,\n    function: {\n      pattern: /([^\\w-])[a-z][\\w-]*(?=\\()/,\n      lookbehind: !0\n    },\n    number: n.number,\n    boolean: n.boolean,\n    punctuation: n.punctuation\n  }, e.languages.insertBefore(\"velocity\", \"comment\", {\n    unparsed: {\n      pattern: /(^|[^\\\\])#\\[\\[[\\s\\S]*?\\]\\]#/,\n      lookbehind: !0,\n      greedy: !0,\n      inside: {\n        punctuation: /^#\\[\\[|\\]\\]#$/\n      }\n    },\n    \"velocity-comment\": [{\n      pattern: /(^|[^\\\\])#\\*[\\s\\S]*?\\*#/,\n      lookbehind: !0,\n      greedy: !0,\n      alias: \"comment\"\n    }, {\n      pattern: /(^|[^\\\\])##.*/,\n      lookbehind: !0,\n      greedy: !0,\n      alias: \"comment\"\n    }],\n    directive: {\n      pattern: /(^|[^\\\\](?:\\\\\\\\)*)#@?(?:[a-z][\\w-]*|\\{[a-z][\\w-]*\\})(?:\\s*\\((?:[^()]|\\([^()]*\\))*\\))?/i,\n      lookbehind: !0,\n      inside: {\n        keyword: {\n          pattern: /^#@?(?:[a-z][\\w-]*|\\{[a-z][\\w-]*\\})|\\bin\\b/,\n          inside: {\n            punctuation: /[{}]/\n          }\n        },\n        rest: n\n      }\n    },\n    variable: n.variable\n  }), e.languages.velocity.tag.inside[\"attr-value\"].inside.rest = e.languages.velocity;\n}(Prism);","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/jbook/node_modules/prismjs/components/prism-velocity.min.js"],"names":["e","languages","velocity","extend","n","variable","pattern","lookbehind","inside","string","greedy","number","boolean","operator","punctuation","function","insertBefore","unparsed","alias","directive","keyword","rest","tag","Prism"],"mappings":"AAAA,CAAC,UAASA,CAAT,EAAW;AAACA,EAAAA,CAAC,CAACC,SAAF,CAAYC,QAAZ,GAAqBF,CAAC,CAACC,SAAF,CAAYE,MAAZ,CAAmB,QAAnB,EAA4B,EAA5B,CAArB;AAAqD,MAAIC,CAAC,GAAC;AAACC,IAAAA,QAAQ,EAAC;AAACC,MAAAA,OAAO,EAAC,2GAAT;AAAqHC,MAAAA,UAAU,EAAC,CAAC,CAAjI;AAAmIC,MAAAA,MAAM,EAAC;AAA1I,KAAV;AAAwJC,IAAAA,MAAM,EAAC;AAACH,MAAAA,OAAO,EAAC,iBAAT;AAA2BI,MAAAA,MAAM,EAAC,CAAC;AAAnC,KAA/J;AAAqMC,IAAAA,MAAM,EAAC,SAA5M;AAAsNC,IAAAA,OAAO,EAAC,oBAA9N;AAAmPC,IAAAA,QAAQ,EAAC,gEAA5P;AAA6TC,IAAAA,WAAW,EAAC;AAAzU,GAAN;AAA+VV,EAAAA,CAAC,CAACC,QAAF,CAAWG,MAAX,GAAkB;AAACC,IAAAA,MAAM,EAACL,CAAC,CAACK,MAAV;AAAiBM,IAAAA,QAAQ,EAAC;AAACT,MAAAA,OAAO,EAAC,2BAAT;AAAqCC,MAAAA,UAAU,EAAC,CAAC;AAAjD,KAA1B;AAA8EI,IAAAA,MAAM,EAACP,CAAC,CAACO,MAAvF;AAA8FC,IAAAA,OAAO,EAACR,CAAC,CAACQ,OAAxG;AAAgHE,IAAAA,WAAW,EAACV,CAAC,CAACU;AAA9H,GAAlB,EAA6Jd,CAAC,CAACC,SAAF,CAAYe,YAAZ,CAAyB,UAAzB,EAAoC,SAApC,EAA8C;AAACC,IAAAA,QAAQ,EAAC;AAACX,MAAAA,OAAO,EAAC,6BAAT;AAAuCC,MAAAA,UAAU,EAAC,CAAC,CAAnD;AAAqDG,MAAAA,MAAM,EAAC,CAAC,CAA7D;AAA+DF,MAAAA,MAAM,EAAC;AAACM,QAAAA,WAAW,EAAC;AAAb;AAAtE,KAAV;AAA+G,wBAAmB,CAAC;AAACR,MAAAA,OAAO,EAAC,yBAAT;AAAmCC,MAAAA,UAAU,EAAC,CAAC,CAA/C;AAAiDG,MAAAA,MAAM,EAAC,CAAC,CAAzD;AAA2DQ,MAAAA,KAAK,EAAC;AAAjE,KAAD,EAA6E;AAACZ,MAAAA,OAAO,EAAC,eAAT;AAAyBC,MAAAA,UAAU,EAAC,CAAC,CAArC;AAAuCG,MAAAA,MAAM,EAAC,CAAC,CAA/C;AAAiDQ,MAAAA,KAAK,EAAC;AAAvD,KAA7E,CAAlI;AAAkRC,IAAAA,SAAS,EAAC;AAACb,MAAAA,OAAO,EAAC,wFAAT;AAAkGC,MAAAA,UAAU,EAAC,CAAC,CAA9G;AAAgHC,MAAAA,MAAM,EAAC;AAACY,QAAAA,OAAO,EAAC;AAACd,UAAAA,OAAO,EAAC,4CAAT;AAAsDE,UAAAA,MAAM,EAAC;AAACM,YAAAA,WAAW,EAAC;AAAb;AAA7D,SAAT;AAA4FO,QAAAA,IAAI,EAACjB;AAAjG;AAAvH,KAA5R;AAAwfC,IAAAA,QAAQ,EAACD,CAAC,CAACC;AAAngB,GAA9C,CAA7J,EAAytBL,CAAC,CAACC,SAAF,CAAYC,QAAZ,CAAqBoB,GAArB,CAAyBd,MAAzB,CAAgC,YAAhC,EAA8CA,MAA9C,CAAqDa,IAArD,GAA0DrB,CAAC,CAACC,SAAF,CAAYC,QAA/xB;AAAwyB,CAAxsC,CAAysCqB,KAAzsC,CAAD","sourcesContent":["!function(e){e.languages.velocity=e.languages.extend(\"markup\",{});var n={variable:{pattern:/(^|[^\\\\](?:\\\\\\\\)*)\\$!?(?:[a-z][\\w-]*(?:\\([^)]*\\))?(?:\\.[a-z][\\w-]*(?:\\([^)]*\\))?|\\[[^\\]]+\\])*|\\{[^}]+\\})/i,lookbehind:!0,inside:{}},string:{pattern:/\"[^\"]*\"|'[^']*'/,greedy:!0},number:/\\b\\d+\\b/,boolean:/\\b(?:true|false)\\b/,operator:/[=!<>]=?|[+*/%-]|&&|\\|\\||\\.\\.|\\b(?:eq|g[et]|l[et]|n(?:e|ot))\\b/,punctuation:/[(){}[\\]:,.]/};n.variable.inside={string:n.string,function:{pattern:/([^\\w-])[a-z][\\w-]*(?=\\()/,lookbehind:!0},number:n.number,boolean:n.boolean,punctuation:n.punctuation},e.languages.insertBefore(\"velocity\",\"comment\",{unparsed:{pattern:/(^|[^\\\\])#\\[\\[[\\s\\S]*?\\]\\]#/,lookbehind:!0,greedy:!0,inside:{punctuation:/^#\\[\\[|\\]\\]#$/}},\"velocity-comment\":[{pattern:/(^|[^\\\\])#\\*[\\s\\S]*?\\*#/,lookbehind:!0,greedy:!0,alias:\"comment\"},{pattern:/(^|[^\\\\])##.*/,lookbehind:!0,greedy:!0,alias:\"comment\"}],directive:{pattern:/(^|[^\\\\](?:\\\\\\\\)*)#@?(?:[a-z][\\w-]*|\\{[a-z][\\w-]*\\})(?:\\s*\\((?:[^()]|\\([^()]*\\))*\\))?/i,lookbehind:!0,inside:{keyword:{pattern:/^#@?(?:[a-z][\\w-]*|\\{[a-z][\\w-]*\\})|\\bin\\b/,inside:{punctuation:/[{}]/}},rest:n}},variable:n.variable}),e.languages.velocity.tag.inside[\"attr-value\"].inside.rest=e.languages.velocity}(Prism);"]},"metadata":{},"sourceType":"script"}