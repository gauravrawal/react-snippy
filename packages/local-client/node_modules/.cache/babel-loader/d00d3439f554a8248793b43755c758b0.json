{"ast":null,"code":"Prism.languages.dhall = {\n  comment: /--.*|\\{-(?:[^-{]|-(?!\\})|\\{(?!-)|\\{-(?:[^-{]|-(?!\\})|\\{(?!-))*-\\})*-\\}/,\n  string: {\n    pattern: /\"(?:[^\"\\\\]|\\\\.)*\"|''(?:[^']|'(?!')|'''|''\\$\\{)*''(?!'|\\$)/,\n    greedy: !0,\n    inside: {\n      interpolation: {\n        pattern: /\\$\\{[^{}]*\\}/,\n        inside: {\n          expression: {\n            pattern: /(^\\$\\{)[\\s\\S]+(?=\\}$)/,\n            lookbehind: !0,\n            alias: \"language-dhall\",\n            inside: null\n          },\n          punctuation: /\\$\\{|\\}/\n        }\n      }\n    }\n  },\n  label: {\n    pattern: /`[^`]*`/,\n    greedy: !0\n  },\n  url: {\n    pattern: /\\bhttps?:\\/\\/[\\w.:%!$&'*+;=@~-]+(?:\\/[\\w.:%!$&'*+;=@~-]*)*(?:\\?[/?\\w.:%!$&'*+;=@~-]*)?/,\n    greedy: !0\n  },\n  env: {\n    pattern: /\\benv:(?:(?!\\d)\\w+|\"(?:[^\"\\\\=]|\\\\.)*\")/,\n    greedy: !0,\n    inside: {\n      function: /^env/,\n      operator: /^:/,\n      variable: /[\\s\\S]+/\n    }\n  },\n  hash: {\n    pattern: /\\bsha256:[\\da-fA-F]{64}\\b/,\n    inside: {\n      function: /sha256/,\n      operator: /:/,\n      number: /[\\da-fA-F]{64}/\n    }\n  },\n  keyword: /\\b(?:as|assert|else|forall|if|in|let|merge|missing|then|toMap|using|with)\\b|\\u2200/,\n  builtin: /\\b(?:Some|None)\\b/,\n  boolean: /\\b(?:False|True)\\b/,\n  number: /\\bNaN\\b|-?\\bInfinity\\b|[+-]?\\b(?:0x[\\da-fA-F]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/,\n  operator: /\\/\\\\|\\/\\/\\\\\\\\|&&|\\|\\||===|[!=]=|\\/\\/|->|\\+\\+|::|[+*#@=:?<>|\\\\\\u2227\\u2a53\\u2261\\u2afd\\u03bb\\u2192]/,\n  punctuation: /\\.\\.|[{}\\[\\](),./]/,\n  \"class-name\": /\\b[A-Z]\\w*\\b/\n}, Prism.languages.dhall.string.inside.interpolation.inside.expression.inside = Prism.languages.dhall;","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/github/react-snippy/node_modules/prismjs/components/prism-dhall.min.js"],"names":["Prism","languages","dhall","comment","string","pattern","greedy","inside","interpolation","expression","lookbehind","alias","punctuation","label","url","env","function","operator","variable","hash","number","keyword","builtin","boolean"],"mappings":"AAAAA,KAAK,CAACC,SAAN,CAAgBC,KAAhB,GAAsB;AAACC,EAAAA,OAAO,EAAC,wEAAT;AAAkFC,EAAAA,MAAM,EAAC;AAACC,IAAAA,OAAO,EAAC,2DAAT;AAAqEC,IAAAA,MAAM,EAAC,CAAC,CAA7E;AAA+EC,IAAAA,MAAM,EAAC;AAACC,MAAAA,aAAa,EAAC;AAACH,QAAAA,OAAO,EAAC,cAAT;AAAwBE,QAAAA,MAAM,EAAC;AAACE,UAAAA,UAAU,EAAC;AAACJ,YAAAA,OAAO,EAAC,uBAAT;AAAiCK,YAAAA,UAAU,EAAC,CAAC,CAA7C;AAA+CC,YAAAA,KAAK,EAAC,gBAArD;AAAsEJ,YAAAA,MAAM,EAAC;AAA7E,WAAZ;AAA+FK,UAAAA,WAAW,EAAC;AAA3G;AAA/B;AAAf;AAAtF,GAAzF;AAAsVC,EAAAA,KAAK,EAAC;AAACR,IAAAA,OAAO,EAAC,SAAT;AAAmBC,IAAAA,MAAM,EAAC,CAAC;AAA3B,GAA5V;AAA0XQ,EAAAA,GAAG,EAAC;AAACT,IAAAA,OAAO,EAAC,wFAAT;AAAkGC,IAAAA,MAAM,EAAC,CAAC;AAA1G,GAA9X;AAA2eS,EAAAA,GAAG,EAAC;AAACV,IAAAA,OAAO,EAAC,wCAAT;AAAkDC,IAAAA,MAAM,EAAC,CAAC,CAA1D;AAA4DC,IAAAA,MAAM,EAAC;AAACS,MAAAA,QAAQ,EAAC,MAAV;AAAiBC,MAAAA,QAAQ,EAAC,IAA1B;AAA+BC,MAAAA,QAAQ,EAAC;AAAxC;AAAnE,GAA/e;AAAsmBC,EAAAA,IAAI,EAAC;AAACd,IAAAA,OAAO,EAAC,2BAAT;AAAqCE,IAAAA,MAAM,EAAC;AAACS,MAAAA,QAAQ,EAAC,QAAV;AAAmBC,MAAAA,QAAQ,EAAC,GAA5B;AAAgCG,MAAAA,MAAM,EAAC;AAAvC;AAA5C,GAA3mB;AAAitBC,EAAAA,OAAO,EAAC,oFAAztB;AAA8yBC,EAAAA,OAAO,EAAC,mBAAtzB;AAA00BC,EAAAA,OAAO,EAAC,oBAAl1B;AAAu2BH,EAAAA,MAAM,EAAC,+EAA92B;AAA87BH,EAAAA,QAAQ,EAAC,oGAAv8B;AAA4iCL,EAAAA,WAAW,EAAC,oBAAxjC;AAA6kC,gBAAa;AAA1lC,CAAtB,EAAgoCZ,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBE,MAAtB,CAA6BG,MAA7B,CAAoCC,aAApC,CAAkDD,MAAlD,CAAyDE,UAAzD,CAAoEF,MAApE,GAA2EP,KAAK,CAACC,SAAN,CAAgBC,KAA3tC","sourcesContent":["Prism.languages.dhall={comment:/--.*|\\{-(?:[^-{]|-(?!\\})|\\{(?!-)|\\{-(?:[^-{]|-(?!\\})|\\{(?!-))*-\\})*-\\}/,string:{pattern:/\"(?:[^\"\\\\]|\\\\.)*\"|''(?:[^']|'(?!')|'''|''\\$\\{)*''(?!'|\\$)/,greedy:!0,inside:{interpolation:{pattern:/\\$\\{[^{}]*\\}/,inside:{expression:{pattern:/(^\\$\\{)[\\s\\S]+(?=\\}$)/,lookbehind:!0,alias:\"language-dhall\",inside:null},punctuation:/\\$\\{|\\}/}}}},label:{pattern:/`[^`]*`/,greedy:!0},url:{pattern:/\\bhttps?:\\/\\/[\\w.:%!$&'*+;=@~-]+(?:\\/[\\w.:%!$&'*+;=@~-]*)*(?:\\?[/?\\w.:%!$&'*+;=@~-]*)?/,greedy:!0},env:{pattern:/\\benv:(?:(?!\\d)\\w+|\"(?:[^\"\\\\=]|\\\\.)*\")/,greedy:!0,inside:{function:/^env/,operator:/^:/,variable:/[\\s\\S]+/}},hash:{pattern:/\\bsha256:[\\da-fA-F]{64}\\b/,inside:{function:/sha256/,operator:/:/,number:/[\\da-fA-F]{64}/}},keyword:/\\b(?:as|assert|else|forall|if|in|let|merge|missing|then|toMap|using|with)\\b|\\u2200/,builtin:/\\b(?:Some|None)\\b/,boolean:/\\b(?:False|True)\\b/,number:/\\bNaN\\b|-?\\bInfinity\\b|[+-]?\\b(?:0x[\\da-fA-F]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/,operator:/\\/\\\\|\\/\\/\\\\\\\\|&&|\\|\\||===|[!=]=|\\/\\/|->|\\+\\+|::|[+*#@=:?<>|\\\\\\u2227\\u2a53\\u2261\\u2afd\\u03bb\\u2192]/,punctuation:/\\.\\.|[{}\\[\\](),./]/,\"class-name\":/\\b[A-Z]\\w*\\b/},Prism.languages.dhall.string.inside.interpolation.inside.expression.inside=Prism.languages.dhall;"]},"metadata":{},"sourceType":"script"}