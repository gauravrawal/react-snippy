{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LogicalOperators = exports.AssignmentOperators = exports.BinaryOperators = void 0;\nexports.BinaryOperators = [\"==\", \"!=\", \"===\", \"!==\", \"<\", \"<=\", \">\", \">=\", \"<<\", \">>\", \">>>\", \"+\", \"-\", \"*\", \"/\", \"%\", \"&\", \"|\", \"^\", \"in\", \"instanceof\"];\nexports.AssignmentOperators = [\"=\", \"+=\", \"-=\", \"*=\", \"/=\", \"%=\", \"<<=\", \">>=\", \">>>=\", \"|=\", \"^=\", \"&=\"];\nexports.LogicalOperators = [\"||\", \"&&\"];","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/github/react-snippy/node_modules/jscodeshift/node_modules/ast-types/def/core-operators.js"],"names":["Object","defineProperty","exports","value","LogicalOperators","AssignmentOperators","BinaryOperators"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,gBAAR,GAA2BF,OAAO,CAACG,mBAAR,GAA8BH,OAAO,CAACI,eAAR,GAA0B,KAAK,CAAxF;AACAJ,OAAO,CAACI,eAAR,GAA0B,CACtB,IADsB,EAChB,IADgB,EACV,KADU,EACH,KADG,EAEtB,GAFsB,EAEjB,IAFiB,EAEX,GAFW,EAEN,IAFM,EAGtB,IAHsB,EAGhB,IAHgB,EAGV,KAHU,EAItB,GAJsB,EAIjB,GAJiB,EAIZ,GAJY,EAIP,GAJO,EAIF,GAJE,EAKtB,GALsB,EAMtB,GANsB,EAMjB,GANiB,EAMZ,IANY,EAOtB,YAPsB,CAA1B;AASAJ,OAAO,CAACG,mBAAR,GAA8B,CAC1B,GAD0B,EACrB,IADqB,EACf,IADe,EACT,IADS,EACH,IADG,EACG,IADH,EAE1B,KAF0B,EAEnB,KAFmB,EAEZ,MAFY,EAG1B,IAH0B,EAGpB,IAHoB,EAGd,IAHc,CAA9B;AAKAH,OAAO,CAACE,gBAAR,GAA2B,CACvB,IADuB,EACjB,IADiB,CAA3B","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LogicalOperators = exports.AssignmentOperators = exports.BinaryOperators = void 0;\nexports.BinaryOperators = [\n    \"==\", \"!=\", \"===\", \"!==\",\n    \"<\", \"<=\", \">\", \">=\",\n    \"<<\", \">>\", \">>>\",\n    \"+\", \"-\", \"*\", \"/\", \"%\",\n    \"&\",\n    \"|\", \"^\", \"in\",\n    \"instanceof\",\n];\nexports.AssignmentOperators = [\n    \"=\", \"+=\", \"-=\", \"*=\", \"/=\", \"%=\",\n    \"<<=\", \">>=\", \">>>=\",\n    \"|=\", \"^=\", \"&=\",\n];\nexports.LogicalOperators = [\n    \"||\", \"&&\",\n];\n"]},"metadata":{},"sourceType":"script"}