{"ast":null,"code":"(function (Prism) {\n  var variable = /%%?[~:\\w]+%?|!\\S+!/;\n  var parameter = {\n    pattern: /\\/[a-z?]+(?=[ :]|$):?|-[a-z]\\b|--[a-z-]+\\b/im,\n    alias: 'attr-name',\n    inside: {\n      'punctuation': /:/\n    }\n  };\n  var string = /\"(?:[\\\\\"]\"|[^\"])*\"(?!\")/;\n  var number = /(?:\\b|-)\\d+\\b/;\n  Prism.languages.batch = {\n    'comment': [/^::.*/m, {\n      pattern: /((?:^|[&(])[ \\t]*)rem\\b(?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n      lookbehind: true\n    }],\n    'label': {\n      pattern: /^:.*/m,\n      alias: 'property'\n    },\n    'command': [{\n      // FOR command\n      pattern: /((?:^|[&(])[ \\t]*)for(?: \\/[a-z?](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* \\S+ in \\([^)]+\\) do/im,\n      lookbehind: true,\n      inside: {\n        'keyword': /^for\\b|\\b(?:in|do)\\b/i,\n        'string': string,\n        'parameter': parameter,\n        'variable': variable,\n        'number': number,\n        'punctuation': /[()',]/\n      }\n    }, {\n      // IF command\n      pattern: /((?:^|[&(])[ \\t]*)if(?: \\/[a-z?](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* (?:not )?(?:cmdextversion \\d+|defined \\w+|errorlevel \\d+|exist \\S+|(?:\"[^\"]*\"|(?!\")(?:(?!==)\\S)+)?(?:==| (?:equ|neq|lss|leq|gtr|geq) )(?:\"[^\"]*\"|[^\\s\"]\\S*))/im,\n      lookbehind: true,\n      inside: {\n        'keyword': /^if\\b|\\b(?:not|cmdextversion|defined|errorlevel|exist)\\b/i,\n        'string': string,\n        'parameter': parameter,\n        'variable': variable,\n        'number': number,\n        'operator': /\\^|==|\\b(?:equ|neq|lss|leq|gtr|geq)\\b/i\n      }\n    }, {\n      // ELSE command\n      pattern: /((?:^|[&()])[ \\t]*)else\\b/im,\n      lookbehind: true,\n      inside: {\n        'keyword': /^else\\b/i\n      }\n    }, {\n      // SET command\n      pattern: /((?:^|[&(])[ \\t]*)set(?: \\/[a-z](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* (?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n      lookbehind: true,\n      inside: {\n        'keyword': /^set\\b/i,\n        'string': string,\n        'parameter': parameter,\n        'variable': [variable, /\\w+(?=(?:[*\\/%+\\-&^|]|<<|>>)?=)/],\n        'number': number,\n        'operator': /[*\\/%+\\-&^|]=?|<<=?|>>=?|[!~_=]/,\n        'punctuation': /[()',]/\n      }\n    }, {\n      // Other commands\n      pattern: /((?:^|[&(])[ \\t]*@?)\\w+\\b(?:\"(?:[\\\\\"]\"|[^\"])*\"(?!\")|[^\"^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n      lookbehind: true,\n      inside: {\n        'keyword': /^\\w+\\b/i,\n        'string': string,\n        'parameter': parameter,\n        'label': {\n          pattern: /(^\\s*):\\S+/m,\n          lookbehind: true,\n          alias: 'property'\n        },\n        'variable': variable,\n        'number': number,\n        'operator': /\\^/\n      }\n    }],\n    'operator': /[&@]/,\n    'punctuation': /[()']/\n  };\n})(Prism);","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/jbook/node_modules/prismjs/components/prism-batch.js"],"names":["Prism","variable","parameter","pattern","alias","inside","string","number","languages","batch","lookbehind"],"mappings":"AAAC,WAAUA,KAAV,EAAiB;AACjB,MAAIC,QAAQ,GAAG,oBAAf;AACA,MAAIC,SAAS,GAAG;AACfC,IAAAA,OAAO,EAAE,8CADM;AAEfC,IAAAA,KAAK,EAAE,WAFQ;AAGfC,IAAAA,MAAM,EAAE;AACP,qBAAe;AADR;AAHO,GAAhB;AAOA,MAAIC,MAAM,GAAG,yBAAb;AACA,MAAIC,MAAM,GAAG,eAAb;AAEAP,EAAAA,KAAK,CAACQ,SAAN,CAAgBC,KAAhB,GAAwB;AACvB,eAAW,CACV,QADU,EAEV;AACCN,MAAAA,OAAO,EAAE,4DADV;AAECO,MAAAA,UAAU,EAAE;AAFb,KAFU,CADY;AAQvB,aAAS;AACRP,MAAAA,OAAO,EAAE,OADD;AAERC,MAAAA,KAAK,EAAE;AAFC,KARc;AAYvB,eAAW,CACV;AACC;AACAD,MAAAA,OAAO,EAAE,0FAFV;AAGCO,MAAAA,UAAU,EAAE,IAHb;AAICL,MAAAA,MAAM,EAAE;AACP,mBAAW,uBADJ;AAEP,kBAAUC,MAFH;AAGP,qBAAaJ,SAHN;AAIP,oBAAYD,QAJL;AAKP,kBAAUM,MALH;AAMP,uBAAe;AANR;AAJT,KADU,EAcV;AACC;AACAJ,MAAAA,OAAO,EAAE,kOAFV;AAGCO,MAAAA,UAAU,EAAE,IAHb;AAICL,MAAAA,MAAM,EAAE;AACP,mBAAW,2DADJ;AAEP,kBAAUC,MAFH;AAGP,qBAAaJ,SAHN;AAIP,oBAAYD,QAJL;AAKP,kBAAUM,MALH;AAMP,oBAAY;AANL;AAJT,KAdU,EA2BV;AACC;AACAJ,MAAAA,OAAO,EAAE,6BAFV;AAGCO,MAAAA,UAAU,EAAE,IAHb;AAICL,MAAAA,MAAM,EAAE;AACP,mBAAW;AADJ;AAJT,KA3BU,EAmCV;AACC;AACAF,MAAAA,OAAO,EAAE,uGAFV;AAGCO,MAAAA,UAAU,EAAE,IAHb;AAICL,MAAAA,MAAM,EAAE;AACP,mBAAW,SADJ;AAEP,kBAAUC,MAFH;AAGP,qBAAaJ,SAHN;AAIP,oBAAY,CACXD,QADW,EAEX,iCAFW,CAJL;AAQP,kBAAUM,MARH;AASP,oBAAY,iCATL;AAUP,uBAAe;AAVR;AAJT,KAnCU,EAoDV;AACC;AACAJ,MAAAA,OAAO,EAAE,uFAFV;AAGCO,MAAAA,UAAU,EAAE,IAHb;AAICL,MAAAA,MAAM,EAAE;AACP,mBAAW,SADJ;AAEP,kBAAUC,MAFH;AAGP,qBAAaJ,SAHN;AAIP,iBAAS;AACRC,UAAAA,OAAO,EAAE,aADD;AAERO,UAAAA,UAAU,EAAE,IAFJ;AAGRN,UAAAA,KAAK,EAAE;AAHC,SAJF;AASP,oBAAYH,QATL;AAUP,kBAAUM,MAVH;AAWP,oBAAY;AAXL;AAJT,KApDU,CAZY;AAmFvB,gBAAY,MAnFW;AAoFvB,mBAAe;AApFQ,GAAxB;AAsFA,CAlGA,EAkGCP,KAlGD,CAAD","sourcesContent":["(function (Prism) {\n\tvar variable = /%%?[~:\\w]+%?|!\\S+!/;\n\tvar parameter = {\n\t\tpattern: /\\/[a-z?]+(?=[ :]|$):?|-[a-z]\\b|--[a-z-]+\\b/im,\n\t\talias: 'attr-name',\n\t\tinside: {\n\t\t\t'punctuation': /:/\n\t\t}\n\t};\n\tvar string = /\"(?:[\\\\\"]\"|[^\"])*\"(?!\")/;\n\tvar number = /(?:\\b|-)\\d+\\b/;\n\n\tPrism.languages.batch = {\n\t\t'comment': [\n\t\t\t/^::.*/m,\n\t\t\t{\n\t\t\t\tpattern: /((?:^|[&(])[ \\t]*)rem\\b(?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n\t\t\t\tlookbehind: true\n\t\t\t}\n\t\t],\n\t\t'label': {\n\t\t\tpattern: /^:.*/m,\n\t\t\talias: 'property'\n\t\t},\n\t\t'command': [\n\t\t\t{\n\t\t\t\t// FOR command\n\t\t\t\tpattern: /((?:^|[&(])[ \\t]*)for(?: \\/[a-z?](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* \\S+ in \\([^)]+\\) do/im,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'keyword': /^for\\b|\\b(?:in|do)\\b/i,\n\t\t\t\t\t'string': string,\n\t\t\t\t\t'parameter': parameter,\n\t\t\t\t\t'variable': variable,\n\t\t\t\t\t'number': number,\n\t\t\t\t\t'punctuation': /[()',]/\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\t// IF command\n\t\t\t\tpattern: /((?:^|[&(])[ \\t]*)if(?: \\/[a-z?](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* (?:not )?(?:cmdextversion \\d+|defined \\w+|errorlevel \\d+|exist \\S+|(?:\"[^\"]*\"|(?!\")(?:(?!==)\\S)+)?(?:==| (?:equ|neq|lss|leq|gtr|geq) )(?:\"[^\"]*\"|[^\\s\"]\\S*))/im,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'keyword': /^if\\b|\\b(?:not|cmdextversion|defined|errorlevel|exist)\\b/i,\n\t\t\t\t\t'string': string,\n\t\t\t\t\t'parameter': parameter,\n\t\t\t\t\t'variable': variable,\n\t\t\t\t\t'number': number,\n\t\t\t\t\t'operator': /\\^|==|\\b(?:equ|neq|lss|leq|gtr|geq)\\b/i\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\t// ELSE command\n\t\t\t\tpattern: /((?:^|[&()])[ \\t]*)else\\b/im,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'keyword': /^else\\b/i\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\t// SET command\n\t\t\t\tpattern: /((?:^|[&(])[ \\t]*)set(?: \\/[a-z](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* (?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'keyword': /^set\\b/i,\n\t\t\t\t\t'string': string,\n\t\t\t\t\t'parameter': parameter,\n\t\t\t\t\t'variable': [\n\t\t\t\t\t\tvariable,\n\t\t\t\t\t\t/\\w+(?=(?:[*\\/%+\\-&^|]|<<|>>)?=)/\n\t\t\t\t\t],\n\t\t\t\t\t'number': number,\n\t\t\t\t\t'operator': /[*\\/%+\\-&^|]=?|<<=?|>>=?|[!~_=]/,\n\t\t\t\t\t'punctuation': /[()',]/\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\t// Other commands\n\t\t\t\tpattern: /((?:^|[&(])[ \\t]*@?)\\w+\\b(?:\"(?:[\\\\\"]\"|[^\"])*\"(?!\")|[^\"^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'keyword': /^\\w+\\b/i,\n\t\t\t\t\t'string': string,\n\t\t\t\t\t'parameter': parameter,\n\t\t\t\t\t'label': {\n\t\t\t\t\t\tpattern: /(^\\s*):\\S+/m,\n\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\talias: 'property'\n\t\t\t\t\t},\n\t\t\t\t\t'variable': variable,\n\t\t\t\t\t'number': number,\n\t\t\t\t\t'operator': /\\^/\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t'operator': /[&@]/,\n\t\t'punctuation': /[()']/\n\t};\n}(Prism));\n"]},"metadata":{},"sourceType":"script"}