{"ast":null,"code":"(function (Prism) {\n  // We don't allow for pipes inside parentheses\n  // to not break table pattern |(. foo |). bar |\n  var modifierRegex = /\\([^|()\\n]+\\)|\\[[^\\]\\n]+\\]|\\{[^}\\n]+\\}/.source; // Opening and closing parentheses which are not a modifier\n  // This pattern is necessary to prevent exponential backtracking\n\n  var parenthesesRegex = /\\)|\\((?![^|()\\n]+\\))/.source;\n  /**\n   * @param {string} source\n   * @param {string} [flags]\n   */\n\n  function withModifier(source, flags) {\n    return RegExp(source.replace(/<MOD>/g, function () {\n      return '(?:' + modifierRegex + ')';\n    }).replace(/<PAR>/g, function () {\n      return '(?:' + parenthesesRegex + ')';\n    }), flags || '');\n  }\n\n  var modifierTokens = {\n    'css': {\n      pattern: /\\{[^{}]+\\}/,\n      inside: {\n        rest: Prism.languages.css\n      }\n    },\n    'class-id': {\n      pattern: /(\\()[^()]+(?=\\))/,\n      lookbehind: true,\n      alias: 'attr-value'\n    },\n    'lang': {\n      pattern: /(\\[)[^\\[\\]]+(?=\\])/,\n      lookbehind: true,\n      alias: 'attr-value'\n    },\n    // Anything else is punctuation (the first pattern is for row/col spans inside tables)\n    'punctuation': /[\\\\\\/]\\d+|\\S/\n  };\n  var textile = Prism.languages.textile = Prism.languages.extend('markup', {\n    'phrase': {\n      pattern: /(^|\\r|\\n)\\S[\\s\\S]*?(?=$|\\r?\\n\\r?\\n|\\r\\r)/,\n      lookbehind: true,\n      inside: {\n        // h1. Header 1\n        'block-tag': {\n          pattern: withModifier(/^[a-z]\\w*(?:<MOD>|<PAR>|[<>=])*\\./.source),\n          inside: {\n            'modifier': {\n              pattern: withModifier(/(^[a-z]\\w*)(?:<MOD>|<PAR>|[<>=])+(?=\\.)/.source),\n              lookbehind: true,\n              inside: modifierTokens\n            },\n            'tag': /^[a-z]\\w*/,\n            'punctuation': /\\.$/\n          }\n        },\n        // # List item\n        // * List item\n        'list': {\n          pattern: withModifier(/^[*#]+<MOD>*\\s+\\S.*/.source, 'm'),\n          inside: {\n            'modifier': {\n              pattern: withModifier(/(^[*#]+)<MOD>+/.source),\n              lookbehind: true,\n              inside: modifierTokens\n            },\n            'punctuation': /^[*#]+/\n          }\n        },\n        // | cell | cell | cell |\n        'table': {\n          // Modifiers can be applied to the row: {color:red}.|1|2|3|\n          // or the cell: |{color:red}.1|2|3|\n          pattern: withModifier(/^(?:(?:<MOD>|<PAR>|[<>=^~])+\\.\\s*)?(?:\\|(?:(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+\\.|(?!(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+\\.))[^|]*)+\\|/.source, 'm'),\n          inside: {\n            'modifier': {\n              // Modifiers for rows after the first one are\n              // preceded by a pipe and a line feed\n              pattern: withModifier(/(^|\\|(?:\\r?\\n|\\r)?)(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+(?=\\.)/.source),\n              lookbehind: true,\n              inside: modifierTokens\n            },\n            'punctuation': /\\||^\\./\n          }\n        },\n        'inline': {\n          pattern: withModifier(/(^|[^a-zA-Z\\d])(\\*\\*|__|\\?\\?|[*_%@+\\-^~])<MOD>*.+?\\2(?![a-zA-Z\\d])/.source),\n          lookbehind: true,\n          inside: {\n            // Note: superscripts and subscripts are not handled specifically\n            // *bold*, **bold**\n            'bold': {\n              pattern: withModifier(/(^(\\*\\*?)<MOD>*).+?(?=\\2)/.source),\n              lookbehind: true\n            },\n            // _italic_, __italic__\n            'italic': {\n              pattern: withModifier(/(^(__?)<MOD>*).+?(?=\\2)/.source),\n              lookbehind: true\n            },\n            // ??cite??\n            'cite': {\n              pattern: withModifier(/(^\\?\\?<MOD>*).+?(?=\\?\\?)/.source),\n              lookbehind: true,\n              alias: 'string'\n            },\n            // @code@\n            'code': {\n              pattern: withModifier(/(^@<MOD>*).+?(?=@)/.source),\n              lookbehind: true,\n              alias: 'keyword'\n            },\n            // +inserted+\n            'inserted': {\n              pattern: withModifier(/(^\\+<MOD>*).+?(?=\\+)/.source),\n              lookbehind: true\n            },\n            // -deleted-\n            'deleted': {\n              pattern: withModifier(/(^-<MOD>*).+?(?=-)/.source),\n              lookbehind: true\n            },\n            // %span%\n            'span': {\n              pattern: withModifier(/(^%<MOD>*).+?(?=%)/.source),\n              lookbehind: true\n            },\n            'modifier': {\n              pattern: withModifier(/(^\\*\\*|__|\\?\\?|[*_%@+\\-^~])<MOD>+/.source),\n              lookbehind: true,\n              inside: modifierTokens\n            },\n            'punctuation': /[*_%?@+\\-^~]+/\n          }\n        },\n        // [alias]http://example.com\n        'link-ref': {\n          pattern: /^\\[[^\\]]+\\]\\S+$/m,\n          inside: {\n            'string': {\n              pattern: /(^\\[)[^\\]]+(?=\\])/,\n              lookbehind: true\n            },\n            'url': {\n              pattern: /(^\\])\\S+$/,\n              lookbehind: true\n            },\n            'punctuation': /[\\[\\]]/\n          }\n        },\n        // \"text\":http://example.com\n        // \"text\":link-ref\n        'link': {\n          pattern: withModifier(/\"<MOD>*[^\"]+\":.+?(?=[^\\w/]?(?:\\s|$))/.source),\n          inside: {\n            'text': {\n              pattern: withModifier(/(^\"<MOD>*)[^\"]+(?=\")/.source),\n              lookbehind: true\n            },\n            'modifier': {\n              pattern: withModifier(/(^\")<MOD>+/.source),\n              lookbehind: true,\n              inside: modifierTokens\n            },\n            'url': {\n              pattern: /(:).+/,\n              lookbehind: true\n            },\n            'punctuation': /[\":]/\n          }\n        },\n        // !image.jpg!\n        // !image.jpg(Title)!:http://example.com\n        'image': {\n          pattern: withModifier(/!(?:<MOD>|<PAR>|[<>=])*(?![<>=])[^!\\s()]+(?:\\([^)]+\\))?!(?::.+?(?=[^\\w/]?(?:\\s|$)))?/.source),\n          inside: {\n            'source': {\n              pattern: withModifier(/(^!(?:<MOD>|<PAR>|[<>=])*)(?![<>=])[^!\\s()]+(?:\\([^)]+\\))?(?=!)/.source),\n              lookbehind: true,\n              alias: 'url'\n            },\n            'modifier': {\n              pattern: withModifier(/(^!)(?:<MOD>|<PAR>|[<>=])+/.source),\n              lookbehind: true,\n              inside: modifierTokens\n            },\n            'url': {\n              pattern: /(:).+/,\n              lookbehind: true\n            },\n            'punctuation': /[!:]/\n          }\n        },\n        // Footnote[1]\n        'footnote': {\n          pattern: /\\b\\[\\d+\\]/,\n          alias: 'comment',\n          inside: {\n            'punctuation': /\\[|\\]/\n          }\n        },\n        // CSS(Cascading Style Sheet)\n        'acronym': {\n          pattern: /\\b[A-Z\\d]+\\([^)]+\\)/,\n          inside: {\n            'comment': {\n              pattern: /(\\()[^()]+(?=\\))/,\n              lookbehind: true\n            },\n            'punctuation': /[()]/\n          }\n        },\n        // Prism(C)\n        'mark': {\n          pattern: /\\b\\((?:TM|R|C)\\)/,\n          alias: 'comment',\n          inside: {\n            'punctuation': /[()]/\n          }\n        }\n      }\n    }\n  });\n  var phraseInside = textile['phrase'].inside;\n  var nestedPatterns = {\n    'inline': phraseInside['inline'],\n    'link': phraseInside['link'],\n    'image': phraseInside['image'],\n    'footnote': phraseInside['footnote'],\n    'acronym': phraseInside['acronym'],\n    'mark': phraseInside['mark']\n  }; // Only allow alpha-numeric HTML tags, not XML tags\n\n  textile.tag.pattern = /<\\/?(?!\\d)[a-z0-9]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i; // Allow some nesting\n\n  var phraseInlineInside = phraseInside['inline'].inside;\n  phraseInlineInside['bold'].inside = nestedPatterns;\n  phraseInlineInside['italic'].inside = nestedPatterns;\n  phraseInlineInside['inserted'].inside = nestedPatterns;\n  phraseInlineInside['deleted'].inside = nestedPatterns;\n  phraseInlineInside['span'].inside = nestedPatterns; // Allow some styles inside table cells\n\n  var phraseTableInside = phraseInside['table'].inside;\n  phraseTableInside['inline'] = nestedPatterns['inline'];\n  phraseTableInside['link'] = nestedPatterns['link'];\n  phraseTableInside['image'] = nestedPatterns['image'];\n  phraseTableInside['footnote'] = nestedPatterns['footnote'];\n  phraseTableInside['acronym'] = nestedPatterns['acronym'];\n  phraseTableInside['mark'] = nestedPatterns['mark'];\n})(Prism);","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/github/react-snippy/node_modules/prismjs/components/prism-textile.js"],"names":["Prism","modifierRegex","source","parenthesesRegex","withModifier","flags","RegExp","replace","modifierTokens","pattern","inside","rest","languages","css","lookbehind","alias","textile","extend","phraseInside","nestedPatterns","tag","phraseInlineInside","phraseTableInside"],"mappings":"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","sourcesContent":["(function (Prism) {\n\t// We don't allow for pipes inside parentheses\n\t// to not break table pattern |(. foo |). bar |\n\tvar modifierRegex = /\\([^|()\\n]+\\)|\\[[^\\]\\n]+\\]|\\{[^}\\n]+\\}/.source;\n\t// Opening and closing parentheses which are not a modifier\n\t// This pattern is necessary to prevent exponential backtracking\n\tvar parenthesesRegex = /\\)|\\((?![^|()\\n]+\\))/.source;\n\t/**\n\t * @param {string} source\n\t * @param {string} [flags]\n\t */\n\tfunction withModifier(source, flags) {\n\t\treturn RegExp(\n\t\t\tsource\n\t\t\t\t.replace(/<MOD>/g, function () { return '(?:' + modifierRegex + ')'; })\n\t\t\t\t.replace(/<PAR>/g, function () { return '(?:' + parenthesesRegex + ')'; }),\n\t\t\tflags || '');\n\t}\n\n\tvar modifierTokens = {\n\t\t'css': {\n\t\t\tpattern: /\\{[^{}]+\\}/,\n\t\t\tinside: {\n\t\t\t\trest: Prism.languages.css\n\t\t\t}\n\t\t},\n\t\t'class-id': {\n\t\t\tpattern: /(\\()[^()]+(?=\\))/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'attr-value'\n\t\t},\n\t\t'lang': {\n\t\t\tpattern: /(\\[)[^\\[\\]]+(?=\\])/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'attr-value'\n\t\t},\n\t\t// Anything else is punctuation (the first pattern is for row/col spans inside tables)\n\t\t'punctuation': /[\\\\\\/]\\d+|\\S/\n\t};\n\n\n\tvar textile = Prism.languages.textile = Prism.languages.extend('markup', {\n\t\t'phrase': {\n\t\t\tpattern: /(^|\\r|\\n)\\S[\\s\\S]*?(?=$|\\r?\\n\\r?\\n|\\r\\r)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\n\t\t\t\t// h1. Header 1\n\t\t\t\t'block-tag': {\n\t\t\t\t\tpattern: withModifier(/^[a-z]\\w*(?:<MOD>|<PAR>|[<>=])*\\./.source),\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'modifier': {\n\t\t\t\t\t\t\tpattern: withModifier(/(^[a-z]\\w*)(?:<MOD>|<PAR>|[<>=])+(?=\\.)/.source),\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\tinside: modifierTokens\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'tag': /^[a-z]\\w*/,\n\t\t\t\t\t\t'punctuation': /\\.$/\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t// # List item\n\t\t\t\t// * List item\n\t\t\t\t'list': {\n\t\t\t\t\tpattern: withModifier(/^[*#]+<MOD>*\\s+\\S.*/.source, 'm'),\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'modifier': {\n\t\t\t\t\t\t\tpattern: withModifier(/(^[*#]+)<MOD>+/.source),\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\tinside: modifierTokens\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': /^[*#]+/\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t// | cell | cell | cell |\n\t\t\t\t'table': {\n\t\t\t\t\t// Modifiers can be applied to the row: {color:red}.|1|2|3|\n\t\t\t\t\t// or the cell: |{color:red}.1|2|3|\n\t\t\t\t\tpattern: withModifier(/^(?:(?:<MOD>|<PAR>|[<>=^~])+\\.\\s*)?(?:\\|(?:(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+\\.|(?!(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+\\.))[^|]*)+\\|/.source, 'm'),\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'modifier': {\n\t\t\t\t\t\t\t// Modifiers for rows after the first one are\n\t\t\t\t\t\t\t// preceded by a pipe and a line feed\n\t\t\t\t\t\t\tpattern: withModifier(/(^|\\|(?:\\r?\\n|\\r)?)(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+(?=\\.)/.source),\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\tinside: modifierTokens\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': /\\||^\\./\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t'inline': {\n\t\t\t\t\tpattern: withModifier(/(^|[^a-zA-Z\\d])(\\*\\*|__|\\?\\?|[*_%@+\\-^~])<MOD>*.+?\\2(?![a-zA-Z\\d])/.source),\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t// Note: superscripts and subscripts are not handled specifically\n\n\t\t\t\t\t\t// *bold*, **bold**\n\t\t\t\t\t\t'bold': {\n\t\t\t\t\t\t\tpattern: withModifier(/(^(\\*\\*?)<MOD>*).+?(?=\\2)/.source),\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\t// _italic_, __italic__\n\t\t\t\t\t\t'italic': {\n\t\t\t\t\t\t\tpattern: withModifier(/(^(__?)<MOD>*).+?(?=\\2)/.source),\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\t// ??cite??\n\t\t\t\t\t\t'cite': {\n\t\t\t\t\t\t\tpattern: withModifier(/(^\\?\\?<MOD>*).+?(?=\\?\\?)/.source),\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\talias: 'string'\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\t// @code@\n\t\t\t\t\t\t'code': {\n\t\t\t\t\t\t\tpattern: withModifier(/(^@<MOD>*).+?(?=@)/.source),\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\talias: 'keyword'\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\t// +inserted+\n\t\t\t\t\t\t'inserted': {\n\t\t\t\t\t\t\tpattern: withModifier(/(^\\+<MOD>*).+?(?=\\+)/.source),\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\t// -deleted-\n\t\t\t\t\t\t'deleted': {\n\t\t\t\t\t\t\tpattern: withModifier(/(^-<MOD>*).+?(?=-)/.source),\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\t// %span%\n\t\t\t\t\t\t'span': {\n\t\t\t\t\t\t\tpattern: withModifier(/(^%<MOD>*).+?(?=%)/.source),\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\t'modifier': {\n\t\t\t\t\t\t\tpattern: withModifier(/(^\\*\\*|__|\\?\\?|[*_%@+\\-^~])<MOD>+/.source),\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\tinside: modifierTokens\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': /[*_%?@+\\-^~]+/\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t// [alias]http://example.com\n\t\t\t\t'link-ref': {\n\t\t\t\t\tpattern: /^\\[[^\\]]+\\]\\S+$/m,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'string': {\n\t\t\t\t\t\t\tpattern: /(^\\[)[^\\]]+(?=\\])/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'url': {\n\t\t\t\t\t\t\tpattern: /(^\\])\\S+$/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': /[\\[\\]]/\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t// \"text\":http://example.com\n\t\t\t\t// \"text\":link-ref\n\t\t\t\t'link': {\n\t\t\t\t\tpattern: withModifier(/\"<MOD>*[^\"]+\":.+?(?=[^\\w/]?(?:\\s|$))/.source),\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'text': {\n\t\t\t\t\t\t\tpattern: withModifier(/(^\"<MOD>*)[^\"]+(?=\")/.source),\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'modifier': {\n\t\t\t\t\t\t\tpattern: withModifier(/(^\")<MOD>+/.source),\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\tinside: modifierTokens\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'url': {\n\t\t\t\t\t\t\tpattern: /(:).+/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': /[\":]/\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t// !image.jpg!\n\t\t\t\t// !image.jpg(Title)!:http://example.com\n\t\t\t\t'image': {\n\t\t\t\t\tpattern: withModifier(/!(?:<MOD>|<PAR>|[<>=])*(?![<>=])[^!\\s()]+(?:\\([^)]+\\))?!(?::.+?(?=[^\\w/]?(?:\\s|$)))?/.source),\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'source': {\n\t\t\t\t\t\t\tpattern: withModifier(/(^!(?:<MOD>|<PAR>|[<>=])*)(?![<>=])[^!\\s()]+(?:\\([^)]+\\))?(?=!)/.source),\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\talias: 'url'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'modifier': {\n\t\t\t\t\t\t\tpattern: withModifier(/(^!)(?:<MOD>|<PAR>|[<>=])+/.source),\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\tinside: modifierTokens\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'url': {\n\t\t\t\t\t\t\tpattern: /(:).+/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': /[!:]/\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t// Footnote[1]\n\t\t\t\t'footnote': {\n\t\t\t\t\tpattern: /\\b\\[\\d+\\]/,\n\t\t\t\t\talias: 'comment',\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /\\[|\\]/\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t// CSS(Cascading Style Sheet)\n\t\t\t\t'acronym': {\n\t\t\t\t\tpattern: /\\b[A-Z\\d]+\\([^)]+\\)/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'comment': {\n\t\t\t\t\t\t\tpattern: /(\\()[^()]+(?=\\))/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': /[()]/\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t// Prism(C)\n\t\t\t\t'mark': {\n\t\t\t\t\tpattern: /\\b\\((?:TM|R|C)\\)/,\n\t\t\t\t\talias: 'comment',\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /[()]/\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tvar phraseInside = textile['phrase'].inside;\n\tvar nestedPatterns = {\n\t\t'inline': phraseInside['inline'],\n\t\t'link': phraseInside['link'],\n\t\t'image': phraseInside['image'],\n\t\t'footnote': phraseInside['footnote'],\n\t\t'acronym': phraseInside['acronym'],\n\t\t'mark': phraseInside['mark']\n\t};\n\n\t// Only allow alpha-numeric HTML tags, not XML tags\n\ttextile.tag.pattern = /<\\/?(?!\\d)[a-z0-9]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i;\n\n\t// Allow some nesting\n\tvar phraseInlineInside = phraseInside['inline'].inside;\n\tphraseInlineInside['bold'].inside = nestedPatterns;\n\tphraseInlineInside['italic'].inside = nestedPatterns;\n\tphraseInlineInside['inserted'].inside = nestedPatterns;\n\tphraseInlineInside['deleted'].inside = nestedPatterns;\n\tphraseInlineInside['span'].inside = nestedPatterns;\n\n\t// Allow some styles inside table cells\n\tvar phraseTableInside = phraseInside['table'].inside;\n\tphraseTableInside['inline'] = nestedPatterns['inline'];\n\tphraseTableInside['link'] = nestedPatterns['link'];\n\tphraseTableInside['image'] = nestedPatterns['image'];\n\tphraseTableInside['footnote'] = nestedPatterns['footnote'];\n\tphraseTableInside['acronym'] = nestedPatterns['acronym'];\n\tphraseTableInside['mark'] = nestedPatterns['mark'];\n\n}(Prism));\n"]},"metadata":{},"sourceType":"script"}