{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/gauravrawal/gaurav/udemy/jbook/src/components/text-editor.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport MDEditor from \"@uiw/react-md-editor\";\n\nconst TestEditor = () => {\n  _s();\n\n  const [editing, setEditing] = useState(false);\n\n  if (editing) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(MDEditor, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MDEditor.Markdown, {\n      source: \"# Header\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TestEditor, \"8NtxifNHNH77GP4fOyN5Q3EVoDA=\");\n\n_c = TestEditor;\nexport default TestEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestEditor\");","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/jbook/src/components/text-editor.tsx"],"names":["useState","MDEditor","TestEditor","editing","setEditing"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,sBAArB;;AAEA,MAAMC,UAAoB,GAAG,MAAM;AAAA;;AACjC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,KAAD,CAAtC;;AAEA,MAAIG,OAAJ,EAAa;AACX,wBACE;AAAA,6BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,sBACE;AAAA,2BACE,QAAC,QAAD,CAAU,QAAV;AAAmB,MAAA,MAAM,EAAE;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAhBD;;GAAMD,U;;KAAAA,U;AAkBN,eAAeA,UAAf","sourcesContent":["import { useState } from \"react\";\nimport MDEditor from \"@uiw/react-md-editor\";\n\nconst TestEditor: React.FC = () => {\n  const [editing, setEditing] = useState(false);\n\n  if (editing) {\n    return (\n      <div>\n        <MDEditor />\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <MDEditor.Markdown source={\"# Header\"} />\n    </div>\n  );\n};\n\nexport default TestEditor;\n"]},"metadata":{},"sourceType":"module"}