{"ast":null,"code":"Prism.languages.rego = {\n  comment: /#.*/,\n  property: {\n    pattern: /(^|[^\\\\.])(?:\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|`[^`]*`|\\b[a-z_]\\w*\\b)(?=\\s*:(?!=))/i,\n    lookbehind: !0,\n    greedy: !0\n  },\n  string: {\n    pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|`[^`]*`/,\n    lookbehind: !0,\n    greedy: !0\n  },\n  keyword: /\\b(?:as|default|else|import|package|not|null|some|with|set(?=\\s*\\())\\b/,\n  boolean: /\\b(?:true|false)\\b/,\n  function: {\n    pattern: /\\b[a-z_]\\w*\\b(?:\\s*\\.\\s*\\b[a-z_]\\w*\\b)*(?=\\s*\\()/i,\n    inside: {\n      namespace: /\\b\\w+\\b(?=\\s*\\.)/,\n      punctuation: /\\./\n    }\n  },\n  number: /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n  operator: /[-+*/%|&]|[<>:=]=?|!=|\\b_\\b/,\n  punctuation: /[,;.\\[\\]{}()]/\n};","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/github/react-snippy/node_modules/prismjs/components/prism-rego.min.js"],"names":["Prism","languages","rego","comment","property","pattern","lookbehind","greedy","string","keyword","boolean","function","inside","namespace","punctuation","number","operator"],"mappings":"AAAAA,KAAK,CAACC,SAAN,CAAgBC,IAAhB,GAAqB;AAACC,EAAAA,OAAO,EAAC,KAAT;AAAeC,EAAAA,QAAQ,EAAC;AAACC,IAAAA,OAAO,EAAC,yEAAT;AAAmFC,IAAAA,UAAU,EAAC,CAAC,CAA/F;AAAiGC,IAAAA,MAAM,EAAC,CAAC;AAAzG,GAAxB;AAAoIC,EAAAA,MAAM,EAAC;AAACH,IAAAA,OAAO,EAAC,wCAAT;AAAkDC,IAAAA,UAAU,EAAC,CAAC,CAA9D;AAAgEC,IAAAA,MAAM,EAAC,CAAC;AAAxE,GAA3I;AAAsNE,EAAAA,OAAO,EAAC,wEAA9N;AAAuSC,EAAAA,OAAO,EAAC,oBAA/S;AAAoUC,EAAAA,QAAQ,EAAC;AAACN,IAAAA,OAAO,EAAC,mDAAT;AAA6DO,IAAAA,MAAM,EAAC;AAACC,MAAAA,SAAS,EAAC,kBAAX;AAA8BC,MAAAA,WAAW,EAAC;AAA1C;AAApE,GAA7U;AAAkcC,EAAAA,MAAM,EAAC,oCAAzc;AAA8eC,EAAAA,QAAQ,EAAC,6BAAvf;AAAqhBF,EAAAA,WAAW,EAAC;AAAjiB,CAArB","sourcesContent":["Prism.languages.rego={comment:/#.*/,property:{pattern:/(^|[^\\\\.])(?:\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|`[^`]*`|\\b[a-z_]\\w*\\b)(?=\\s*:(?!=))/i,lookbehind:!0,greedy:!0},string:{pattern:/(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|`[^`]*`/,lookbehind:!0,greedy:!0},keyword:/\\b(?:as|default|else|import|package|not|null|some|with|set(?=\\s*\\())\\b/,boolean:/\\b(?:true|false)\\b/,function:{pattern:/\\b[a-z_]\\w*\\b(?:\\s*\\.\\s*\\b[a-z_]\\w*\\b)*(?=\\s*\\()/i,inside:{namespace:/\\b\\w+\\b(?=\\s*\\.)/,punctuation:/\\./}},number:/-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,operator:/[-+*/%|&]|[<>:=]=?|!=|\\b_\\b/,punctuation:/[,;.\\[\\]{}()]/};"]},"metadata":{},"sourceType":"script"}