{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nconst babylon = require('@babel/parser');\n\nconst defaultOptions = {\n  sourceType: 'module',\n  allowImportExportEverywhere: true,\n  allowReturnOutsideFunction: true,\n  startLine: 1,\n  tokens: true,\n  plugins: [['flow', {\n    all: true\n  }], 'flowComments', 'jsx', 'asyncGenerators', 'bigInt', 'classProperties', 'classPrivateProperties', 'classPrivateMethods', ['decorators', {\n    decoratorsBeforeExport: false\n  }], 'doExpressions', 'dynamicImport', 'exportDefaultFrom', 'exportNamespaceFrom', 'functionBind', 'functionSent', 'importMeta', 'logicalAssignment', 'nullishCoalescingOperator', 'numericSeparator', 'objectRestSpread', 'optionalCatchBinding', 'optionalChaining', ['pipelineOperator', {\n    proposal: 'minimal'\n  }], 'throwExpressions']\n};\n/**\n * Wrapper to set default options\n */\n\nmodule.exports = function (options = defaultOptions) {\n  return {\n    parse(code) {\n      return babylon.parse(code, options);\n    }\n\n  };\n};","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/github/react-snippy/node_modules/jscodeshift/parser/babylon.js"],"names":["babylon","require","defaultOptions","sourceType","allowImportExportEverywhere","allowReturnOutsideFunction","startLine","tokens","plugins","all","decoratorsBeforeExport","proposal","module","exports","options","parse","code"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,OAAO,GAAGC,OAAO,CAAC,eAAD,CAAvB;;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,UAAU,EAAE,QADS;AAErBC,EAAAA,2BAA2B,EAAE,IAFR;AAGrBC,EAAAA,0BAA0B,EAAE,IAHP;AAIrBC,EAAAA,SAAS,EAAE,CAJU;AAKrBC,EAAAA,MAAM,EAAE,IALa;AAMrBC,EAAAA,OAAO,EAAE,CACP,CAAC,MAAD,EAAS;AAACC,IAAAA,GAAG,EAAE;AAAN,GAAT,CADO,EAEP,cAFO,EAGP,KAHO,EAKP,iBALO,EAMP,QANO,EAOP,iBAPO,EAQP,wBARO,EASP,qBATO,EAUP,CAAC,YAAD,EAAe;AAACC,IAAAA,sBAAsB,EAAE;AAAzB,GAAf,CAVO,EAWP,eAXO,EAYP,eAZO,EAaP,mBAbO,EAcP,qBAdO,EAeP,cAfO,EAgBP,cAhBO,EAiBP,YAjBO,EAkBP,mBAlBO,EAmBP,2BAnBO,EAoBP,kBApBO,EAqBP,kBArBO,EAsBP,sBAtBO,EAuBP,kBAvBO,EAwBP,CAAC,kBAAD,EAAqB;AAACC,IAAAA,QAAQ,EAAE;AAAX,GAArB,CAxBO,EAyBP,kBAzBO;AANY,CAAvB;AAmCA;AACA;AACA;;AACAC,MAAM,CAACC,OAAP,GAAiB,UAASC,OAAO,GAACZ,cAAjB,EAAiC;AAChD,SAAO;AACLa,IAAAA,KAAK,CAACC,IAAD,EAAO;AACV,aAAOhB,OAAO,CAACe,KAAR,CAAcC,IAAd,EAAoBF,OAApB,CAAP;AACD;;AAHI,GAAP;AAKD,CAND","sourcesContent":["\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nconst babylon = require('@babel/parser');\n\nconst defaultOptions = {\n  sourceType: 'module',\n  allowImportExportEverywhere: true,\n  allowReturnOutsideFunction: true,\n  startLine: 1,\n  tokens: true,\n  plugins: [\n    ['flow', {all: true}],\n    'flowComments',\n    'jsx',\n\n    'asyncGenerators',\n    'bigInt',\n    'classProperties',\n    'classPrivateProperties',\n    'classPrivateMethods',\n    ['decorators', {decoratorsBeforeExport: false}],\n    'doExpressions',\n    'dynamicImport',\n    'exportDefaultFrom',\n    'exportNamespaceFrom',\n    'functionBind',\n    'functionSent',\n    'importMeta',\n    'logicalAssignment',\n    'nullishCoalescingOperator',\n    'numericSeparator',\n    'objectRestSpread',\n    'optionalCatchBinding',\n    'optionalChaining',\n    ['pipelineOperator', {proposal: 'minimal'}],\n    'throwExpressions',\n  ],\n};\n\n/**\n * Wrapper to set default options\n */\nmodule.exports = function(options=defaultOptions) {\n  return {\n    parse(code) {\n      return babylon.parse(code, options);\n    },\n  };\n};\n"]},"metadata":{},"sourceType":"script"}