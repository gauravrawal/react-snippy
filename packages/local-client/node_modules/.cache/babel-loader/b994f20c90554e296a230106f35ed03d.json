{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/gauravrawal/gaurav/udemy/jbook/src/components/resizable.tsx\";\nimport \"./resizable.css\";\nimport { ResizableBox } from \"react-resizable\";\n\nconst Resizable = ({\n  direction,\n  children\n}) => {\n  let resizableProps;\n\n  if (direction === \"horizontal\") {\n    resizableProps = {\n      height: Infinity,\n      width: Infinity,\n      resizeHandles: [\"s\"],\n      maxConstraints: [window.innerWidth * 0.75, Infinity],\n      minConstraints: [window.innerWidth * 0.2, Infinity]\n    };\n  } else {\n    resizableProps = {\n      height: 300,\n      width: Infinity,\n      resizeHandles: [\"s\"],\n      maxConstraints: [Infinity, window.innerHeight * 0.9],\n      minConstraints: [Infinity, 24]\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(ResizableBox, { ...resizableProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 10\n  }, this);\n};\n\n_c = Resizable;\nexport default Resizable;\n\nvar _c;\n\n$RefreshReg$(_c, \"Resizable\");","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/jbook/src/components/resizable.tsx"],"names":["ResizableBox","Resizable","direction","children","resizableProps","height","Infinity","width","resizeHandles","maxConstraints","window","innerWidth","minConstraints","innerHeight"],"mappings":";;AAAA,OAAO,iBAAP;AACA,SAASA,YAAT,QAAgD,iBAAhD;;AAMA,MAAMC,SAAmC,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA6B;AACvE,MAAIC,cAAJ;;AAEA,MAAIF,SAAS,KAAK,YAAlB,EAAgC;AAC9BE,IAAAA,cAAc,GAAG;AACfC,MAAAA,MAAM,EAAEC,QADO;AAEfC,MAAAA,KAAK,EAAED,QAFQ;AAGfE,MAAAA,aAAa,EAAE,CAAC,GAAD,CAHA;AAIfC,MAAAA,cAAc,EAAE,CAACC,MAAM,CAACC,UAAP,GAAoB,IAArB,EAA2BL,QAA3B,CAJD;AAKfM,MAAAA,cAAc,EAAE,CAACF,MAAM,CAACC,UAAP,GAAoB,GAArB,EAA0BL,QAA1B;AALD,KAAjB;AAOD,GARD,MAQO;AACLF,IAAAA,cAAc,GAAG;AACfC,MAAAA,MAAM,EAAE,GADO;AAEfE,MAAAA,KAAK,EAAED,QAFQ;AAGfE,MAAAA,aAAa,EAAE,CAAC,GAAD,CAHA;AAIfC,MAAAA,cAAc,EAAE,CAACH,QAAD,EAAWI,MAAM,CAACG,WAAP,GAAqB,GAAhC,CAJD;AAKfD,MAAAA,cAAc,EAAE,CAACN,QAAD,EAAW,EAAX;AALD,KAAjB;AAOD;;AACD,sBAAO,QAAC,YAAD,OAAkBF,cAAlB;AAAA,cAAmCD;AAAnC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CArBD;;KAAMF,S;AAuBN,eAAeA,SAAf","sourcesContent":["import \"./resizable.css\";\nimport { ResizableBox, ResizableBoxProps } from \"react-resizable\";\n\ninterface ResizableProps {\n  direction: \"horizontal\" | \"vertical\";\n}\n\nconst Resizable: React.FC<ResizableProps> = ({ direction, children }) => {\n  let resizableProps: ResizableBoxProps;\n\n  if (direction === \"horizontal\") {\n    resizableProps = {\n      height: Infinity,\n      width: Infinity,\n      resizeHandles: [\"s\"],\n      maxConstraints: [window.innerWidth * 0.75, Infinity],\n      minConstraints: [window.innerWidth * 0.2, Infinity],\n    };\n  } else {\n    resizableProps = {\n      height: 300,\n      width: Infinity,\n      resizeHandles: [\"s\"],\n      maxConstraints: [Infinity, window.innerHeight * 0.9],\n      minConstraints: [Infinity, 24],\n    };\n  }\n  return <ResizableBox {...resizableProps}>{children}</ResizableBox>;\n};\n\nexport default Resizable;\n"]},"metadata":{},"sourceType":"module"}