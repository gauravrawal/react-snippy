{"ast":null,"code":"(function (Prism) {\n  var stringPattern = /(?:\"(?:\"\"|[^\"])*\"(?!\")|'(?:''|[^'])*'(?!'))/.source;\n  var number = /\\b(?:\\d[\\da-f]*x|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i;\n  var numericConstant = {\n    pattern: RegExp(stringPattern + '[bx]'),\n    alias: 'number'\n  };\n  var macroVariable = {\n    pattern: /&[a-z_]\\w*/i\n  };\n  var macroKeyword = {\n    pattern: /((?:^|\\s|=|\\())%(?:ABORT|BY|CMS|COPY|DISPLAY|DO|ELSE|END|EVAL|GLOBAL|GO|GOTO|IF|INC|INCLUDE|INDEX|INPUT|KTRIM|LENGTH|LET|LIST|LOCAL|PUT|QKTRIM|QSCAN|QSUBSTR|QSYSFUNC|QUPCASE|RETURN|RUN|SCAN|SUBSTR|SUPERQ|SYMDEL|SYMGLOBL|SYMLOCAL|SYMEXIST|SYSCALL|SYSEVALF|SYSEXEC|SYSFUNC|SYSGET|SYSRPUT|THEN|TO|TSO|UNQUOTE|UNTIL|UPCASE|WHILE|WINDOW)\\b/i,\n    lookbehind: true,\n    alias: 'keyword'\n  };\n  var step = {\n    pattern: /(^|\\s)(?:proc\\s+\\w+|quit|run|data(?!=))\\b/i,\n    alias: 'keyword',\n    lookbehind: true\n  };\n  var comment = [/\\/\\*[\\s\\S]*?\\*\\//, {\n    pattern: /(^[ \\t]*|;\\s*)\\*[^;]*;/m,\n    lookbehind: true\n  }];\n  var string = {\n    pattern: RegExp(stringPattern),\n    greedy: true\n  };\n  var punctuation = /[$%@.(){}\\[\\];,\\\\]/;\n  var func = {\n    pattern: /%?\\b\\w+(?=\\()/,\n    alias: 'keyword'\n  };\n  var args = {\n    'function': func,\n    'arg-value': {\n      pattern: /(=\\s*)[A-Z\\.]+/i,\n      lookbehind: true\n    },\n    'operator': /=/,\n    'macro-variable': macroVariable,\n    'arg': {\n      pattern: /[A-Z]+/i,\n      alias: 'keyword'\n    },\n    'number': number,\n    'numeric-constant': numericConstant,\n    'punctuation': punctuation,\n    'string': string\n  };\n  var format = {\n    pattern: /\\b(?:format|put)\\b=?[\\w'$.]+/im,\n    inside: {\n      'keyword': /^(?:format|put)(?==)/i,\n      'equals': /=/,\n      'format': {\n        pattern: /(?:\\w|\\$\\d)+\\.\\d?/i,\n        alias: 'number'\n      }\n    }\n  };\n  var altformat = {\n    pattern: /\\b(?:format|put)\\s+[\\w']+(?:\\s+[$.\\w]+)+(?=;)/i,\n    inside: {\n      'keyword': /^(?:format|put)/i,\n      'format': {\n        pattern: /[\\w$]+\\.\\d?/,\n        alias: 'number'\n      }\n    }\n  };\n  var globalStatements = {\n    pattern: /((?:^|\\s)=?)(?:catname|checkpoint execute_always|dm|endsas|filename|footnote|%include|libname|%list|lock|missing|options|page|resetline|%run|sasfile|skip|sysecho|title\\d?)\\b/i,\n    lookbehind: true,\n    alias: 'keyword'\n  };\n  var submitStatement = {\n    pattern: /(^|\\s)(?:submit(?:\\s+(?:load|parseonly|norun))?|endsubmit)\\b/i,\n    lookbehind: true,\n    alias: 'keyword'\n  };\n  var actionSets = /accessControl|cdm|aggregation|aStore|ruleMining|audio|autotune|bayesianNetClassifier|bioMedImage|boolRule|builtins|cardinality|sccasl|clustering|copula|countreg|dataDiscovery|dataPreprocess|dataSciencePilot|dataStep|decisionTree|deepLearn|deepNeural|varReduce|simSystem|ds2|deduplication|ecm|entityRes|espCluster|explainModel|factmac|fastKnn|fcmpact|fedSql|freqTab|gam|gleam|graphSemiSupLearn|gVarCluster|hiddenMarkovModel|hyperGroup|image|iml|ica|kernalPca|langModel|ldaTopic|sparseML|mlTools|mixed|modelPublishing|mbc|network|optNetwork|neuralNet|nonlinear|nmf|nonParametricBayes|optimization|panel|pls|percentile|pca|phreg|qkb|qlim|quantreg|recommend|tsReconcile|deepRnn|regression|reinforcementLearn|robustPca|sampling|sparkEmbeddedProcess|search(?:Analytics)?|sentimentAnalysis|sequence|configuration|session(?:Prop)?|severity|simple|smartData|sandwich|spatialreg|stabilityMonitoring|spc|loadStreams|svDataDescription|svm|table|conditionalRandomFields|text(?:Rule(?:Develop|Score)|Mining|Parse|Topic|Util|Filters|Frequency)|tsInfo|timeData|transpose|uniTimeSeries/.source;\n  var casActions = {\n    pattern: RegExp(/(^|\\s)(?:action\\s+)?(?:<act>)\\.[a-z]+\\b[^;]+/.source.replace(/<act>/g, function () {\n      return actionSets;\n    }), 'i'),\n    lookbehind: true,\n    inside: {\n      'keyword': RegExp(/(?:<act>)\\.[a-z]+\\b/.source.replace(/<act>/g, function () {\n        return actionSets;\n      }), 'i'),\n      'action': {\n        pattern: /(?:action)/i,\n        alias: 'keyword'\n      },\n      'comment': comment,\n      'function': func,\n      'arg-value': args['arg-value'],\n      'operator': args.operator,\n      'argument': args.arg,\n      'number': number,\n      'numeric-constant': numericConstant,\n      'punctuation': punctuation,\n      'string': string\n    }\n  };\n  var keywords = {\n    pattern: /((?:^|\\s)=?)(?:after|analysis|and|array|barchart|barwidth|begingraph|by|call|cas|cbarline|cfill|class(?:lev)?|close|column|computed?|contains|continue|data(?==)|define|delete|describe|document|do\\s+over|do|dol|drop|dul|end(?:source|comp)?|entryTitle|else|eval(?:uate)?|exec(?:ute)?|exit|fill(?:attrs)?|file(?:name)?|flist|fnc|function(?:list)?|goto|global|group(?:by)?|headline|headskip|histogram|if|infile|keep|keylabel|keyword|label|layout|leave|legendlabel|length|libname|loadactionset|merge|midpoints|name|noobs|nowd|_?null_|ods|options|or|otherwise|out(?:put)?|over(?:lay)?|plot|put|print|raise|ranexp|rannor|rbreak|retain|return|select|set|session|sessref|source|statgraph|sum|summarize|table|temp|terminate|then\\s+do|then|title\\d?|to|var|when|where|xaxisopts|yaxisopts|y2axisopts)\\b/i,\n    lookbehind: true\n  };\n  Prism.languages.sas = {\n    'datalines': {\n      pattern: /^([ \\t]*)(?:(?:data)?lines|cards);[\\s\\S]+?^[ \\t]*;/im,\n      lookbehind: true,\n      alias: 'string',\n      inside: {\n        'keyword': {\n          pattern: /^(?:(?:data)?lines|cards)/i\n        },\n        'punctuation': /;/\n      }\n    },\n    'proc-sql': {\n      pattern: /(^proc\\s+(?:fed)?sql(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|quit|run|data);|(?![\\s\\S]))/im,\n      lookbehind: true,\n      inside: {\n        'sql': {\n          pattern: RegExp(/^[ \\t]*(?:select|alter\\s+table|(?:create|describe|drop)\\s+(?:index|table(?:\\s+constraints)?|view)|create\\s+unique\\s+index|insert\\s+into|update)(?:<str>|[^;\"'])+;/.source.replace(/<str>/g, function () {\n            return stringPattern;\n          }), 'im'),\n          alias: 'language-sql',\n          inside: Prism.languages.sql\n        },\n        'global-statements': globalStatements,\n        'sql-statements': {\n          pattern: /(^|\\s)(?:disconnect\\s+from|exec(?:ute)?|begin|commit|rollback|reset|validate)\\b/i,\n          lookbehind: true,\n          alias: 'keyword'\n        },\n        'number': number,\n        'numeric-constant': numericConstant,\n        'punctuation': punctuation,\n        'string': string\n      }\n    },\n    'proc-groovy': {\n      pattern: /(^proc\\s+groovy(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|quit|run|data);|(?![\\s\\S]))/im,\n      lookbehind: true,\n      inside: {\n        'comment': comment,\n        'groovy': {\n          pattern: RegExp(/(^[ \\t]*submit(?:\\s+(?:load|parseonly|norun))?)(?:<str>|[^\"'])+?(?=endsubmit;)/.source.replace(/<str>/g, function () {\n            return stringPattern;\n          }), 'im'),\n          lookbehind: true,\n          alias: 'language-groovy',\n          inside: Prism.languages.groovy\n        },\n        'keyword': keywords,\n        'submit-statement': submitStatement,\n        'global-statements': globalStatements,\n        'number': number,\n        'numeric-constant': numericConstant,\n        'punctuation': punctuation,\n        'string': string\n      }\n    },\n    'proc-lua': {\n      pattern: /(^proc\\s+lua(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|quit|run|data);|(?![\\s\\S]))/im,\n      lookbehind: true,\n      inside: {\n        'comment': comment,\n        'lua': {\n          pattern: RegExp(/(^[ \\t]*submit(?:\\s+(?:load|parseonly|norun))?)(?:<str>|[^\"'])+?(?=endsubmit;)/.source.replace(/<str>/g, function () {\n            return stringPattern;\n          }), 'im'),\n          lookbehind: true,\n          alias: 'language-lua',\n          inside: Prism.languages.lua\n        },\n        'keyword': keywords,\n        'submit-statement': submitStatement,\n        'global-statements': globalStatements,\n        'number': number,\n        'numeric-constant': numericConstant,\n        'punctuation': punctuation,\n        'string': string\n      }\n    },\n    'proc-cas': {\n      pattern: /(^proc\\s+cas(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|quit|data);|(?![\\s\\S]))/im,\n      lookbehind: true,\n      inside: {\n        'comment': comment,\n        'statement-var': {\n          pattern: /((?:^|\\s)=?)saveresult\\s[^;]+/im,\n          lookbehind: true,\n          inside: {\n            'statement': {\n              pattern: /^saveresult\\s+\\S+/i,\n              inside: {\n                keyword: /^(?:saveresult)/i\n              }\n            },\n            rest: args\n          }\n        },\n        'cas-actions': casActions,\n        'statement': {\n          pattern: /((?:^|\\s)=?)(?:default|(?:un)?set|on|output|upload)[^;]+/im,\n          lookbehind: true,\n          inside: args\n        },\n        'step': step,\n        'keyword': keywords,\n        'function': func,\n        'format': format,\n        'altformat': altformat,\n        'global-statements': globalStatements,\n        'number': number,\n        'numeric-constant': numericConstant,\n        'punctuation': punctuation,\n        'string': string\n      }\n    },\n    'proc-args': {\n      pattern: RegExp(/(^proc\\s+\\w+\\s+)(?!\\s)(?:[^;\"']|<str>)+;/.source.replace(/<str>/g, function () {\n        return stringPattern;\n      }), 'im'),\n      lookbehind: true,\n      inside: args\n    },\n\n    /*Special keywords within macros*/\n    'macro-keyword': macroKeyword,\n    'macro-variable': macroVariable,\n    'macro-string-functions': {\n      pattern: /((?:^|\\s|=))%(?:NRBQUOTE|NRQUOTE|NRSTR|BQUOTE|QUOTE|STR)\\(.*?(?:[^%]\\))/i,\n      lookbehind: true,\n      inside: {\n        'function': {\n          pattern: /%(?:NRBQUOTE|NRQUOTE|NRSTR|BQUOTE|QUOTE|STR)/i,\n          alias: 'keyword'\n        },\n        'macro-keyword': macroKeyword,\n        'macro-variable': macroVariable,\n        'escaped-char': {\n          pattern: /%['\"()<>=¬^~;,#]/i\n        },\n        'punctuation': punctuation\n      }\n    },\n    'macro-declaration': {\n      pattern: /^%macro[^;]+(?=;)/im,\n      inside: {\n        'keyword': /%macro/i\n      }\n    },\n    'macro-end': {\n      pattern: /^%mend[^;]+(?=;)/im,\n      inside: {\n        'keyword': /%mend/i\n      }\n    },\n\n    /*%_zscore(headcir, _lhc, _mhc, _shc, headcz, headcpct, _Fheadcz); */\n    'macro': {\n      pattern: /%_\\w+(?=\\()/,\n      alias: 'keyword'\n    },\n    'input': {\n      pattern: /\\binput\\s[-\\w\\s/*.$&]+;/i,\n      inside: {\n        'input': {\n          alias: 'keyword',\n          pattern: /^input/i\n        },\n        'comment': comment,\n        'number': number,\n        'numeric-constant': numericConstant\n      }\n    },\n    'options-args': {\n      pattern: /(^options)[-'\"|/\\\\<>*+=:()\\w\\s]*(?=;)/im,\n      lookbehind: true,\n      inside: args\n    },\n    'cas-actions': casActions,\n    'comment': comment,\n    'function': func,\n    'format': format,\n    'altformat': altformat,\n    'numeric-constant': numericConstant,\n    'datetime': {\n      // '1jan2013'd, '9:25:19pm't, '18jan2003:9:27:05am'dt\n      pattern: RegExp(stringPattern + '(?:dt?|t)'),\n      alias: 'number'\n    },\n    'string': string,\n    'step': step,\n    'keyword': keywords,\n    // In SAS Studio syntax highlighting, these operators are styled like keywords\n    'operator-keyword': {\n      pattern: /\\b(?:eq|ne|gt|lt|ge|le|in|not)\\b/i,\n      alias: 'operator'\n    },\n    // Decimal (1.2e23), hexadecimal (0c1x)\n    'number': number,\n    'operator': /\\*\\*?|\\|\\|?|!!?|¦¦?|<[>=]?|>[<=]?|[-+\\/=&]|[~¬^]=?/i,\n    'punctuation': punctuation\n  };\n})(Prism);","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/github/react-snippy/node_modules/prismjs/components/prism-sas.js"],"names":["Prism","stringPattern","source","number","numericConstant","pattern","RegExp","alias","macroVariable","macroKeyword","lookbehind","step","comment","string","greedy","punctuation","func","args","format","inside","altformat","globalStatements","submitStatement","actionSets","casActions","replace","operator","arg","keywords","languages","sas","sql","groovy","lua","keyword","rest"],"mappings":"AAAC,WAAUA,KAAV,EAAiB;AAEjB,MAAIC,aAAa,GAAG,8CAA8CC,MAAlE;AAEA,MAAIC,MAAM,GAAG,kDAAb;AACA,MAAIC,eAAe,GAAG;AACrBC,IAAAA,OAAO,EAAEC,MAAM,CAACL,aAAa,GAAG,MAAjB,CADM;AAErBM,IAAAA,KAAK,EAAE;AAFc,GAAtB;AAKA,MAAIC,aAAa,GAAG;AACnBH,IAAAA,OAAO,EAAE;AADU,GAApB;AAIA,MAAII,YAAY,GAAG;AAClBJ,IAAAA,OAAO,EAAE,iVADS;AAElBK,IAAAA,UAAU,EAAE,IAFM;AAGlBH,IAAAA,KAAK,EAAE;AAHW,GAAnB;AAMA,MAAII,IAAI,GAAG;AACVN,IAAAA,OAAO,EAAE,4CADC;AAEVE,IAAAA,KAAK,EAAE,SAFG;AAGVG,IAAAA,UAAU,EAAE;AAHF,GAAX;AAMA,MAAIE,OAAO,GAAG,CACb,kBADa,EAEb;AACCP,IAAAA,OAAO,EAAE,yBADV;AAECK,IAAAA,UAAU,EAAE;AAFb,GAFa,CAAd;AAQA,MAAIG,MAAM,GAAG;AACZR,IAAAA,OAAO,EAAEC,MAAM,CAACL,aAAD,CADH;AAEZa,IAAAA,MAAM,EAAE;AAFI,GAAb;AAKA,MAAIC,WAAW,GAAG,oBAAlB;AAEA,MAAIC,IAAI,GAAG;AACVX,IAAAA,OAAO,EAAE,eADC;AAEVE,IAAAA,KAAK,EAAE;AAFG,GAAX;AAKA,MAAIU,IAAI,GAAG;AACV,gBAAYD,IADF;AAEV,iBAAa;AACZX,MAAAA,OAAO,EAAE,iBADG;AAEZK,MAAAA,UAAU,EAAE;AAFA,KAFH;AAMV,gBAAY,GANF;AAOV,sBAAkBF,aAPR;AAQV,WAAO;AACNH,MAAAA,OAAO,EAAE,SADH;AAENE,MAAAA,KAAK,EAAE;AAFD,KARG;AAYV,cAAUJ,MAZA;AAaV,wBAAoBC,eAbV;AAcV,mBAAeW,WAdL;AAeV,cAAUF;AAfA,GAAX;AAkBA,MAAIK,MAAM,GAAG;AACZb,IAAAA,OAAO,EAAE,gCADG;AAEZc,IAAAA,MAAM,EAAE;AACP,iBAAW,uBADJ;AAEP,gBAAU,GAFH;AAGP,gBAAU;AACTd,QAAAA,OAAO,EAAE,oBADA;AAETE,QAAAA,KAAK,EAAE;AAFE;AAHH;AAFI,GAAb;AAYA,MAAIa,SAAS,GAAG;AACff,IAAAA,OAAO,EAAE,gDADM;AAEfc,IAAAA,MAAM,EAAE;AACP,iBAAW,kBADJ;AAEP,gBAAU;AACTd,QAAAA,OAAO,EAAE,aADA;AAETE,QAAAA,KAAK,EAAE;AAFE;AAFH;AAFO,GAAhB;AAWA,MAAIc,gBAAgB,GAAG;AACtBhB,IAAAA,OAAO,EAAE,gLADa;AAEtBK,IAAAA,UAAU,EAAE,IAFU;AAGtBH,IAAAA,KAAK,EAAE;AAHe,GAAvB;AAMA,MAAIe,eAAe,GAAG;AACrBjB,IAAAA,OAAO,EAAE,+DADY;AAErBK,IAAAA,UAAU,EAAE,IAFS;AAGrBH,IAAAA,KAAK,EAAE;AAHc,GAAtB;AAMA,MAAIgB,UAAU,GAAG,+iCAA+iCrB,MAAhkC;AAEA,MAAIsB,UAAU,GAAG;AAChBnB,IAAAA,OAAO,EAAEC,MAAM,CAAC,+CAA+CJ,MAA/C,CAAsDuB,OAAtD,CAA8D,QAA9D,EAAwE,YAAY;AAAE,aAAOF,UAAP;AAAoB,KAA1G,CAAD,EAA8G,GAA9G,CADC;AAEhBb,IAAAA,UAAU,EAAE,IAFI;AAGhBS,IAAAA,MAAM,EAAE;AACP,iBAAWb,MAAM,CAAC,sBAAsBJ,MAAtB,CAA6BuB,OAA7B,CAAqC,QAArC,EAA+C,YAAY;AAAE,eAAOF,UAAP;AAAoB,OAAjF,CAAD,EAAqF,GAArF,CADV;AAEP,gBAAU;AACTlB,QAAAA,OAAO,EAAE,aADA;AAETE,QAAAA,KAAK,EAAE;AAFE,OAFH;AAMP,iBAAWK,OANJ;AAOP,kBAAYI,IAPL;AAQP,mBAAaC,IAAI,CAAC,WAAD,CARV;AASP,kBAAYA,IAAI,CAACS,QATV;AAUP,kBAAYT,IAAI,CAACU,GAVV;AAWP,gBAAUxB,MAXH;AAYP,0BAAoBC,eAZb;AAaP,qBAAeW,WAbR;AAcP,gBAAUF;AAdH;AAHQ,GAAjB;AAqBA,MAAIe,QAAQ,GAAG;AACdvB,IAAAA,OAAO,EAAE,wxBADK;AAEdK,IAAAA,UAAU,EAAE;AAFE,GAAf;AAKAV,EAAAA,KAAK,CAAC6B,SAAN,CAAgBC,GAAhB,GAAsB;AACrB,iBAAa;AACZzB,MAAAA,OAAO,EAAE,sDADG;AAEZK,MAAAA,UAAU,EAAE,IAFA;AAGZH,MAAAA,KAAK,EAAE,QAHK;AAIZY,MAAAA,MAAM,EAAE;AACP,mBAAW;AACVd,UAAAA,OAAO,EAAE;AADC,SADJ;AAIP,uBAAe;AAJR;AAJI,KADQ;AAarB,gBAAY;AACXA,MAAAA,OAAO,EAAE,8FADE;AAEXK,MAAAA,UAAU,EAAE,IAFD;AAGXS,MAAAA,MAAM,EAAE;AACP,eAAO;AACNd,UAAAA,OAAO,EAAEC,MAAM,CAAC,oKAAoKJ,MAApK,CAA2KuB,OAA3K,CAAmL,QAAnL,EAA6L,YAAY;AAAE,mBAAOxB,aAAP;AAAuB,WAAlO,CAAD,EAAsO,IAAtO,CADT;AAENM,UAAAA,KAAK,EAAE,cAFD;AAGNY,UAAAA,MAAM,EAAEnB,KAAK,CAAC6B,SAAN,CAAgBE;AAHlB,SADA;AAMP,6BAAqBV,gBANd;AAOP,0BAAkB;AACjBhB,UAAAA,OAAO,EAAE,kFADQ;AAEjBK,UAAAA,UAAU,EAAE,IAFK;AAGjBH,UAAAA,KAAK,EAAE;AAHU,SAPX;AAYP,kBAAUJ,MAZH;AAaP,4BAAoBC,eAbb;AAcP,uBAAeW,WAdR;AAeP,kBAAUF;AAfH;AAHG,KAbS;AAmCrB,mBAAe;AACdR,MAAAA,OAAO,EAAE,yFADK;AAEdK,MAAAA,UAAU,EAAE,IAFE;AAGdS,MAAAA,MAAM,EAAE;AACP,mBAAWP,OADJ;AAEP,kBAAU;AACTP,UAAAA,OAAO,EAAEC,MAAM,CAAC,iFAAiFJ,MAAjF,CAAwFuB,OAAxF,CAAgG,QAAhG,EAA0G,YAAY;AAAE,mBAAOxB,aAAP;AAAuB,WAA/I,CAAD,EAAmJ,IAAnJ,CADN;AAETS,UAAAA,UAAU,EAAE,IAFH;AAGTH,UAAAA,KAAK,EAAE,iBAHE;AAITY,UAAAA,MAAM,EAAEnB,KAAK,CAAC6B,SAAN,CAAgBG;AAJf,SAFH;AAQP,mBAAWJ,QARJ;AASP,4BAAoBN,eATb;AAUP,6BAAqBD,gBAVd;AAWP,kBAAUlB,MAXH;AAYP,4BAAoBC,eAZb;AAaP,uBAAeW,WAbR;AAcP,kBAAUF;AAdH;AAHM,KAnCM;AAwDrB,gBAAY;AACXR,MAAAA,OAAO,EAAE,sFADE;AAEXK,MAAAA,UAAU,EAAE,IAFD;AAGXS,MAAAA,MAAM,EAAE;AACP,mBAAWP,OADJ;AAEP,eAAO;AACNP,UAAAA,OAAO,EAAEC,MAAM,CAAC,iFAAiFJ,MAAjF,CAAwFuB,OAAxF,CAAgG,QAAhG,EAA0G,YAAY;AAAE,mBAAOxB,aAAP;AAAuB,WAA/I,CAAD,EAAmJ,IAAnJ,CADT;AAENS,UAAAA,UAAU,EAAE,IAFN;AAGNH,UAAAA,KAAK,EAAE,cAHD;AAINY,UAAAA,MAAM,EAAEnB,KAAK,CAAC6B,SAAN,CAAgBI;AAJlB,SAFA;AAQP,mBAAWL,QARJ;AASP,4BAAoBN,eATb;AAUP,6BAAqBD,gBAVd;AAWP,kBAAUlB,MAXH;AAYP,4BAAoBC,eAZb;AAaP,uBAAeW,WAbR;AAcP,kBAAUF;AAdH;AAHG,KAxDS;AA6ErB,gBAAY;AACXR,MAAAA,OAAO,EAAE,kFADE;AAEXK,MAAAA,UAAU,EAAE,IAFD;AAGXS,MAAAA,MAAM,EAAE;AACP,mBAAWP,OADJ;AAEP,yBAAiB;AAChBP,UAAAA,OAAO,EAAE,iCADO;AAEhBK,UAAAA,UAAU,EAAE,IAFI;AAGhBS,UAAAA,MAAM,EAAE;AAEP,yBAAa;AACZd,cAAAA,OAAO,EAAE,oBADG;AAEZc,cAAAA,MAAM,EAAE;AACPe,gBAAAA,OAAO,EAAE;AADF;AAFI,aAFN;AAQPC,YAAAA,IAAI,EAAElB;AARC;AAHQ,SAFV;AAgBP,uBAAeO,UAhBR;AAiBP,qBAAa;AACZnB,UAAAA,OAAO,EAAE,4DADG;AAEZK,UAAAA,UAAU,EAAE,IAFA;AAGZS,UAAAA,MAAM,EAAEF;AAHI,SAjBN;AAsBP,gBAAQN,IAtBD;AAuBP,mBAAWiB,QAvBJ;AAwBP,oBAAYZ,IAxBL;AAyBP,kBAAUE,MAzBH;AA0BP,qBAAaE,SA1BN;AA2BP,6BAAqBC,gBA3Bd;AA4BP,kBAAUlB,MA5BH;AA6BP,4BAAoBC,eA7Bb;AA8BP,uBAAeW,WA9BR;AA+BP,kBAAUF;AA/BH;AAHG,KA7ES;AAmHrB,iBAAa;AACZR,MAAAA,OAAO,EAAEC,MAAM,CAAC,2CAA2CJ,MAA3C,CAAkDuB,OAAlD,CAA0D,QAA1D,EAAoE,YAAY;AAAE,eAAOxB,aAAP;AAAuB,OAAzG,CAAD,EAA6G,IAA7G,CADH;AAEZS,MAAAA,UAAU,EAAE,IAFA;AAGZS,MAAAA,MAAM,EAAEF;AAHI,KAnHQ;;AAwHrB;AACA,qBAAiBR,YAzHI;AA0HrB,sBAAkBD,aA1HG;AA2HrB,8BAA0B;AACzBH,MAAAA,OAAO,EAAE,0EADgB;AAEzBK,MAAAA,UAAU,EAAE,IAFa;AAGzBS,MAAAA,MAAM,EAAE;AACP,oBAAY;AACXd,UAAAA,OAAO,EAAE,+CADE;AAEXE,UAAAA,KAAK,EAAE;AAFI,SADL;AAKP,yBAAiBE,YALV;AAMP,0BAAkBD,aANX;AAOP,wBAAgB;AACfH,UAAAA,OAAO,EAAE;AADM,SAPT;AAUP,uBAAeU;AAVR;AAHiB,KA3HL;AA2IrB,yBAAqB;AACpBV,MAAAA,OAAO,EAAE,qBADW;AAEpBc,MAAAA,MAAM,EAAE;AACP,mBAAW;AADJ;AAFY,KA3IA;AAiJrB,iBAAa;AACZd,MAAAA,OAAO,EAAE,oBADG;AAEZc,MAAAA,MAAM,EAAE;AACP,mBAAW;AADJ;AAFI,KAjJQ;;AAuJrB;AACA,aAAS;AACRd,MAAAA,OAAO,EAAE,aADD;AAERE,MAAAA,KAAK,EAAE;AAFC,KAxJY;AA4JrB,aAAS;AACRF,MAAAA,OAAO,EAAE,0BADD;AAERc,MAAAA,MAAM,EAAE;AACP,iBAAS;AACRZ,UAAAA,KAAK,EAAE,SADC;AAERF,UAAAA,OAAO,EAAE;AAFD,SADF;AAKP,mBAAWO,OALJ;AAMP,kBAAUT,MANH;AAOP,4BAAoBC;AAPb;AAFA,KA5JY;AAwKrB,oBAAgB;AACfC,MAAAA,OAAO,EAAE,yCADM;AAEfK,MAAAA,UAAU,EAAE,IAFG;AAGfS,MAAAA,MAAM,EAAEF;AAHO,KAxKK;AA6KrB,mBAAeO,UA7KM;AA8KrB,eAAWZ,OA9KU;AA+KrB,gBAAYI,IA/KS;AAgLrB,cAAUE,MAhLW;AAiLrB,iBAAaE,SAjLQ;AAkLrB,wBAAoBhB,eAlLC;AAmLrB,gBAAY;AACX;AACAC,MAAAA,OAAO,EAAEC,MAAM,CAACL,aAAa,GAAG,WAAjB,CAFJ;AAGXM,MAAAA,KAAK,EAAE;AAHI,KAnLS;AAwLrB,cAAUM,MAxLW;AAyLrB,YAAQF,IAzLa;AA0LrB,eAAWiB,QA1LU;AA2LrB;AACA,wBAAoB;AACnBvB,MAAAA,OAAO,EAAE,mCADU;AAEnBE,MAAAA,KAAK,EAAE;AAFY,KA5LC;AAgMrB;AACA,cAAUJ,MAjMW;AAkMrB,gBAAY,qDAlMS;AAmMrB,mBAAeY;AAnMM,GAAtB;AAsMA,CArUA,EAqUCf,KArUD,CAAD","sourcesContent":["(function (Prism) {\n\n\tvar stringPattern = /(?:\"(?:\"\"|[^\"])*\"(?!\")|'(?:''|[^'])*'(?!'))/.source;\n\n\tvar number = /\\b(?:\\d[\\da-f]*x|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i;\n\tvar numericConstant = {\n\t\tpattern: RegExp(stringPattern + '[bx]'),\n\t\talias: 'number'\n\t};\n\n\tvar macroVariable = {\n\t\tpattern: /&[a-z_]\\w*/i\n\t};\n\n\tvar macroKeyword = {\n\t\tpattern: /((?:^|\\s|=|\\())%(?:ABORT|BY|CMS|COPY|DISPLAY|DO|ELSE|END|EVAL|GLOBAL|GO|GOTO|IF|INC|INCLUDE|INDEX|INPUT|KTRIM|LENGTH|LET|LIST|LOCAL|PUT|QKTRIM|QSCAN|QSUBSTR|QSYSFUNC|QUPCASE|RETURN|RUN|SCAN|SUBSTR|SUPERQ|SYMDEL|SYMGLOBL|SYMLOCAL|SYMEXIST|SYSCALL|SYSEVALF|SYSEXEC|SYSFUNC|SYSGET|SYSRPUT|THEN|TO|TSO|UNQUOTE|UNTIL|UPCASE|WHILE|WINDOW)\\b/i,\n\t\tlookbehind: true,\n\t\talias: 'keyword'\n\t};\n\n\tvar step = {\n\t\tpattern: /(^|\\s)(?:proc\\s+\\w+|quit|run|data(?!=))\\b/i,\n\t\talias: 'keyword',\n\t\tlookbehind: true\n\t};\n\n\tvar comment = [\n\t\t/\\/\\*[\\s\\S]*?\\*\\//,\n\t\t{\n\t\t\tpattern: /(^[ \\t]*|;\\s*)\\*[^;]*;/m,\n\t\t\tlookbehind: true\n\t\t}\n\t];\n\n\tvar string = {\n\t\tpattern: RegExp(stringPattern),\n\t\tgreedy: true\n\t};\n\n\tvar punctuation = /[$%@.(){}\\[\\];,\\\\]/;\n\n\tvar func = {\n\t\tpattern: /%?\\b\\w+(?=\\()/,\n\t\talias: 'keyword'\n\t};\n\n\tvar args = {\n\t\t'function': func,\n\t\t'arg-value': {\n\t\t\tpattern: /(=\\s*)[A-Z\\.]+/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'operator': /=/,\n\t\t'macro-variable': macroVariable,\n\t\t'arg': {\n\t\t\tpattern: /[A-Z]+/i,\n\t\t\talias: 'keyword'\n\t\t},\n\t\t'number': number,\n\t\t'numeric-constant': numericConstant,\n\t\t'punctuation': punctuation,\n\t\t'string': string\n\t};\n\n\tvar format = {\n\t\tpattern: /\\b(?:format|put)\\b=?[\\w'$.]+/im,\n\t\tinside: {\n\t\t\t'keyword': /^(?:format|put)(?==)/i,\n\t\t\t'equals': /=/,\n\t\t\t'format': {\n\t\t\t\tpattern: /(?:\\w|\\$\\d)+\\.\\d?/i,\n\t\t\t\talias: 'number'\n\t\t\t}\n\t\t}\n\t};\n\n\tvar altformat = {\n\t\tpattern: /\\b(?:format|put)\\s+[\\w']+(?:\\s+[$.\\w]+)+(?=;)/i,\n\t\tinside: {\n\t\t\t'keyword': /^(?:format|put)/i,\n\t\t\t'format': {\n\t\t\t\tpattern: /[\\w$]+\\.\\d?/,\n\t\t\t\talias: 'number'\n\t\t\t}\n\t\t}\n\t};\n\n\tvar globalStatements = {\n\t\tpattern: /((?:^|\\s)=?)(?:catname|checkpoint execute_always|dm|endsas|filename|footnote|%include|libname|%list|lock|missing|options|page|resetline|%run|sasfile|skip|sysecho|title\\d?)\\b/i,\n\t\tlookbehind: true,\n\t\talias: 'keyword'\n\t};\n\n\tvar submitStatement = {\n\t\tpattern: /(^|\\s)(?:submit(?:\\s+(?:load|parseonly|norun))?|endsubmit)\\b/i,\n\t\tlookbehind: true,\n\t\talias: 'keyword'\n\t};\n\n\tvar actionSets = /accessControl|cdm|aggregation|aStore|ruleMining|audio|autotune|bayesianNetClassifier|bioMedImage|boolRule|builtins|cardinality|sccasl|clustering|copula|countreg|dataDiscovery|dataPreprocess|dataSciencePilot|dataStep|decisionTree|deepLearn|deepNeural|varReduce|simSystem|ds2|deduplication|ecm|entityRes|espCluster|explainModel|factmac|fastKnn|fcmpact|fedSql|freqTab|gam|gleam|graphSemiSupLearn|gVarCluster|hiddenMarkovModel|hyperGroup|image|iml|ica|kernalPca|langModel|ldaTopic|sparseML|mlTools|mixed|modelPublishing|mbc|network|optNetwork|neuralNet|nonlinear|nmf|nonParametricBayes|optimization|panel|pls|percentile|pca|phreg|qkb|qlim|quantreg|recommend|tsReconcile|deepRnn|regression|reinforcementLearn|robustPca|sampling|sparkEmbeddedProcess|search(?:Analytics)?|sentimentAnalysis|sequence|configuration|session(?:Prop)?|severity|simple|smartData|sandwich|spatialreg|stabilityMonitoring|spc|loadStreams|svDataDescription|svm|table|conditionalRandomFields|text(?:Rule(?:Develop|Score)|Mining|Parse|Topic|Util|Filters|Frequency)|tsInfo|timeData|transpose|uniTimeSeries/.source;\n\n\tvar casActions = {\n\t\tpattern: RegExp(/(^|\\s)(?:action\\s+)?(?:<act>)\\.[a-z]+\\b[^;]+/.source.replace(/<act>/g, function () { return actionSets; }), 'i'),\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'keyword': RegExp(/(?:<act>)\\.[a-z]+\\b/.source.replace(/<act>/g, function () { return actionSets; }), 'i'),\n\t\t\t'action': {\n\t\t\t\tpattern: /(?:action)/i,\n\t\t\t\talias: 'keyword'\n\t\t\t},\n\t\t\t'comment': comment,\n\t\t\t'function': func,\n\t\t\t'arg-value': args['arg-value'],\n\t\t\t'operator': args.operator,\n\t\t\t'argument': args.arg,\n\t\t\t'number': number,\n\t\t\t'numeric-constant': numericConstant,\n\t\t\t'punctuation': punctuation,\n\t\t\t'string': string\n\t\t}\n\t};\n\n\tvar keywords = {\n\t\tpattern: /((?:^|\\s)=?)(?:after|analysis|and|array|barchart|barwidth|begingraph|by|call|cas|cbarline|cfill|class(?:lev)?|close|column|computed?|contains|continue|data(?==)|define|delete|describe|document|do\\s+over|do|dol|drop|dul|end(?:source|comp)?|entryTitle|else|eval(?:uate)?|exec(?:ute)?|exit|fill(?:attrs)?|file(?:name)?|flist|fnc|function(?:list)?|goto|global|group(?:by)?|headline|headskip|histogram|if|infile|keep|keylabel|keyword|label|layout|leave|legendlabel|length|libname|loadactionset|merge|midpoints|name|noobs|nowd|_?null_|ods|options|or|otherwise|out(?:put)?|over(?:lay)?|plot|put|print|raise|ranexp|rannor|rbreak|retain|return|select|set|session|sessref|source|statgraph|sum|summarize|table|temp|terminate|then\\s+do|then|title\\d?|to|var|when|where|xaxisopts|yaxisopts|y2axisopts)\\b/i,\n\t\tlookbehind: true,\n\t};\n\n\tPrism.languages.sas = {\n\t\t'datalines': {\n\t\t\tpattern: /^([ \\t]*)(?:(?:data)?lines|cards);[\\s\\S]+?^[ \\t]*;/im,\n\t\t\tlookbehind: true,\n\t\t\talias: 'string',\n\t\t\tinside: {\n\t\t\t\t'keyword': {\n\t\t\t\t\tpattern: /^(?:(?:data)?lines|cards)/i\n\t\t\t\t},\n\t\t\t\t'punctuation': /;/\n\t\t\t}\n\t\t},\n\n\t\t'proc-sql': {\n\t\t\tpattern: /(^proc\\s+(?:fed)?sql(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|quit|run|data);|(?![\\s\\S]))/im,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'sql': {\n\t\t\t\t\tpattern: RegExp(/^[ \\t]*(?:select|alter\\s+table|(?:create|describe|drop)\\s+(?:index|table(?:\\s+constraints)?|view)|create\\s+unique\\s+index|insert\\s+into|update)(?:<str>|[^;\"'])+;/.source.replace(/<str>/g, function () { return stringPattern; }), 'im'),\n\t\t\t\t\talias: 'language-sql',\n\t\t\t\t\tinside: Prism.languages.sql\n\t\t\t\t},\n\t\t\t\t'global-statements': globalStatements,\n\t\t\t\t'sql-statements': {\n\t\t\t\t\tpattern: /(^|\\s)(?:disconnect\\s+from|exec(?:ute)?|begin|commit|rollback|reset|validate)\\b/i,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'keyword'\n\t\t\t\t},\n\t\t\t\t'number': number,\n\t\t\t\t'numeric-constant': numericConstant,\n\t\t\t\t'punctuation': punctuation,\n\t\t\t\t'string': string\n\t\t\t}\n\t\t},\n\n\t\t'proc-groovy': {\n\t\t\tpattern: /(^proc\\s+groovy(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|quit|run|data);|(?![\\s\\S]))/im,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'comment': comment,\n\t\t\t\t'groovy': {\n\t\t\t\t\tpattern: RegExp(/(^[ \\t]*submit(?:\\s+(?:load|parseonly|norun))?)(?:<str>|[^\"'])+?(?=endsubmit;)/.source.replace(/<str>/g, function () { return stringPattern; }), 'im'),\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'language-groovy',\n\t\t\t\t\tinside: Prism.languages.groovy\n\t\t\t\t},\n\t\t\t\t'keyword': keywords,\n\t\t\t\t'submit-statement': submitStatement,\n\t\t\t\t'global-statements': globalStatements,\n\t\t\t\t'number': number,\n\t\t\t\t'numeric-constant': numericConstant,\n\t\t\t\t'punctuation': punctuation,\n\t\t\t\t'string': string\n\t\t\t}\n\t\t},\n\n\t\t'proc-lua': {\n\t\t\tpattern: /(^proc\\s+lua(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|quit|run|data);|(?![\\s\\S]))/im,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'comment': comment,\n\t\t\t\t'lua': {\n\t\t\t\t\tpattern: RegExp(/(^[ \\t]*submit(?:\\s+(?:load|parseonly|norun))?)(?:<str>|[^\"'])+?(?=endsubmit;)/.source.replace(/<str>/g, function () { return stringPattern; }), 'im'),\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'language-lua',\n\t\t\t\t\tinside: Prism.languages.lua\n\t\t\t\t},\n\t\t\t\t'keyword': keywords,\n\t\t\t\t'submit-statement': submitStatement,\n\t\t\t\t'global-statements': globalStatements,\n\t\t\t\t'number': number,\n\t\t\t\t'numeric-constant': numericConstant,\n\t\t\t\t'punctuation': punctuation,\n\t\t\t\t'string': string\n\t\t\t}\n\t\t},\n\n\t\t'proc-cas': {\n\t\t\tpattern: /(^proc\\s+cas(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|quit|data);|(?![\\s\\S]))/im,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'comment': comment,\n\t\t\t\t'statement-var': {\n\t\t\t\t\tpattern: /((?:^|\\s)=?)saveresult\\s[^;]+/im,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {\n\n\t\t\t\t\t\t'statement': {\n\t\t\t\t\t\t\tpattern: /^saveresult\\s+\\S+/i,\n\t\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t\tkeyword: /^(?:saveresult)/i\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\trest: args\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'cas-actions': casActions,\n\t\t\t\t'statement': {\n\t\t\t\t\tpattern: /((?:^|\\s)=?)(?:default|(?:un)?set|on|output|upload)[^;]+/im,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: args\n\t\t\t\t},\n\t\t\t\t'step': step,\n\t\t\t\t'keyword': keywords,\n\t\t\t\t'function': func,\n\t\t\t\t'format': format,\n\t\t\t\t'altformat': altformat,\n\t\t\t\t'global-statements': globalStatements,\n\t\t\t\t'number': number,\n\t\t\t\t'numeric-constant': numericConstant,\n\t\t\t\t'punctuation': punctuation,\n\t\t\t\t'string': string\n\t\t\t}\n\t\t},\n\n\t\t'proc-args': {\n\t\t\tpattern: RegExp(/(^proc\\s+\\w+\\s+)(?!\\s)(?:[^;\"']|<str>)+;/.source.replace(/<str>/g, function () { return stringPattern; }), 'im'),\n\t\t\tlookbehind: true,\n\t\t\tinside: args\n\t\t},\n\t\t/*Special keywords within macros*/\n\t\t'macro-keyword': macroKeyword,\n\t\t'macro-variable': macroVariable,\n\t\t'macro-string-functions': {\n\t\t\tpattern: /((?:^|\\s|=))%(?:NRBQUOTE|NRQUOTE|NRSTR|BQUOTE|QUOTE|STR)\\(.*?(?:[^%]\\))/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'function': {\n\t\t\t\t\tpattern: /%(?:NRBQUOTE|NRQUOTE|NRSTR|BQUOTE|QUOTE|STR)/i,\n\t\t\t\t\talias: 'keyword'\n\t\t\t\t},\n\t\t\t\t'macro-keyword': macroKeyword,\n\t\t\t\t'macro-variable': macroVariable,\n\t\t\t\t'escaped-char': {\n\t\t\t\t\tpattern: /%['\"()<>=¬^~;,#]/i,\n\t\t\t\t},\n\t\t\t\t'punctuation': punctuation\n\t\t\t}\n\t\t},\n\t\t'macro-declaration': {\n\t\t\tpattern: /^%macro[^;]+(?=;)/im,\n\t\t\tinside: {\n\t\t\t\t'keyword': /%macro/i,\n\t\t\t}\n\t\t},\n\t\t'macro-end': {\n\t\t\tpattern: /^%mend[^;]+(?=;)/im,\n\t\t\tinside: {\n\t\t\t\t'keyword': /%mend/i,\n\t\t\t}\n\t\t},\n\t\t/*%_zscore(headcir, _lhc, _mhc, _shc, headcz, headcpct, _Fheadcz); */\n\t\t'macro': {\n\t\t\tpattern: /%_\\w+(?=\\()/,\n\t\t\talias: 'keyword'\n\t\t},\n\t\t'input': {\n\t\t\tpattern: /\\binput\\s[-\\w\\s/*.$&]+;/i,\n\t\t\tinside: {\n\t\t\t\t'input': {\n\t\t\t\t\talias: 'keyword',\n\t\t\t\t\tpattern: /^input/i,\n\t\t\t\t},\n\t\t\t\t'comment': comment,\n\t\t\t\t'number': number,\n\t\t\t\t'numeric-constant': numericConstant\n\t\t\t}\n\t\t},\n\t\t'options-args': {\n\t\t\tpattern: /(^options)[-'\"|/\\\\<>*+=:()\\w\\s]*(?=;)/im,\n\t\t\tlookbehind: true,\n\t\t\tinside: args\n\t\t},\n\t\t'cas-actions': casActions,\n\t\t'comment': comment,\n\t\t'function': func,\n\t\t'format': format,\n\t\t'altformat': altformat,\n\t\t'numeric-constant': numericConstant,\n\t\t'datetime': {\n\t\t\t// '1jan2013'd, '9:25:19pm't, '18jan2003:9:27:05am'dt\n\t\t\tpattern: RegExp(stringPattern + '(?:dt?|t)'),\n\t\t\talias: 'number'\n\t\t},\n\t\t'string': string,\n\t\t'step': step,\n\t\t'keyword': keywords,\n\t\t// In SAS Studio syntax highlighting, these operators are styled like keywords\n\t\t'operator-keyword': {\n\t\t\tpattern: /\\b(?:eq|ne|gt|lt|ge|le|in|not)\\b/i,\n\t\t\talias: 'operator'\n\t\t},\n\t\t// Decimal (1.2e23), hexadecimal (0c1x)\n\t\t'number': number,\n\t\t'operator': /\\*\\*?|\\|\\|?|!!?|¦¦?|<[>=]?|>[<=]?|[-+\\/=&]|[~¬^]=?/i,\n\t\t'punctuation': punctuation\n\t};\n\n}(Prism));\n"]},"metadata":{},"sourceType":"script"}