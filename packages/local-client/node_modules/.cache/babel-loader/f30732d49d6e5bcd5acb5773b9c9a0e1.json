{"ast":null,"code":"// Django/Jinja2 syntax definition for Prism.js <http://prismjs.com> syntax highlighter.\n// Mostly it works OK but can paint code incorrectly on complex html/template tag combinations.\n(function (Prism) {\n  Prism.languages.django = {\n    'comment': /^\\{#[\\s\\S]*?#\\}$/,\n    'tag': {\n      pattern: /(^\\{%[+-]?\\s*)\\w+/,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    'delimiter': {\n      pattern: /^\\{[{%][+-]?|[+-]?[}%]\\}$/,\n      alias: 'punctuation'\n    },\n    'string': {\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    'filter': {\n      pattern: /(\\|)\\w+/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    'test': {\n      pattern: /(\\bis\\s+(?:not\\s+)?)(?!not\\b)\\w+/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    'function': /\\b[a-z_]\\w+(?=\\s*\\()/i,\n    'keyword': /\\b(?:and|as|by|else|for|if|import|in|is|loop|not|or|recursive|with|without)\\b/,\n    'operator': /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n    'number': /\\b\\d+(?:\\.\\d+)?\\b/,\n    'boolean': /[Tt]rue|[Ff]alse|[Nn]one/,\n    'variable': /\\b\\w+?\\b/,\n    'punctuation': /[{}[\\](),.:;]/\n  };\n  var pattern = /\\{\\{[\\s\\S]*?\\}\\}|\\{%[\\s\\S]*?%\\}|\\{#[\\s\\S]*?#\\}/g;\n  var markupTemplating = Prism.languages['markup-templating'];\n  Prism.hooks.add('before-tokenize', function (env) {\n    markupTemplating.buildPlaceholders(env, 'django', pattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    markupTemplating.tokenizePlaceholders(env, 'django');\n  }); // Add an Jinja2 alias\n\n  Prism.languages.jinja2 = Prism.languages.django;\n  Prism.hooks.add('before-tokenize', function (env) {\n    markupTemplating.buildPlaceholders(env, 'jinja2', pattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    markupTemplating.tokenizePlaceholders(env, 'jinja2');\n  });\n})(Prism);","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/jbook/node_modules/prismjs/components/prism-django.js"],"names":["Prism","languages","django","pattern","lookbehind","alias","greedy","markupTemplating","hooks","add","env","buildPlaceholders","tokenizePlaceholders","jinja2"],"mappings":"AAAA;AACA;AAEC,WAAUA,KAAV,EAAiB;AAEjBA,EAAAA,KAAK,CAACC,SAAN,CAAgBC,MAAhB,GAAyB;AACxB,eAAW,kBADa;AAExB,WAAO;AACNC,MAAAA,OAAO,EAAE,mBADH;AAENC,MAAAA,UAAU,EAAE,IAFN;AAGNC,MAAAA,KAAK,EAAE;AAHD,KAFiB;AAOxB,iBAAa;AACZF,MAAAA,OAAO,EAAE,2BADG;AAEZE,MAAAA,KAAK,EAAE;AAFK,KAPW;AAWxB,cAAU;AACTF,MAAAA,OAAO,EAAE,iCADA;AAETG,MAAAA,MAAM,EAAE;AAFC,KAXc;AAexB,cAAU;AACTH,MAAAA,OAAO,EAAE,SADA;AAETC,MAAAA,UAAU,EAAE,IAFH;AAGTC,MAAAA,KAAK,EAAE;AAHE,KAfc;AAoBxB,YAAQ;AACPF,MAAAA,OAAO,EAAE,kCADF;AAEPC,MAAAA,UAAU,EAAE,IAFL;AAGPC,MAAAA,KAAK,EAAE;AAHA,KApBgB;AAyBxB,gBAAY,uBAzBY;AA0BxB,eAAW,+EA1Ba;AA2BxB,gBAAY,mDA3BY;AA4BxB,cAAU,mBA5Bc;AA6BxB,eAAW,0BA7Ba;AA8BxB,gBAAY,UA9BY;AA+BxB,mBAAe;AA/BS,GAAzB;AAmCA,MAAIF,OAAO,GAAG,iDAAd;AACA,MAAII,gBAAgB,GAAGP,KAAK,CAACC,SAAN,CAAgB,mBAAhB,CAAvB;AAEAD,EAAAA,KAAK,CAACQ,KAAN,CAAYC,GAAZ,CAAgB,iBAAhB,EAAmC,UAAUC,GAAV,EAAe;AACjDH,IAAAA,gBAAgB,CAACI,iBAAjB,CAAmCD,GAAnC,EAAwC,QAAxC,EAAkDP,OAAlD;AACA,GAFD;AAGAH,EAAAA,KAAK,CAACQ,KAAN,CAAYC,GAAZ,CAAgB,gBAAhB,EAAkC,UAAUC,GAAV,EAAe;AAChDH,IAAAA,gBAAgB,CAACK,oBAAjB,CAAsCF,GAAtC,EAA2C,QAA3C;AACA,GAFD,EA3CiB,CA+CjB;;AACAV,EAAAA,KAAK,CAACC,SAAN,CAAgBY,MAAhB,GAAyBb,KAAK,CAACC,SAAN,CAAgBC,MAAzC;AACAF,EAAAA,KAAK,CAACQ,KAAN,CAAYC,GAAZ,CAAgB,iBAAhB,EAAmC,UAAUC,GAAV,EAAe;AACjDH,IAAAA,gBAAgB,CAACI,iBAAjB,CAAmCD,GAAnC,EAAwC,QAAxC,EAAkDP,OAAlD;AACA,GAFD;AAGAH,EAAAA,KAAK,CAACQ,KAAN,CAAYC,GAAZ,CAAgB,gBAAhB,EAAkC,UAAUC,GAAV,EAAe;AAChDH,IAAAA,gBAAgB,CAACK,oBAAjB,CAAsCF,GAAtC,EAA2C,QAA3C;AACA,GAFD;AAIA,CAxDA,EAwDCV,KAxDD,CAAD","sourcesContent":["// Django/Jinja2 syntax definition for Prism.js <http://prismjs.com> syntax highlighter.\n// Mostly it works OK but can paint code incorrectly on complex html/template tag combinations.\n\n(function (Prism) {\n\n\tPrism.languages.django = {\n\t\t'comment': /^\\{#[\\s\\S]*?#\\}$/,\n\t\t'tag': {\n\t\t\tpattern: /(^\\{%[+-]?\\s*)\\w+/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'keyword'\n\t\t},\n\t\t'delimiter': {\n\t\t\tpattern: /^\\{[{%][+-]?|[+-]?[}%]\\}$/,\n\t\t\talias: 'punctuation'\n\t\t},\n\t\t'string': {\n\t\t\tpattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\t\tgreedy: true\n\t\t},\n\t\t'filter': {\n\t\t\tpattern: /(\\|)\\w+/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'function'\n\t\t},\n\t\t'test': {\n\t\t\tpattern: /(\\bis\\s+(?:not\\s+)?)(?!not\\b)\\w+/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'function'\n\t\t},\n\t\t'function': /\\b[a-z_]\\w+(?=\\s*\\()/i,\n\t\t'keyword': /\\b(?:and|as|by|else|for|if|import|in|is|loop|not|or|recursive|with|without)\\b/,\n\t\t'operator': /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n\t\t'number': /\\b\\d+(?:\\.\\d+)?\\b/,\n\t\t'boolean': /[Tt]rue|[Ff]alse|[Nn]one/,\n\t\t'variable': /\\b\\w+?\\b/,\n\t\t'punctuation': /[{}[\\](),.:;]/\n\t};\n\n\n\tvar pattern = /\\{\\{[\\s\\S]*?\\}\\}|\\{%[\\s\\S]*?%\\}|\\{#[\\s\\S]*?#\\}/g;\n\tvar markupTemplating = Prism.languages['markup-templating'];\n\n\tPrism.hooks.add('before-tokenize', function (env) {\n\t\tmarkupTemplating.buildPlaceholders(env, 'django', pattern);\n\t});\n\tPrism.hooks.add('after-tokenize', function (env) {\n\t\tmarkupTemplating.tokenizePlaceholders(env, 'django');\n\t});\n\n\t// Add an Jinja2 alias\n\tPrism.languages.jinja2 = Prism.languages.django;\n\tPrism.hooks.add('before-tokenize', function (env) {\n\t\tmarkupTemplating.buildPlaceholders(env, 'jinja2', pattern);\n\t});\n\tPrism.hooks.add('after-tokenize', function (env) {\n\t\tmarkupTemplating.tokenizePlaceholders(env, 'jinja2');\n\t});\n\n}(Prism));\n"]},"metadata":{},"sourceType":"script"}