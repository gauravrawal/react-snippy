{"ast":null,"code":"(function (Prism) {\n  Prism.languages.velocity = Prism.languages.extend('markup', {});\n  var velocity = {\n    'variable': {\n      pattern: /(^|[^\\\\](?:\\\\\\\\)*)\\$!?(?:[a-z][\\w-]*(?:\\([^)]*\\))?(?:\\.[a-z][\\w-]*(?:\\([^)]*\\))?|\\[[^\\]]+\\])*|\\{[^}]+\\})/i,\n      lookbehind: true,\n      inside: {} // See below\n\n    },\n    'string': {\n      pattern: /\"[^\"]*\"|'[^']*'/,\n      greedy: true\n    },\n    'number': /\\b\\d+\\b/,\n    'boolean': /\\b(?:true|false)\\b/,\n    'operator': /[=!<>]=?|[+*/%-]|&&|\\|\\||\\.\\.|\\b(?:eq|g[et]|l[et]|n(?:e|ot))\\b/,\n    'punctuation': /[(){}[\\]:,.]/\n  };\n  velocity.variable.inside = {\n    'string': velocity['string'],\n    'function': {\n      pattern: /([^\\w-])[a-z][\\w-]*(?=\\()/,\n      lookbehind: true\n    },\n    'number': velocity['number'],\n    'boolean': velocity['boolean'],\n    'punctuation': velocity['punctuation']\n  };\n  Prism.languages.insertBefore('velocity', 'comment', {\n    'unparsed': {\n      pattern: /(^|[^\\\\])#\\[\\[[\\s\\S]*?\\]\\]#/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'punctuation': /^#\\[\\[|\\]\\]#$/\n      }\n    },\n    'velocity-comment': [{\n      pattern: /(^|[^\\\\])#\\*[\\s\\S]*?\\*#/,\n      lookbehind: true,\n      greedy: true,\n      alias: 'comment'\n    }, {\n      pattern: /(^|[^\\\\])##.*/,\n      lookbehind: true,\n      greedy: true,\n      alias: 'comment'\n    }],\n    'directive': {\n      pattern: /(^|[^\\\\](?:\\\\\\\\)*)#@?(?:[a-z][\\w-]*|\\{[a-z][\\w-]*\\})(?:\\s*\\((?:[^()]|\\([^()]*\\))*\\))?/i,\n      lookbehind: true,\n      inside: {\n        'keyword': {\n          pattern: /^#@?(?:[a-z][\\w-]*|\\{[a-z][\\w-]*\\})|\\bin\\b/,\n          inside: {\n            'punctuation': /[{}]/\n          }\n        },\n        rest: velocity\n      }\n    },\n    'variable': velocity['variable']\n  });\n  Prism.languages.velocity['tag'].inside['attr-value'].inside.rest = Prism.languages.velocity;\n})(Prism);","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/jbook/node_modules/prismjs/components/prism-velocity.js"],"names":["Prism","languages","velocity","extend","pattern","lookbehind","inside","greedy","variable","insertBefore","alias","rest"],"mappings":"AAAC,WAAUA,KAAV,EAAiB;AACjBA,EAAAA,KAAK,CAACC,SAAN,CAAgBC,QAAhB,GAA2BF,KAAK,CAACC,SAAN,CAAgBE,MAAhB,CAAuB,QAAvB,EAAiC,EAAjC,CAA3B;AAEA,MAAID,QAAQ,GAAG;AACd,gBAAY;AACXE,MAAAA,OAAO,EAAE,2GADE;AAEXC,MAAAA,UAAU,EAAE,IAFD;AAGXC,MAAAA,MAAM,EAAE,EAHG,CAGA;;AAHA,KADE;AAMd,cAAU;AACTF,MAAAA,OAAO,EAAE,iBADA;AAETG,MAAAA,MAAM,EAAE;AAFC,KANI;AAUd,cAAU,SAVI;AAWd,eAAW,oBAXG;AAYd,gBAAY,gEAZE;AAad,mBAAe;AAbD,GAAf;AAgBAL,EAAAA,QAAQ,CAACM,QAAT,CAAkBF,MAAlB,GAA2B;AAC1B,cAAUJ,QAAQ,CAAC,QAAD,CADQ;AAE1B,gBAAY;AACXE,MAAAA,OAAO,EAAE,2BADE;AAEXC,MAAAA,UAAU,EAAE;AAFD,KAFc;AAM1B,cAAUH,QAAQ,CAAC,QAAD,CANQ;AAO1B,eAAWA,QAAQ,CAAC,SAAD,CAPO;AAQ1B,mBAAeA,QAAQ,CAAC,aAAD;AARG,GAA3B;AAWAF,EAAAA,KAAK,CAACC,SAAN,CAAgBQ,YAAhB,CAA6B,UAA7B,EAAyC,SAAzC,EAAoD;AACnD,gBAAY;AACXL,MAAAA,OAAO,EAAE,6BADE;AAEXC,MAAAA,UAAU,EAAE,IAFD;AAGXE,MAAAA,MAAM,EAAE,IAHG;AAIXD,MAAAA,MAAM,EAAE;AACP,uBAAe;AADR;AAJG,KADuC;AASnD,wBAAoB,CACnB;AACCF,MAAAA,OAAO,EAAE,yBADV;AAECC,MAAAA,UAAU,EAAE,IAFb;AAGCE,MAAAA,MAAM,EAAE,IAHT;AAICG,MAAAA,KAAK,EAAE;AAJR,KADmB,EAOnB;AACCN,MAAAA,OAAO,EAAE,eADV;AAECC,MAAAA,UAAU,EAAE,IAFb;AAGCE,MAAAA,MAAM,EAAE,IAHT;AAICG,MAAAA,KAAK,EAAE;AAJR,KAPmB,CAT+B;AAuBnD,iBAAa;AACZN,MAAAA,OAAO,EAAE,wFADG;AAEZC,MAAAA,UAAU,EAAE,IAFA;AAGZC,MAAAA,MAAM,EAAE;AACP,mBAAW;AACVF,UAAAA,OAAO,EAAE,4CADC;AAEVE,UAAAA,MAAM,EAAE;AACP,2BAAe;AADR;AAFE,SADJ;AAOPK,QAAAA,IAAI,EAAET;AAPC;AAHI,KAvBsC;AAoCnD,gBAAYA,QAAQ,CAAC,UAAD;AApC+B,GAApD;AAuCAF,EAAAA,KAAK,CAACC,SAAN,CAAgBC,QAAhB,CAAyB,KAAzB,EAAgCI,MAAhC,CAAuC,YAAvC,EAAqDA,MAArD,CAA4DK,IAA5D,GAAmEX,KAAK,CAACC,SAAN,CAAgBC,QAAnF;AAEA,CAvEA,EAuECF,KAvED,CAAD","sourcesContent":["(function (Prism) {\n\tPrism.languages.velocity = Prism.languages.extend('markup', {});\n\n\tvar velocity = {\n\t\t'variable': {\n\t\t\tpattern: /(^|[^\\\\](?:\\\\\\\\)*)\\$!?(?:[a-z][\\w-]*(?:\\([^)]*\\))?(?:\\.[a-z][\\w-]*(?:\\([^)]*\\))?|\\[[^\\]]+\\])*|\\{[^}]+\\})/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: {} // See below\n\t\t},\n\t\t'string': {\n\t\t\tpattern: /\"[^\"]*\"|'[^']*'/,\n\t\t\tgreedy: true\n\t\t},\n\t\t'number': /\\b\\d+\\b/,\n\t\t'boolean': /\\b(?:true|false)\\b/,\n\t\t'operator': /[=!<>]=?|[+*/%-]|&&|\\|\\||\\.\\.|\\b(?:eq|g[et]|l[et]|n(?:e|ot))\\b/,\n\t\t'punctuation': /[(){}[\\]:,.]/\n\t};\n\n\tvelocity.variable.inside = {\n\t\t'string': velocity['string'],\n\t\t'function': {\n\t\t\tpattern: /([^\\w-])[a-z][\\w-]*(?=\\()/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'number': velocity['number'],\n\t\t'boolean': velocity['boolean'],\n\t\t'punctuation': velocity['punctuation']\n\t};\n\n\tPrism.languages.insertBefore('velocity', 'comment', {\n\t\t'unparsed': {\n\t\t\tpattern: /(^|[^\\\\])#\\[\\[[\\s\\S]*?\\]\\]#/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /^#\\[\\[|\\]\\]#$/\n\t\t\t}\n\t\t},\n\t\t'velocity-comment': [\n\t\t\t{\n\t\t\t\tpattern: /(^|[^\\\\])#\\*[\\s\\S]*?\\*#/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\talias: 'comment'\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(^|[^\\\\])##.*/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\talias: 'comment'\n\t\t\t}\n\t\t],\n\t\t'directive': {\n\t\t\tpattern: /(^|[^\\\\](?:\\\\\\\\)*)#@?(?:[a-z][\\w-]*|\\{[a-z][\\w-]*\\})(?:\\s*\\((?:[^()]|\\([^()]*\\))*\\))?/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'keyword': {\n\t\t\t\t\tpattern: /^#@?(?:[a-z][\\w-]*|\\{[a-z][\\w-]*\\})|\\bin\\b/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /[{}]/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\trest: velocity\n\t\t\t}\n\t\t},\n\t\t'variable': velocity['variable']\n\t});\n\n\tPrism.languages.velocity['tag'].inside['attr-value'].inside.rest = Prism.languages.velocity;\n\n}(Prism));\n"]},"metadata":{},"sourceType":"script"}