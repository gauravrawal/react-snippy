{"ast":null,"code":"(function (Prism) {\n  var specialEscape = {\n    pattern: /\\\\[\\\\(){}[\\]^$+*?|.]/,\n    alias: 'escape'\n  };\n  var escape = /\\\\(?:x[\\da-fA-F]{2}|u[\\da-fA-F]{4}|u\\{[\\da-fA-F]+\\}|c[a-zA-Z]|0[0-7]{0,2}|[123][0-7]{2}|.)/;\n  var charClass = {\n    pattern: /\\.|\\\\[wsd]|\\\\p\\{[^{}]+\\}/i,\n    alias: 'class-name'\n  };\n  var charClassWithoutDot = {\n    pattern: /\\\\[wsd]|\\\\p\\{[^{}]+\\}/i,\n    alias: 'class-name'\n  };\n  var rangeChar = '(?:[^\\\\\\\\-]|' + escape.source + ')';\n  var range = RegExp(rangeChar + '-' + rangeChar); // the name of a capturing group\n\n  var groupName = {\n    pattern: /(<|')[^<>']+(?=[>']$)/,\n    lookbehind: true,\n    alias: 'variable'\n  };\n  Prism.languages.regex = {\n    'charset': {\n      pattern: /((?:^|[^\\\\])(?:\\\\\\\\)*)\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*\\]/,\n      lookbehind: true,\n      inside: {\n        'charset-negation': {\n          pattern: /(^\\[)\\^/,\n          lookbehind: true,\n          alias: 'operator'\n        },\n        'charset-punctuation': {\n          pattern: /^\\[|\\]$/,\n          alias: 'punctuation'\n        },\n        'range': {\n          pattern: range,\n          inside: {\n            'escape': escape,\n            'range-punctuation': {\n              pattern: /-/,\n              alias: 'operator'\n            }\n          }\n        },\n        'special-escape': specialEscape,\n        'charclass': charClassWithoutDot,\n        'escape': escape\n      }\n    },\n    'special-escape': specialEscape,\n    'charclass': charClass,\n    'backreference': [{\n      // a backreference which is not an octal escape\n      pattern: /\\\\(?![123][0-7]{2})[1-9]/,\n      alias: 'keyword'\n    }, {\n      pattern: /\\\\k<[^<>']+>/,\n      alias: 'keyword',\n      inside: {\n        'group-name': groupName\n      }\n    }],\n    'anchor': {\n      pattern: /[$^]|\\\\[ABbGZz]/,\n      alias: 'function'\n    },\n    'escape': escape,\n    'group': [{\n      // https://docs.oracle.com/javase/10/docs/api/java/util/regex/Pattern.html\n      // https://docs.microsoft.com/en-us/dotnet/standard/base-types/regular-expression-language-quick-reference?view=netframework-4.7.2#grouping-constructs\n      // (), (?<name>), (?'name'), (?>), (?:), (?=), (?!), (?<=), (?<!), (?is-m), (?i-m:)\n      pattern: /\\((?:\\?(?:<[^<>']+>|'[^<>']+'|[>:]|<?[=!]|[idmnsuxU]+(?:-[idmnsuxU]+)?:?))?/,\n      alias: 'punctuation',\n      inside: {\n        'group-name': groupName\n      }\n    }, {\n      pattern: /\\)/,\n      alias: 'punctuation'\n    }],\n    'quantifier': {\n      pattern: /(?:[+*?]|\\{\\d+(?:,\\d*)?\\})[?+]?/,\n      alias: 'number'\n    },\n    'alternation': {\n      pattern: /\\|/,\n      alias: 'keyword'\n    }\n  };\n})(Prism);","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/jbook/node_modules/prismjs/components/prism-regex.js"],"names":["Prism","specialEscape","pattern","alias","escape","charClass","charClassWithoutDot","rangeChar","source","range","RegExp","groupName","lookbehind","languages","regex","inside"],"mappings":"AAAC,WAAUA,KAAV,EAAiB;AAEjB,MAAIC,aAAa,GAAG;AACnBC,IAAAA,OAAO,EAAE,sBADU;AAEnBC,IAAAA,KAAK,EAAE;AAFY,GAApB;AAIA,MAAIC,MAAM,GAAG,4FAAb;AACA,MAAIC,SAAS,GAAG;AACfH,IAAAA,OAAO,EAAE,2BADM;AAEfC,IAAAA,KAAK,EAAE;AAFQ,GAAhB;AAIA,MAAIG,mBAAmB,GAAG;AACzBJ,IAAAA,OAAO,EAAE,wBADgB;AAEzBC,IAAAA,KAAK,EAAE;AAFkB,GAA1B;AAKA,MAAII,SAAS,GAAG,iBAAiBH,MAAM,CAACI,MAAxB,GAAiC,GAAjD;AACA,MAAIC,KAAK,GAAGC,MAAM,CAACH,SAAS,GAAG,GAAZ,GAAkBA,SAAnB,CAAlB,CAjBiB,CAmBjB;;AACA,MAAII,SAAS,GAAG;AACfT,IAAAA,OAAO,EAAE,uBADM;AAEfU,IAAAA,UAAU,EAAE,IAFG;AAGfT,IAAAA,KAAK,EAAE;AAHQ,GAAhB;AAMAH,EAAAA,KAAK,CAACa,SAAN,CAAgBC,KAAhB,GAAwB;AACvB,eAAW;AACVZ,MAAAA,OAAO,EAAE,iDADC;AAEVU,MAAAA,UAAU,EAAE,IAFF;AAGVG,MAAAA,MAAM,EAAE;AACP,4BAAoB;AACnBb,UAAAA,OAAO,EAAE,SADU;AAEnBU,UAAAA,UAAU,EAAE,IAFO;AAGnBT,UAAAA,KAAK,EAAE;AAHY,SADb;AAMP,+BAAuB;AACtBD,UAAAA,OAAO,EAAE,SADa;AAEtBC,UAAAA,KAAK,EAAE;AAFe,SANhB;AAUP,iBAAS;AACRD,UAAAA,OAAO,EAAEO,KADD;AAERM,UAAAA,MAAM,EAAE;AACP,sBAAUX,MADH;AAEP,iCAAqB;AACpBF,cAAAA,OAAO,EAAE,GADW;AAEpBC,cAAAA,KAAK,EAAE;AAFa;AAFd;AAFA,SAVF;AAoBP,0BAAkBF,aApBX;AAqBP,qBAAaK,mBArBN;AAsBP,kBAAUF;AAtBH;AAHE,KADY;AA6BvB,sBAAkBH,aA7BK;AA8BvB,iBAAaI,SA9BU;AA+BvB,qBAAiB,CAChB;AACC;AACAH,MAAAA,OAAO,EAAE,0BAFV;AAGCC,MAAAA,KAAK,EAAE;AAHR,KADgB,EAMhB;AACCD,MAAAA,OAAO,EAAE,cADV;AAECC,MAAAA,KAAK,EAAE,SAFR;AAGCY,MAAAA,MAAM,EAAE;AACP,sBAAcJ;AADP;AAHT,KANgB,CA/BM;AA6CvB,cAAU;AACTT,MAAAA,OAAO,EAAE,iBADA;AAETC,MAAAA,KAAK,EAAE;AAFE,KA7Ca;AAiDvB,cAAUC,MAjDa;AAkDvB,aAAS,CACR;AACC;AACA;AAEA;AACAF,MAAAA,OAAO,EAAE,6EALV;AAMCC,MAAAA,KAAK,EAAE,aANR;AAOCY,MAAAA,MAAM,EAAE;AACP,sBAAcJ;AADP;AAPT,KADQ,EAYR;AACCT,MAAAA,OAAO,EAAE,IADV;AAECC,MAAAA,KAAK,EAAE;AAFR,KAZQ,CAlDc;AAmEvB,kBAAc;AACbD,MAAAA,OAAO,EAAE,iCADI;AAEbC,MAAAA,KAAK,EAAE;AAFM,KAnES;AAuEvB,mBAAe;AACdD,MAAAA,OAAO,EAAE,IADK;AAEdC,MAAAA,KAAK,EAAE;AAFO;AAvEQ,GAAxB;AA6EA,CAvGA,EAuGCH,KAvGD,CAAD","sourcesContent":["(function (Prism) {\n\n\tvar specialEscape = {\n\t\tpattern: /\\\\[\\\\(){}[\\]^$+*?|.]/,\n\t\talias: 'escape'\n\t};\n\tvar escape = /\\\\(?:x[\\da-fA-F]{2}|u[\\da-fA-F]{4}|u\\{[\\da-fA-F]+\\}|c[a-zA-Z]|0[0-7]{0,2}|[123][0-7]{2}|.)/;\n\tvar charClass = {\n\t\tpattern: /\\.|\\\\[wsd]|\\\\p\\{[^{}]+\\}/i,\n\t\talias: 'class-name'\n\t};\n\tvar charClassWithoutDot = {\n\t\tpattern: /\\\\[wsd]|\\\\p\\{[^{}]+\\}/i,\n\t\talias: 'class-name'\n\t};\n\n\tvar rangeChar = '(?:[^\\\\\\\\-]|' + escape.source + ')';\n\tvar range = RegExp(rangeChar + '-' + rangeChar);\n\n\t// the name of a capturing group\n\tvar groupName = {\n\t\tpattern: /(<|')[^<>']+(?=[>']$)/,\n\t\tlookbehind: true,\n\t\talias: 'variable'\n\t};\n\n\tPrism.languages.regex = {\n\t\t'charset': {\n\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\\\\\)*)\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*\\]/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'charset-negation': {\n\t\t\t\t\tpattern: /(^\\[)\\^/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'operator'\n\t\t\t\t},\n\t\t\t\t'charset-punctuation': {\n\t\t\t\t\tpattern: /^\\[|\\]$/,\n\t\t\t\t\talias: 'punctuation'\n\t\t\t\t},\n\t\t\t\t'range': {\n\t\t\t\t\tpattern: range,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'escape': escape,\n\t\t\t\t\t\t'range-punctuation': {\n\t\t\t\t\t\t\tpattern: /-/,\n\t\t\t\t\t\t\talias: 'operator'\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'special-escape': specialEscape,\n\t\t\t\t'charclass': charClassWithoutDot,\n\t\t\t\t'escape': escape\n\t\t\t}\n\t\t},\n\t\t'special-escape': specialEscape,\n\t\t'charclass': charClass,\n\t\t'backreference': [\n\t\t\t{\n\t\t\t\t// a backreference which is not an octal escape\n\t\t\t\tpattern: /\\\\(?![123][0-7]{2})[1-9]/,\n\t\t\t\talias: 'keyword'\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /\\\\k<[^<>']+>/,\n\t\t\t\talias: 'keyword',\n\t\t\t\tinside: {\n\t\t\t\t\t'group-name': groupName\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t'anchor': {\n\t\t\tpattern: /[$^]|\\\\[ABbGZz]/,\n\t\t\talias: 'function'\n\t\t},\n\t\t'escape': escape,\n\t\t'group': [\n\t\t\t{\n\t\t\t\t// https://docs.oracle.com/javase/10/docs/api/java/util/regex/Pattern.html\n\t\t\t\t// https://docs.microsoft.com/en-us/dotnet/standard/base-types/regular-expression-language-quick-reference?view=netframework-4.7.2#grouping-constructs\n\n\t\t\t\t// (), (?<name>), (?'name'), (?>), (?:), (?=), (?!), (?<=), (?<!), (?is-m), (?i-m:)\n\t\t\t\tpattern: /\\((?:\\?(?:<[^<>']+>|'[^<>']+'|[>:]|<?[=!]|[idmnsuxU]+(?:-[idmnsuxU]+)?:?))?/,\n\t\t\t\talias: 'punctuation',\n\t\t\t\tinside: {\n\t\t\t\t\t'group-name': groupName\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /\\)/,\n\t\t\t\talias: 'punctuation'\n\t\t\t}\n\t\t],\n\t\t'quantifier': {\n\t\t\tpattern: /(?:[+*?]|\\{\\d+(?:,\\d*)?\\})[?+]?/,\n\t\t\talias: 'number'\n\t\t},\n\t\t'alternation': {\n\t\t\tpattern: /\\|/,\n\t\t\talias: 'keyword'\n\t\t}\n\t};\n\n}(Prism));\n"]},"metadata":{},"sourceType":"script"}