{"ast":null,"code":"(function (Prism) {\n  // Pascaligo is a layer 2 smart contract language for the tezos blockchain\n  var braces = /\\((?:[^()]|\\((?:[^()]|\\([^()]*\\))*\\))*\\)/.source;\n  var type = /(?:\\b\\w+(?:<braces>)?|<braces>)/.source.replace(/<braces>/g, function () {\n    return braces;\n  });\n  var pascaligo = Prism.languages.pascaligo = {\n    'comment': /\\(\\*[\\s\\S]+?\\*\\)|\\/\\/.*/,\n    'string': {\n      pattern: /([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|\\^[a-z]/i,\n      greedy: true\n    },\n    'class-name': [{\n      pattern: RegExp(/(\\btype\\s+\\w+\\s+is\\s+)<type>/.source.replace(/<type>/g, function () {\n        return type;\n      }), 'i'),\n      lookbehind: true,\n      inside: null // see below\n\n    }, {\n      pattern: RegExp(/<type>(?=\\s+is\\b)/.source.replace(/<type>/g, function () {\n        return type;\n      }), 'i'),\n      inside: null // see below\n\n    }, {\n      pattern: RegExp(/(:\\s*)<type>/.source.replace(/<type>/g, function () {\n        return type;\n      })),\n      lookbehind: true,\n      inside: null // see below\n\n    }],\n    'keyword': {\n      pattern: /(^|[^&])\\b(?:begin|block|case|const|else|end|fail|for|from|function|if|is|nil|of|remove|return|skip|then|type|var|while|with)\\b/i,\n      lookbehind: true\n    },\n    'boolean': {\n      pattern: /(^|[^&])\\b(?:True|False)\\b/i,\n      lookbehind: true\n    },\n    'builtin': {\n      pattern: /(^|[^&])\\b(?:bool|int|list|map|nat|record|string|unit)\\b/i,\n      lookbehind: true\n    },\n    'function': /\\b\\w+(?=\\s*\\()/i,\n    'number': [// Hexadecimal, octal and binary\n    /%[01]+|&[0-7]+|\\$[a-f\\d]+/i, // Decimal\n    /\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?(?:mtz|n)?/i],\n    'operator': /->|=\\/=|\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=|]|\\b(?:and|mod|or)\\b/,\n    'punctuation': /\\(\\.|\\.\\)|[()\\[\\]:;,.{}]/\n  };\n  var classNameInside = ['comment', 'keyword', 'builtin', 'operator', 'punctuation'].reduce(function (accum, key) {\n    accum[key] = pascaligo[key];\n    return accum;\n  }, {});\n  pascaligo['class-name'].forEach(function (p) {\n    p.inside = classNameInside;\n  });\n})(Prism);","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/github/react-snippy/node_modules/prismjs/components/prism-pascaligo.js"],"names":["Prism","braces","source","type","replace","pascaligo","languages","pattern","greedy","RegExp","lookbehind","inside","classNameInside","reduce","accum","key","forEach","p"],"mappings":"AAAC,WAAUA,KAAV,EAAiB;AAEjB;AAEA,MAAIC,MAAM,GAAG,2CAA2CC,MAAxD;AACA,MAAIC,IAAI,GAAG,kCAAkCD,MAAlC,CAAyCE,OAAzC,CAAiD,WAAjD,EAA8D,YAAY;AAAE,WAAOH,MAAP;AAAgB,GAA5F,CAAX;AAEA,MAAII,SAAS,GAAGL,KAAK,CAACM,SAAN,CAAgBD,SAAhB,GAA4B;AAC3C,eAAW,yBADgC;AAE3C,cAAU;AACTE,MAAAA,OAAO,EAAE,6CADA;AAETC,MAAAA,MAAM,EAAE;AAFC,KAFiC;AAM3C,kBAAc,CACb;AACCD,MAAAA,OAAO,EAAEE,MAAM,CAAC,+BAA+BP,MAA/B,CAAsCE,OAAtC,CAA8C,SAA9C,EAAyD,YAAY;AAAE,eAAOD,IAAP;AAAc,OAArF,CAAD,EAAyF,GAAzF,CADhB;AAECO,MAAAA,UAAU,EAAE,IAFb;AAGCC,MAAAA,MAAM,EAAE,IAHT,CAGc;;AAHd,KADa,EAMb;AACCJ,MAAAA,OAAO,EAAEE,MAAM,CAAC,oBAAoBP,MAApB,CAA2BE,OAA3B,CAAmC,SAAnC,EAA8C,YAAY;AAAE,eAAOD,IAAP;AAAc,OAA1E,CAAD,EAA8E,GAA9E,CADhB;AAECQ,MAAAA,MAAM,EAAE,IAFT,CAEc;;AAFd,KANa,EAUb;AACCJ,MAAAA,OAAO,EAAEE,MAAM,CAAC,eAAeP,MAAf,CAAsBE,OAAtB,CAA8B,SAA9B,EAAyC,YAAY;AAAE,eAAOD,IAAP;AAAc,OAArE,CAAD,CADhB;AAECO,MAAAA,UAAU,EAAE,IAFb;AAGCC,MAAAA,MAAM,EAAE,IAHT,CAGc;;AAHd,KAVa,CAN6B;AAsB3C,eAAW;AACVJ,MAAAA,OAAO,EAAE,kIADC;AAEVG,MAAAA,UAAU,EAAE;AAFF,KAtBgC;AA0B3C,eAAW;AACVH,MAAAA,OAAO,EAAE,6BADC;AAEVG,MAAAA,UAAU,EAAE;AAFF,KA1BgC;AA8B3C,eAAW;AACVH,MAAAA,OAAO,EAAE,2DADC;AAEVG,MAAAA,UAAU,EAAE;AAFF,KA9BgC;AAkC3C,gBAAY,iBAlC+B;AAmC3C,cAAU,CACT;AACA,gCAFS,EAGT;AACA,8CAJS,CAnCiC;AAyC3C,gBAAY,0EAzC+B;AA0C3C,mBAAe;AA1C4B,GAA5C;AA6CA,MAAIE,eAAe,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,UAAlC,EAA8C,aAA9C,EAA6DC,MAA7D,CAAoE,UAAUC,KAAV,EAAiBC,GAAjB,EAAsB;AAC/GD,IAAAA,KAAK,CAACC,GAAD,CAAL,GAAaV,SAAS,CAACU,GAAD,CAAtB;AACA,WAAOD,KAAP;AACA,GAHqB,EAGnB,EAHmB,CAAtB;AAKAT,EAAAA,SAAS,CAAC,YAAD,CAAT,CAAwBW,OAAxB,CAAgC,UAAUC,CAAV,EAAa;AAC5CA,IAAAA,CAAC,CAACN,MAAF,GAAWC,eAAX;AACA,GAFD;AAIA,CA7DA,EA6DCZ,KA7DD,CAAD","sourcesContent":["(function (Prism) {\n\n\t// Pascaligo is a layer 2 smart contract language for the tezos blockchain\n\n\tvar braces = /\\((?:[^()]|\\((?:[^()]|\\([^()]*\\))*\\))*\\)/.source;\n\tvar type = /(?:\\b\\w+(?:<braces>)?|<braces>)/.source.replace(/<braces>/g, function () { return braces; });\n\n\tvar pascaligo = Prism.languages.pascaligo = {\n\t\t'comment': /\\(\\*[\\s\\S]+?\\*\\)|\\/\\/.*/,\n\t\t'string': {\n\t\t\tpattern: /([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|\\^[a-z]/i,\n\t\t\tgreedy: true\n\t\t},\n\t\t'class-name': [\n\t\t\t{\n\t\t\t\tpattern: RegExp(/(\\btype\\s+\\w+\\s+is\\s+)<type>/.source.replace(/<type>/g, function () { return type; }), 'i'),\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: null // see below\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: RegExp(/<type>(?=\\s+is\\b)/.source.replace(/<type>/g, function () { return type; }), 'i'),\n\t\t\t\tinside: null // see below\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: RegExp(/(:\\s*)<type>/.source.replace(/<type>/g, function () { return type; })),\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: null // see below\n\t\t\t}\n\t\t],\n\t\t'keyword': {\n\t\t\tpattern: /(^|[^&])\\b(?:begin|block|case|const|else|end|fail|for|from|function|if|is|nil|of|remove|return|skip|then|type|var|while|with)\\b/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'boolean': {\n\t\t\tpattern: /(^|[^&])\\b(?:True|False)\\b/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'builtin': {\n\t\t\tpattern: /(^|[^&])\\b(?:bool|int|list|map|nat|record|string|unit)\\b/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'function': /\\b\\w+(?=\\s*\\()/i,\n\t\t'number': [\n\t\t\t// Hexadecimal, octal and binary\n\t\t\t/%[01]+|&[0-7]+|\\$[a-f\\d]+/i,\n\t\t\t// Decimal\n\t\t\t/\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?(?:mtz|n)?/i\n\t\t],\n\t\t'operator': /->|=\\/=|\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=|]|\\b(?:and|mod|or)\\b/,\n\t\t'punctuation': /\\(\\.|\\.\\)|[()\\[\\]:;,.{}]/\n\t};\n\n\tvar classNameInside = ['comment', 'keyword', 'builtin', 'operator', 'punctuation'].reduce(function (accum, key) {\n\t\taccum[key] = pascaligo[key];\n\t\treturn accum;\n\t}, {});\n\n\tpascaligo['class-name'].forEach(function (p) {\n\t\tp.inside = classNameInside;\n\t});\n\n}(Prism));\n"]},"metadata":{},"sourceType":"script"}