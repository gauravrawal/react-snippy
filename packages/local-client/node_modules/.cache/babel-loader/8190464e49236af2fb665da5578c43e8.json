{"ast":null,"code":"(function (Prism) {\n  var jsString = /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|'(?:\\\\.|[^\\\\'\\r\\n])*'/.source;\n  var jsComment = /\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\//.source;\n  var jsExpr = /(?:[^\\\\()[\\]{}\"'/]|<string>|\\/(?![*/])|<comment>|\\(<expr>*\\)|\\[<expr>*\\]|\\{<expr>*\\}|\\\\[\\s\\S])/.source.replace(/<string>/g, function () {\n    return jsString;\n  }).replace(/<comment>/g, function () {\n    return jsComment;\n  }); // the pattern will blow up, so only a few iterations\n\n  for (var i = 0; i < 2; i++) {\n    jsExpr = jsExpr.replace(/<expr>/g, function () {\n      return jsExpr;\n    });\n  }\n\n  jsExpr = jsExpr.replace(/<expr>/g, '[^\\\\s\\\\S]');\n  Prism.languages.qml = {\n    'comment': {\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n      greedy: true\n    },\n    'javascript-function': {\n      pattern: RegExp(/((?:^|;)[ \\t]*)function\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*\\(<js>*\\)\\s*\\{<js>*\\}/.source.replace(/<js>/g, function () {\n        return jsExpr;\n      }), 'm'),\n      lookbehind: true,\n      greedy: true,\n      alias: 'language-javascript',\n      inside: Prism.languages.javascript\n    },\n    'class-name': {\n      pattern: /((?:^|[:;])[ \\t]*)(?!\\d)\\w+(?=[ \\t]*\\{|[ \\t]+on\\b)/m,\n      lookbehind: true\n    },\n    'property': [{\n      pattern: /((?:^|[;{])[ \\t]*)(?!\\d)\\w+(?:\\.\\w+)*(?=[ \\t]*:)/m,\n      lookbehind: true\n    }, {\n      pattern: /((?:^|[;{])[ \\t]*)property[ \\t]+(?!\\d)\\w+(?:\\.\\w+)*[ \\t]+(?!\\d)\\w+(?:\\.\\w+)*(?=[ \\t]*:)/m,\n      lookbehind: true,\n      inside: {\n        'keyword': /^property/,\n        'property': /\\w+(?:\\.\\w+)*/\n      }\n    }],\n    'javascript-expression': {\n      pattern: RegExp(/(:[ \\t]*)(?![\\s;}[])(?:(?!$|[;}])<js>)+/.source.replace(/<js>/g, function () {\n        return jsExpr;\n      }), 'm'),\n      lookbehind: true,\n      greedy: true,\n      alias: 'language-javascript',\n      inside: Prism.languages.javascript\n    },\n    'string': /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n    'keyword': /\\b(?:as|import|on)\\b/,\n    'punctuation': /[{}[\\]:;,]/\n  };\n})(Prism);","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/github/react-snippy/node_modules/prismjs/components/prism-qml.js"],"names":["Prism","jsString","source","jsComment","jsExpr","replace","i","languages","qml","pattern","greedy","RegExp","lookbehind","alias","inside","javascript"],"mappings":"AAAC,WAAUA,KAAV,EAAiB;AAEjB,MAAIC,QAAQ,GAAG,8CAA8CC,MAA7D;AACA,MAAIC,SAAS,GAAG,yCAAyCD,MAAzD;AAEA,MAAIE,MAAM,GAAG,iGACXF,MADW,CACJG,OADI,CACI,WADJ,EACiB,YAAY;AAAE,WAAOJ,QAAP;AAAkB,GADjD,EACmDI,OADnD,CAC2D,YAD3D,EACyE,YAAY;AAAE,WAAOF,SAAP;AAAmB,GAD1G,CAAb,CALiB,CAQjB;;AACA,OAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC3BF,IAAAA,MAAM,GAAGA,MAAM,CAACC,OAAP,CAAe,SAAf,EAA0B,YAAY;AAAE,aAAOD,MAAP;AAAgB,KAAxD,CAAT;AACA;;AACDA,EAAAA,MAAM,GAAGA,MAAM,CAACC,OAAP,CAAe,SAAf,EAA0B,WAA1B,CAAT;AAGAL,EAAAA,KAAK,CAACO,SAAN,CAAgBC,GAAhB,GAAsB;AACrB,eAAW;AACVC,MAAAA,OAAO,EAAE,yBADC;AAEVC,MAAAA,MAAM,EAAE;AAFE,KADU;AAKrB,2BAAuB;AACtBD,MAAAA,OAAO,EAAEE,MAAM,CAAC,2GAA2GT,MAA3G,CAAkHG,OAAlH,CAA0H,OAA1H,EAAmI,YAAY;AAAE,eAAOD,MAAP;AAAgB,OAAjK,CAAD,EAAqK,GAArK,CADO;AAEtBQ,MAAAA,UAAU,EAAE,IAFU;AAGtBF,MAAAA,MAAM,EAAE,IAHc;AAItBG,MAAAA,KAAK,EAAE,qBAJe;AAKtBC,MAAAA,MAAM,EAAEd,KAAK,CAACO,SAAN,CAAgBQ;AALF,KALF;AAYrB,kBAAc;AACbN,MAAAA,OAAO,EAAE,qDADI;AAEbG,MAAAA,UAAU,EAAE;AAFC,KAZO;AAgBrB,gBAAY,CACX;AACCH,MAAAA,OAAO,EAAE,mDADV;AAECG,MAAAA,UAAU,EAAE;AAFb,KADW,EAKX;AACCH,MAAAA,OAAO,EAAE,0FADV;AAECG,MAAAA,UAAU,EAAE,IAFb;AAGCE,MAAAA,MAAM,EAAE;AACP,mBAAW,WADJ;AAEP,oBAAY;AAFL;AAHT,KALW,CAhBS;AA8BrB,6BAAyB;AACxBL,MAAAA,OAAO,EAAEE,MAAM,CAAC,0CAA0CT,MAA1C,CAAiDG,OAAjD,CAAyD,OAAzD,EAAkE,YAAY;AAAE,eAAOD,MAAP;AAAgB,OAAhG,CAAD,EAAoG,GAApG,CADS;AAExBQ,MAAAA,UAAU,EAAE,IAFY;AAGxBF,MAAAA,MAAM,EAAE,IAHgB;AAIxBG,MAAAA,KAAK,EAAE,qBAJiB;AAKxBC,MAAAA,MAAM,EAAEd,KAAK,CAACO,SAAN,CAAgBQ;AALA,KA9BJ;AAqCrB,cAAU,uBArCW;AAsCrB,eAAW,sBAtCU;AAuCrB,mBAAe;AAvCM,GAAtB;AA0CA,CAzDA,EAyDCf,KAzDD,CAAD","sourcesContent":["(function (Prism) {\n\n\tvar jsString = /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|'(?:\\\\.|[^\\\\'\\r\\n])*'/.source;\n\tvar jsComment = /\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\//.source;\n\n\tvar jsExpr = /(?:[^\\\\()[\\]{}\"'/]|<string>|\\/(?![*/])|<comment>|\\(<expr>*\\)|\\[<expr>*\\]|\\{<expr>*\\}|\\\\[\\s\\S])/\n\t\t.source.replace(/<string>/g, function () { return jsString; }).replace(/<comment>/g, function () { return jsComment; });\n\n\t// the pattern will blow up, so only a few iterations\n\tfor (var i = 0; i < 2; i++) {\n\t\tjsExpr = jsExpr.replace(/<expr>/g, function () { return jsExpr; });\n\t}\n\tjsExpr = jsExpr.replace(/<expr>/g, '[^\\\\s\\\\S]');\n\n\n\tPrism.languages.qml = {\n\t\t'comment': {\n\t\t\tpattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n\t\t\tgreedy: true\n\t\t},\n\t\t'javascript-function': {\n\t\t\tpattern: RegExp(/((?:^|;)[ \\t]*)function\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*\\(<js>*\\)\\s*\\{<js>*\\}/.source.replace(/<js>/g, function () { return jsExpr; }), 'm'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\talias: 'language-javascript',\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t'class-name': {\n\t\t\tpattern: /((?:^|[:;])[ \\t]*)(?!\\d)\\w+(?=[ \\t]*\\{|[ \\t]+on\\b)/m,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'property': [\n\t\t\t{\n\t\t\t\tpattern: /((?:^|[;{])[ \\t]*)(?!\\d)\\w+(?:\\.\\w+)*(?=[ \\t]*:)/m,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /((?:^|[;{])[ \\t]*)property[ \\t]+(?!\\d)\\w+(?:\\.\\w+)*[ \\t]+(?!\\d)\\w+(?:\\.\\w+)*(?=[ \\t]*:)/m,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'keyword': /^property/,\n\t\t\t\t\t'property': /\\w+(?:\\.\\w+)*/\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t'javascript-expression': {\n\t\t\tpattern: RegExp(/(:[ \\t]*)(?![\\s;}[])(?:(?!$|[;}])<js>)+/.source.replace(/<js>/g, function () { return jsExpr; }), 'm'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\talias: 'language-javascript',\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t'string': /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n\t\t'keyword': /\\b(?:as|import|on)\\b/,\n\t\t'punctuation': /[{}[\\]:;,]/\n\t};\n\n}(Prism));\n"]},"metadata":{},"sourceType":"script"}