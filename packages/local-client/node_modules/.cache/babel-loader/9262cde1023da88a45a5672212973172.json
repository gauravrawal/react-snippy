{"ast":null,"code":"(function (Prism) {\n  var key = /(?:[\\w-]+|'[^'\\n\\r]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")/.source;\n  /**\n   * @param {string} pattern\n   */\n\n  function insertKey(pattern) {\n    return pattern.replace(/__/g, function () {\n      return key;\n    });\n  }\n\n  Prism.languages.toml = {\n    'comment': {\n      pattern: /#.*/,\n      greedy: true\n    },\n    'table': {\n      pattern: RegExp(insertKey(/(^[\\t ]*\\[\\s*(?:\\[\\s*)?)__(?:\\s*\\.\\s*__)*(?=\\s*\\])/.source), 'm'),\n      lookbehind: true,\n      greedy: true,\n      alias: 'class-name'\n    },\n    'key': {\n      pattern: RegExp(insertKey(/(^[\\t ]*|[{,]\\s*)__(?:\\s*\\.\\s*__)*(?=\\s*=)/.source), 'm'),\n      lookbehind: true,\n      greedy: true,\n      alias: 'property'\n    },\n    'string': {\n      pattern: /\"\"\"(?:\\\\[\\s\\S]|[^\\\\])*?\"\"\"|'''[\\s\\S]*?'''|'[^'\\n\\r]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n      greedy: true\n    },\n    'date': [{\n      // Offset Date-Time, Local Date-Time, Local Date\n      pattern: /\\b\\d{4}-\\d{2}-\\d{2}(?:[T\\s]\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|[+-]\\d{2}:\\d{2})?)?\\b/i,\n      alias: 'number'\n    }, {\n      // Local Time\n      pattern: /\\b\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?\\b/,\n      alias: 'number'\n    }],\n    'number': /(?:\\b0(?:x[\\da-zA-Z]+(?:_[\\da-zA-Z]+)*|o[0-7]+(?:_[0-7]+)*|b[10]+(?:_[10]+)*))\\b|[-+]?\\b\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?\\b|[-+]?\\b(?:inf|nan)\\b/,\n    'boolean': /\\b(?:true|false)\\b/,\n    'punctuation': /[.,=[\\]{}]/\n  };\n})(Prism);","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/jbook/node_modules/prismjs/components/prism-toml.js"],"names":["Prism","key","source","insertKey","pattern","replace","languages","toml","greedy","RegExp","lookbehind","alias"],"mappings":"AAAC,WAAUA,KAAV,EAAiB;AAEjB,MAAIC,GAAG,GAAG,+CAA+CC,MAAzD;AAEA;AACD;AACA;;AACC,WAASC,SAAT,CAAmBC,OAAnB,EAA4B;AAC3B,WAAOA,OAAO,CAACC,OAAR,CAAgB,KAAhB,EAAuB,YAAY;AAAE,aAAOJ,GAAP;AAAa,KAAlD,CAAP;AACA;;AAEDD,EAAAA,KAAK,CAACM,SAAN,CAAgBC,IAAhB,GAAuB;AACtB,eAAW;AACVH,MAAAA,OAAO,EAAE,KADC;AAEVI,MAAAA,MAAM,EAAE;AAFE,KADW;AAKtB,aAAS;AACRJ,MAAAA,OAAO,EAAEK,MAAM,CAACN,SAAS,CAAC,qDAAqDD,MAAtD,CAAV,EAAyE,GAAzE,CADP;AAERQ,MAAAA,UAAU,EAAE,IAFJ;AAGRF,MAAAA,MAAM,EAAE,IAHA;AAIRG,MAAAA,KAAK,EAAE;AAJC,KALa;AAWtB,WAAO;AACNP,MAAAA,OAAO,EAAEK,MAAM,CAACN,SAAS,CAAC,6CAA6CD,MAA9C,CAAV,EAAiE,GAAjE,CADT;AAENQ,MAAAA,UAAU,EAAE,IAFN;AAGNF,MAAAA,MAAM,EAAE,IAHF;AAING,MAAAA,KAAK,EAAE;AAJD,KAXe;AAiBtB,cAAU;AACTP,MAAAA,OAAO,EAAE,6EADA;AAETI,MAAAA,MAAM,EAAE;AAFC,KAjBY;AAqBtB,YAAQ,CACP;AACC;AACAJ,MAAAA,OAAO,EAAE,mFAFV;AAGCO,MAAAA,KAAK,EAAE;AAHR,KADO,EAMP;AACC;AACAP,MAAAA,OAAO,EAAE,iCAFV;AAGCO,MAAAA,KAAK,EAAE;AAHR,KANO,CArBc;AAiCtB,cAAU,0KAjCY;AAkCtB,eAAW,oBAlCW;AAmCtB,mBAAe;AAnCO,GAAvB;AAqCA,CAhDA,EAgDCX,KAhDD,CAAD","sourcesContent":["(function (Prism) {\n\n\tvar key = /(?:[\\w-]+|'[^'\\n\\r]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")/.source;\n\n\t/**\n\t * @param {string} pattern\n\t */\n\tfunction insertKey(pattern) {\n\t\treturn pattern.replace(/__/g, function () { return key; });\n\t}\n\n\tPrism.languages.toml = {\n\t\t'comment': {\n\t\t\tpattern: /#.*/,\n\t\t\tgreedy: true\n\t\t},\n\t\t'table': {\n\t\t\tpattern: RegExp(insertKey(/(^[\\t ]*\\[\\s*(?:\\[\\s*)?)__(?:\\s*\\.\\s*__)*(?=\\s*\\])/.source), 'm'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\talias: 'class-name'\n\t\t},\n\t\t'key': {\n\t\t\tpattern: RegExp(insertKey(/(^[\\t ]*|[{,]\\s*)__(?:\\s*\\.\\s*__)*(?=\\s*=)/.source), 'm'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\talias: 'property'\n\t\t},\n\t\t'string': {\n\t\t\tpattern: /\"\"\"(?:\\\\[\\s\\S]|[^\\\\])*?\"\"\"|'''[\\s\\S]*?'''|'[^'\\n\\r]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n\t\t\tgreedy: true\n\t\t},\n\t\t'date': [\n\t\t\t{\n\t\t\t\t// Offset Date-Time, Local Date-Time, Local Date\n\t\t\t\tpattern: /\\b\\d{4}-\\d{2}-\\d{2}(?:[T\\s]\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|[+-]\\d{2}:\\d{2})?)?\\b/i,\n\t\t\t\talias: 'number'\n\t\t\t},\n\t\t\t{\n\t\t\t\t// Local Time\n\t\t\t\tpattern: /\\b\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?\\b/,\n\t\t\t\talias: 'number'\n\t\t\t}\n\t\t],\n\t\t'number': /(?:\\b0(?:x[\\da-zA-Z]+(?:_[\\da-zA-Z]+)*|o[0-7]+(?:_[0-7]+)*|b[10]+(?:_[10]+)*))\\b|[-+]?\\b\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?\\b|[-+]?\\b(?:inf|nan)\\b/,\n\t\t'boolean': /\\b(?:true|false)\\b/,\n\t\t'punctuation': /[.,=[\\]{}]/\n\t};\n}(Prism));\n"]},"metadata":{},"sourceType":"script"}