{"ast":null,"code":"/**\n * Original by Aaron Harun: http://aahacreative.com/2012/07/31/php-syntax-highlighting-prism/\n * Modified by Miles Johnson: http://milesj.me\n * Rewritten by Tom Pavelec\n *\n * Supports PHP 5.3 - 8.0\n */\n(function (Prism) {\n  var comment = /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*|#(?!\\[).*/;\n  var constant = [{\n    pattern: /\\b(?:false|true)\\b/i,\n    alias: 'boolean'\n  }, {\n    pattern: /(::\\s*)\\b[a-z_]\\w*\\b(?!\\s*\\()/i,\n    greedy: true,\n    lookbehind: true\n  }, {\n    pattern: /(\\b(?:case|const)\\s+)\\b[a-z_]\\w*(?=\\s*[;=])/i,\n    greedy: true,\n    lookbehind: true\n  }, /\\b(?:null)\\b/i, /\\b[A-Z_][A-Z0-9_]*\\b(?!\\s*\\()/];\n  var number = /\\b0b[01]+(?:_[01]+)*\\b|\\b0o[0-7]+(?:_[0-7]+)*\\b|\\b0x[\\da-f]+(?:_[\\da-f]+)*\\b|(?:\\b\\d+(?:_\\d+)*\\.?(?:\\d+(?:_\\d+)*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i;\n  var operator = /<?=>|\\?\\?=?|\\.{3}|\\??->|[!=]=?=?|::|\\*\\*=?|--|\\+\\+|&&|\\|\\||<<|>>|[?~]|[/^|%*&<>.+-]=?/;\n  var punctuation = /[{}\\[\\](),:;]/;\n  Prism.languages.php = {\n    'delimiter': {\n      pattern: /\\?>$|^<\\?(?:php(?=\\s)|=)?/i,\n      alias: 'important'\n    },\n    'comment': comment,\n    'variable': /\\$+(?:\\w+\\b|(?=\\{))/i,\n    'package': {\n      pattern: /(namespace\\s+|use\\s+(?:function\\s+)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    },\n    'class-name-definition': {\n      pattern: /(\\b(?:class|enum|interface|trait)\\s+)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n      lookbehind: true,\n      alias: 'class-name'\n    },\n    'function-definition': {\n      pattern: /(\\bfunction\\s+)[a-z_]\\w*(?=\\s*\\()/i,\n      lookbehind: true,\n      alias: 'function'\n    },\n    'keyword': [{\n      pattern: /(\\(\\s*)\\b(?:bool|boolean|int|integer|float|string|object|array)\\b(?=\\s*\\))/i,\n      alias: 'type-casting',\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /([(,?]\\s*)\\b(?:bool|int|float|string|object|array(?!\\s*\\()|mixed|self|static|callable|iterable|(?:null|false)(?=\\s*\\|))\\b(?=\\s*\\$)/i,\n      alias: 'type-hint',\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /([(,?]\\s*[\\w|]\\|\\s*)(?:null|false)\\b(?=\\s*\\$)/i,\n      alias: 'type-hint',\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)\\b(?:bool|int|float|string|object|void|array(?!\\s*\\()|mixed|self|static|callable|iterable|(?:null|false)(?=\\s*\\|))\\b/i,\n      alias: 'return-type',\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?[\\w|]\\|\\s*)(?:null|false)\\b/i,\n      alias: 'return-type',\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /\\b(?:bool|int|float|string|object|void|array(?!\\s*\\()|mixed|iterable|(?:null|false)(?=\\s*\\|))\\b/i,\n      alias: 'type-declaration',\n      greedy: true\n    }, {\n      pattern: /(\\|\\s*)(?:null|false)\\b/i,\n      alias: 'type-declaration',\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /\\b(?:parent|self|static)(?=\\s*::)/i,\n      alias: 'static-context',\n      greedy: true\n    }, {\n      // yield from\n      pattern: /(\\byield\\s+)from\\b/i,\n      lookbehind: true\n    }, // `class` is always a keyword unlike other keywords\n    /\\bclass\\b/i, {\n      // https://www.php.net/manual/en/reserved.keywords.php\n      //\n      // keywords cannot be preceded by \"->\"\n      // the complex lookbehind means `(?<!(?:->|::)\\s*)`\n      pattern: /((?:^|[^\\s>:]|(?:^|[^-])>|(?:^|[^:]):)\\s*)\\b(?:__halt_compiler|abstract|and|array|as|break|callable|case|catch|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|enum|eval|exit|extends|final|finally|fn|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|namespace|match|new|or|parent|print|private|protected|public|require|require_once|return|self|static|switch|throw|trait|try|unset|use|var|while|xor|yield)\\b/i,\n      lookbehind: true\n    }],\n    'argument-name': {\n      pattern: /([(,]\\s+)\\b[a-z_]\\w*(?=\\s*:(?!:))/i,\n      lookbehind: true\n    },\n    'class-name': [{\n      pattern: /(\\b(?:extends|implements|instanceof|new(?!\\s+self|\\s+static))\\s+|\\bcatch\\s*\\()\\b[a-z_]\\w*(?!\\\\)\\b/i,\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /(\\|\\s*)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /\\b[a-z_]\\w*(?!\\\\)\\b(?=\\s*\\|)/i,\n      greedy: true\n    }, {\n      pattern: /(\\|\\s*)(?:\\\\?\\b[a-z_]\\w*)+\\b/i,\n      alias: 'class-name-fully-qualified',\n      greedy: true,\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    }, {\n      pattern: /(?:\\\\?\\b[a-z_]\\w*)+\\b(?=\\s*\\|)/i,\n      alias: 'class-name-fully-qualified',\n      greedy: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    }, {\n      pattern: /(\\b(?:extends|implements|instanceof|new(?!\\s+self\\b|\\s+static\\b))\\s+|\\bcatch\\s*\\()(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n      alias: 'class-name-fully-qualified',\n      greedy: true,\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    }, {\n      pattern: /\\b[a-z_]\\w*(?=\\s*\\$)/i,\n      alias: 'type-declaration',\n      greedy: true\n    }, {\n      pattern: /(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,\n      alias: ['class-name-fully-qualified', 'type-declaration'],\n      greedy: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    }, {\n      pattern: /\\b[a-z_]\\w*(?=\\s*::)/i,\n      alias: 'static-context',\n      greedy: true\n    }, {\n      pattern: /(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*::)/i,\n      alias: ['class-name-fully-qualified', 'static-context'],\n      greedy: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    }, {\n      pattern: /([(,?]\\s*)[a-z_]\\w*(?=\\s*\\$)/i,\n      alias: 'type-hint',\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /([(,?]\\s*)(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,\n      alias: ['class-name-fully-qualified', 'type-hint'],\n      greedy: true,\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    }, {\n      pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n      alias: 'return-type',\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n      alias: ['class-name-fully-qualified', 'return-type'],\n      greedy: true,\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    }],\n    'constant': constant,\n    'function': {\n      pattern: /(^|[^\\\\\\w])\\\\?[a-z_](?:[\\w\\\\]*\\w)?(?=\\s*\\()/i,\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    },\n    'property': {\n      pattern: /(->\\s*)\\w+/,\n      lookbehind: true\n    },\n    'number': number,\n    'operator': operator,\n    'punctuation': punctuation\n  };\n  var string_interpolation = {\n    pattern: /\\{\\$(?:\\{(?:\\{[^{}]+\\}|[^{}]+)\\}|[^{}])+\\}|(^|[^\\\\{])\\$+(?:\\w+(?:\\[[^\\r\\n\\[\\]]+\\]|->\\w+)?)/,\n    lookbehind: true,\n    inside: Prism.languages.php\n  };\n  var string = [{\n    pattern: /<<<'([^']+)'[\\r\\n](?:.*[\\r\\n])*?\\1;/,\n    alias: 'nowdoc-string',\n    greedy: true,\n    inside: {\n      'delimiter': {\n        pattern: /^<<<'[^']+'|[a-z_]\\w*;$/i,\n        alias: 'symbol',\n        inside: {\n          'punctuation': /^<<<'?|[';]$/\n        }\n      }\n    }\n  }, {\n    pattern: /<<<(?:\"([^\"]+)\"[\\r\\n](?:.*[\\r\\n])*?\\1;|([a-z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?\\2;)/i,\n    alias: 'heredoc-string',\n    greedy: true,\n    inside: {\n      'delimiter': {\n        pattern: /^<<<(?:\"[^\"]+\"|[a-z_]\\w*)|[a-z_]\\w*;$/i,\n        alias: 'symbol',\n        inside: {\n          'punctuation': /^<<<\"?|[\";]$/\n        }\n      },\n      'interpolation': string_interpolation\n    }\n  }, {\n    pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n    alias: 'backtick-quoted-string',\n    greedy: true\n  }, {\n    pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n    alias: 'single-quoted-string',\n    greedy: true\n  }, {\n    pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n    alias: 'double-quoted-string',\n    greedy: true,\n    inside: {\n      'interpolation': string_interpolation\n    }\n  }];\n  Prism.languages.insertBefore('php', 'variable', {\n    'string': string,\n    'attribute': {\n      pattern: /#\\[(?:[^\"'\\/#]|\\/(?![*/])|\\/\\/.*$|#(?!\\[).*$|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*')+\\](?=\\s*[a-z$#])/im,\n      greedy: true,\n      inside: {\n        'attribute-content': {\n          pattern: /^(#\\[)[\\s\\S]+(?=\\]$)/,\n          lookbehind: true,\n          // inside can appear subset of php\n          inside: {\n            'comment': comment,\n            'string': string,\n            'attribute-class-name': [{\n              pattern: /([^:]|^)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n              alias: 'class-name',\n              greedy: true,\n              lookbehind: true\n            }, {\n              pattern: /([^:]|^)(?:\\\\?\\b[a-z_]\\w*)+/i,\n              alias: ['class-name', 'class-name-fully-qualified'],\n              greedy: true,\n              lookbehind: true,\n              inside: {\n                'punctuation': /\\\\/\n              }\n            }],\n            'constant': constant,\n            'number': number,\n            'operator': operator,\n            'punctuation': punctuation\n          }\n        },\n        'delimiter': {\n          pattern: /^#\\[|\\]$/,\n          alias: 'punctuation'\n        }\n      }\n    }\n  });\n  Prism.hooks.add('before-tokenize', function (env) {\n    if (!/<\\?/.test(env.code)) {\n      return;\n    }\n\n    var phpPattern = /<\\?(?:[^\"'/#]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|(?:\\/\\/|#(?!\\[))(?:[^?\\n\\r]|\\?(?!>))*(?=$|\\?>|[\\r\\n])|#\\[|\\/\\*(?:[^*]|\\*(?!\\/))*(?:\\*\\/|$))*?(?:\\?>|$)/gi;\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'php', phpPattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'php');\n  });\n})(Prism);","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/jbook/node_modules/prismjs/components/prism-php.js"],"names":["Prism","comment","constant","pattern","alias","greedy","lookbehind","number","operator","punctuation","languages","php","inside","string_interpolation","string","insertBefore","hooks","add","env","test","code","phpPattern","buildPlaceholders","tokenizePlaceholders"],"mappings":"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","sourcesContent":["/**\n * Original by Aaron Harun: http://aahacreative.com/2012/07/31/php-syntax-highlighting-prism/\n * Modified by Miles Johnson: http://milesj.me\n * Rewritten by Tom Pavelec\n *\n * Supports PHP 5.3 - 8.0\n */\n(function (Prism) {\n\tvar comment = /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*|#(?!\\[).*/;\n\tvar constant = [\n\t\t{\n\t\t\tpattern: /\\b(?:false|true)\\b/i,\n\t\t\talias: 'boolean'\n\t\t},\n\t\t{\n\t\t\tpattern: /(::\\s*)\\b[a-z_]\\w*\\b(?!\\s*\\()/i,\n\t\t\tgreedy: true,\n\t\t\tlookbehind: true,\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\b(?:case|const)\\s+)\\b[a-z_]\\w*(?=\\s*[;=])/i,\n\t\t\tgreedy: true,\n\t\t\tlookbehind: true,\n\t\t},\n\t\t/\\b(?:null)\\b/i,\n\t\t/\\b[A-Z_][A-Z0-9_]*\\b(?!\\s*\\()/,\n\t];\n\tvar number = /\\b0b[01]+(?:_[01]+)*\\b|\\b0o[0-7]+(?:_[0-7]+)*\\b|\\b0x[\\da-f]+(?:_[\\da-f]+)*\\b|(?:\\b\\d+(?:_\\d+)*\\.?(?:\\d+(?:_\\d+)*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i;\n\tvar operator = /<?=>|\\?\\?=?|\\.{3}|\\??->|[!=]=?=?|::|\\*\\*=?|--|\\+\\+|&&|\\|\\||<<|>>|[?~]|[/^|%*&<>.+-]=?/;\n\tvar punctuation = /[{}\\[\\](),:;]/;\n\n\tPrism.languages.php = {\n\t\t'delimiter': {\n\t\t\tpattern: /\\?>$|^<\\?(?:php(?=\\s)|=)?/i,\n\t\t\talias: 'important'\n\t\t},\n\t\t'comment': comment,\n\t\t'variable': /\\$+(?:\\w+\\b|(?=\\{))/i,\n\t\t'package': {\n\t\t\tpattern: /(namespace\\s+|use\\s+(?:function\\s+)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /\\\\/\n\t\t\t}\n\t\t},\n\t\t'class-name-definition': {\n\t\t\tpattern: /(\\b(?:class|enum|interface|trait)\\s+)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n\t\t\tlookbehind: true,\n\t\t\talias: 'class-name'\n\t\t},\n\t\t'function-definition': {\n\t\t\tpattern: /(\\bfunction\\s+)[a-z_]\\w*(?=\\s*\\()/i,\n\t\t\tlookbehind: true,\n\t\t\talias: 'function'\n\t\t},\n\t\t'keyword': [\n\t\t\t{\n\t\t\t\tpattern: /(\\(\\s*)\\b(?:bool|boolean|int|integer|float|string|object|array)\\b(?=\\s*\\))/i,\n\t\t\t\talias: 'type-casting',\n\t\t\t\tgreedy: true,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /([(,?]\\s*)\\b(?:bool|int|float|string|object|array(?!\\s*\\()|mixed|self|static|callable|iterable|(?:null|false)(?=\\s*\\|))\\b(?=\\s*\\$)/i,\n\t\t\t\talias: 'type-hint',\n\t\t\t\tgreedy: true,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /([(,?]\\s*[\\w|]\\|\\s*)(?:null|false)\\b(?=\\s*\\$)/i,\n\t\t\t\talias: 'type-hint',\n\t\t\t\tgreedy: true,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)\\b(?:bool|int|float|string|object|void|array(?!\\s*\\()|mixed|self|static|callable|iterable|(?:null|false)(?=\\s*\\|))\\b/i,\n\t\t\t\talias: 'return-type',\n\t\t\t\tgreedy: true,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(\\)\\s*:\\s*(?:\\?\\s*)?[\\w|]\\|\\s*)(?:null|false)\\b/i,\n\t\t\t\talias: 'return-type',\n\t\t\t\tgreedy: true,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /\\b(?:bool|int|float|string|object|void|array(?!\\s*\\()|mixed|iterable|(?:null|false)(?=\\s*\\|))\\b/i,\n\t\t\t\talias: 'type-declaration',\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(\\|\\s*)(?:null|false)\\b/i,\n\t\t\t\talias: 'type-declaration',\n\t\t\t\tgreedy: true,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /\\b(?:parent|self|static)(?=\\s*::)/i,\n\t\t\t\talias: 'static-context',\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t{\n\t\t\t\t// yield from\n\t\t\t\tpattern: /(\\byield\\s+)from\\b/i,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t// `class` is always a keyword unlike other keywords\n\t\t\t/\\bclass\\b/i,\n\t\t\t{\n\t\t\t\t// https://www.php.net/manual/en/reserved.keywords.php\n\t\t\t\t//\n\t\t\t\t// keywords cannot be preceded by \"->\"\n\t\t\t\t// the complex lookbehind means `(?<!(?:->|::)\\s*)`\n\t\t\t\tpattern: /((?:^|[^\\s>:]|(?:^|[^-])>|(?:^|[^:]):)\\s*)\\b(?:__halt_compiler|abstract|and|array|as|break|callable|case|catch|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|enum|eval|exit|extends|final|finally|fn|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|namespace|match|new|or|parent|print|private|protected|public|require|require_once|return|self|static|switch|throw|trait|try|unset|use|var|while|xor|yield)\\b/i,\n\t\t\t\tlookbehind: true\n\t\t\t}\n\t\t],\n\t\t'argument-name': {\n\t\t\tpattern: /([(,]\\s+)\\b[a-z_]\\w*(?=\\s*:(?!:))/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'class-name': [\n\t\t\t{\n\t\t\t\tpattern: /(\\b(?:extends|implements|instanceof|new(?!\\s+self|\\s+static))\\s+|\\bcatch\\s*\\()\\b[a-z_]\\w*(?!\\\\)\\b/i,\n\t\t\t\tgreedy: true,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(\\|\\s*)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n\t\t\t\tgreedy: true,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /\\b[a-z_]\\w*(?!\\\\)\\b(?=\\s*\\|)/i,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(\\|\\s*)(?:\\\\?\\b[a-z_]\\w*)+\\b/i,\n\t\t\t\talias: 'class-name-fully-qualified',\n\t\t\t\tgreedy: true,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /\\\\/\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(?:\\\\?\\b[a-z_]\\w*)+\\b(?=\\s*\\|)/i,\n\t\t\t\talias: 'class-name-fully-qualified',\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /\\\\/\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(\\b(?:extends|implements|instanceof|new(?!\\s+self\\b|\\s+static\\b))\\s+|\\bcatch\\s*\\()(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n\t\t\t\talias: 'class-name-fully-qualified',\n\t\t\t\tgreedy: true,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /\\\\/\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /\\b[a-z_]\\w*(?=\\s*\\$)/i,\n\t\t\t\talias: 'type-declaration',\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,\n\t\t\t\talias: ['class-name-fully-qualified', 'type-declaration'],\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /\\\\/\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /\\b[a-z_]\\w*(?=\\s*::)/i,\n\t\t\t\talias: 'static-context',\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*::)/i,\n\t\t\t\talias: ['class-name-fully-qualified', 'static-context'],\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /\\\\/\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /([(,?]\\s*)[a-z_]\\w*(?=\\s*\\$)/i,\n\t\t\t\talias: 'type-hint',\n\t\t\t\tgreedy: true,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /([(,?]\\s*)(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,\n\t\t\t\talias: ['class-name-fully-qualified', 'type-hint'],\n\t\t\t\tgreedy: true,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /\\\\/\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n\t\t\t\talias: 'return-type',\n\t\t\t\tgreedy: true,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n\t\t\t\talias: ['class-name-fully-qualified', 'return-type'],\n\t\t\t\tgreedy: true,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /\\\\/\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t'constant': constant,\n\t\t'function': {\n\t\t\tpattern: /(^|[^\\\\\\w])\\\\?[a-z_](?:[\\w\\\\]*\\w)?(?=\\s*\\()/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /\\\\/\n\t\t\t}\n\t\t},\n\t\t'property': {\n\t\t\tpattern: /(->\\s*)\\w+/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'number': number,\n\t\t'operator': operator,\n\t\t'punctuation': punctuation\n\t};\n\n\tvar string_interpolation = {\n\t\tpattern: /\\{\\$(?:\\{(?:\\{[^{}]+\\}|[^{}]+)\\}|[^{}])+\\}|(^|[^\\\\{])\\$+(?:\\w+(?:\\[[^\\r\\n\\[\\]]+\\]|->\\w+)?)/,\n\t\tlookbehind: true,\n\t\tinside: Prism.languages.php\n\t};\n\n\tvar string = [\n\t\t{\n\t\t\tpattern: /<<<'([^']+)'[\\r\\n](?:.*[\\r\\n])*?\\1;/,\n\t\t\talias: 'nowdoc-string',\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'delimiter': {\n\t\t\t\t\tpattern: /^<<<'[^']+'|[a-z_]\\w*;$/i,\n\t\t\t\t\talias: 'symbol',\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /^<<<'?|[';]$/\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tpattern: /<<<(?:\"([^\"]+)\"[\\r\\n](?:.*[\\r\\n])*?\\1;|([a-z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?\\2;)/i,\n\t\t\talias: 'heredoc-string',\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'delimiter': {\n\t\t\t\t\tpattern: /^<<<(?:\"[^\"]+\"|[a-z_]\\w*)|[a-z_]\\w*;$/i,\n\t\t\t\t\talias: 'symbol',\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /^<<<\"?|[\";]$/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'interpolation': string_interpolation\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tpattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n\t\t\talias: 'backtick-quoted-string',\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n\t\t\talias: 'single-quoted-string',\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n\t\t\talias: 'double-quoted-string',\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'interpolation': string_interpolation\n\t\t\t}\n\t\t}\n\t];\n\n\tPrism.languages.insertBefore('php', 'variable', {\n\t\t'string': string,\n\t\t'attribute': {\n\t\t\tpattern: /#\\[(?:[^\"'\\/#]|\\/(?![*/])|\\/\\/.*$|#(?!\\[).*$|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*')+\\](?=\\s*[a-z$#])/im,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'attribute-content': {\n\t\t\t\t\tpattern: /^(#\\[)[\\s\\S]+(?=\\]$)/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t// inside can appear subset of php\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'comment': comment,\n\t\t\t\t\t\t'string': string,\n\t\t\t\t\t\t'attribute-class-name': [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpattern: /([^:]|^)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n\t\t\t\t\t\t\t\talias: 'class-name',\n\t\t\t\t\t\t\t\tgreedy: true,\n\t\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpattern: /([^:]|^)(?:\\\\?\\b[a-z_]\\w*)+/i,\n\t\t\t\t\t\t\t\talias: [\n\t\t\t\t\t\t\t\t\t'class-name',\n\t\t\t\t\t\t\t\t\t'class-name-fully-qualified'\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tgreedy: true,\n\t\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t\t\t'punctuation': /\\\\/\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t'constant': constant,\n\t\t\t\t\t\t'number': number,\n\t\t\t\t\t\t'operator': operator,\n\t\t\t\t\t\t'punctuation': punctuation\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'delimiter': {\n\t\t\t\t\tpattern: /^#\\[|\\]$/,\n\t\t\t\t\talias: 'punctuation'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t});\n\n\tPrism.hooks.add('before-tokenize', function (env) {\n\t\tif (!/<\\?/.test(env.code)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar phpPattern = /<\\?(?:[^\"'/#]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|(?:\\/\\/|#(?!\\[))(?:[^?\\n\\r]|\\?(?!>))*(?=$|\\?>|[\\r\\n])|#\\[|\\/\\*(?:[^*]|\\*(?!\\/))*(?:\\*\\/|$))*?(?:\\?>|$)/gi;\n\t\tPrism.languages['markup-templating'].buildPlaceholders(env, 'php', phpPattern);\n\t});\n\n\tPrism.hooks.add('after-tokenize', function (env) {\n\t\tPrism.languages['markup-templating'].tokenizePlaceholders(env, 'php');\n\t});\n\n}(Prism));\n"]},"metadata":{},"sourceType":"script"}