{"ast":null,"code":"Prism.languages.liquid = {\n  comment: {\n    pattern: /(^\\{%\\s*comment\\s*%\\})[\\s\\S]+(?=\\{%\\s*endcomment\\s*%\\}$)/,\n    lookbehind: !0\n  },\n  delimiter: {\n    pattern: /^\\{(?:\\{\\{|[%\\{])-?|-?(?:\\}\\}|[%\\}])\\}$/,\n    alias: \"punctuation\"\n  },\n  string: {\n    pattern: /\"[^\"]*\"|'[^']*'/,\n    greedy: !0\n  },\n  keyword: /\\b(?:as|assign|break|continue|cycle|decrement|echo|else|elsif|(?:end)?(?:capture|case|comment|for|form|if|paginate|style|raw|tablerow|unless)|in|include|increment|limit|liquid|offset|range|render|reversed|section|when|with)\\b/,\n  function: [{\n    pattern: /(\\|\\s*)\\w+/,\n    lookbehind: !0,\n    alias: \"filter\"\n  }, {\n    pattern: /(\\.\\s*)(?:first|last|size)/,\n    lookbehind: !0\n  }],\n  boolean: /\\b(?:true|false|nil)\\b/,\n  range: {\n    pattern: /\\.\\./,\n    alias: \"operator\"\n  },\n  number: /\\b\\d+(?:\\.\\d+)?\\b/,\n  operator: /[!=]=|<>|[<>]=?|[|?:=-]|\\b(?:and|or|contains(?=\\s))\\b/,\n  punctuation: /[.,\\[\\]()]/\n}, Prism.hooks.add(\"before-tokenize\", function (e) {\n  var r = !1;\n  Prism.languages[\"markup-templating\"].buildPlaceholders(e, \"liquid\", /\\{%\\s*comment\\s*%\\}[\\s\\S]*?\\{%\\s*endcomment\\s*%\\}|\\{(?:%[\\s\\S]*?%|\\{\\{[\\s\\S]*?\\}\\}|\\{[\\s\\S]*?\\})\\}/g, function (e) {\n    var n = /^\\{%-?\\s*(\\w+)/.exec(e);\n\n    if (n) {\n      var t = n[1];\n      if (\"raw\" === t && !r) return r = !0;\n      if (\"endraw\" === t) return !(r = !1);\n    }\n\n    return !r;\n  });\n}), Prism.hooks.add(\"after-tokenize\", function (e) {\n  Prism.languages[\"markup-templating\"].tokenizePlaceholders(e, \"liquid\");\n});","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/github/react-snippy/node_modules/prismjs/components/prism-liquid.min.js"],"names":["Prism","languages","liquid","comment","pattern","lookbehind","delimiter","alias","string","greedy","keyword","function","boolean","range","number","operator","punctuation","hooks","add","e","r","buildPlaceholders","n","exec","t","tokenizePlaceholders"],"mappings":"AAAAA,KAAK,CAACC,SAAN,CAAgBC,MAAhB,GAAuB;AAACC,EAAAA,OAAO,EAAC;AAACC,IAAAA,OAAO,EAAC,0DAAT;AAAoEC,IAAAA,UAAU,EAAC,CAAC;AAAhF,GAAT;AAA4FC,EAAAA,SAAS,EAAC;AAACF,IAAAA,OAAO,EAAC,yCAAT;AAAmDG,IAAAA,KAAK,EAAC;AAAzD,GAAtG;AAA8KC,EAAAA,MAAM,EAAC;AAACJ,IAAAA,OAAO,EAAC,iBAAT;AAA2BK,IAAAA,MAAM,EAAC,CAAC;AAAnC,GAArL;AAA2NC,EAAAA,OAAO,EAAC,mOAAnO;AAAucC,EAAAA,QAAQ,EAAC,CAAC;AAACP,IAAAA,OAAO,EAAC,YAAT;AAAsBC,IAAAA,UAAU,EAAC,CAAC,CAAlC;AAAoCE,IAAAA,KAAK,EAAC;AAA1C,GAAD,EAAqD;AAACH,IAAAA,OAAO,EAAC,4BAAT;AAAsCC,IAAAA,UAAU,EAAC,CAAC;AAAlD,GAArD,CAAhd;AAA2jBO,EAAAA,OAAO,EAAC,wBAAnkB;AAA4lBC,EAAAA,KAAK,EAAC;AAACT,IAAAA,OAAO,EAAC,MAAT;AAAgBG,IAAAA,KAAK,EAAC;AAAtB,GAAlmB;AAAooBO,EAAAA,MAAM,EAAC,mBAA3oB;AAA+pBC,EAAAA,QAAQ,EAAC,uDAAxqB;AAAguBC,EAAAA,WAAW,EAAC;AAA5uB,CAAvB,EAAixBhB,KAAK,CAACiB,KAAN,CAAYC,GAAZ,CAAgB,iBAAhB,EAAkC,UAASC,CAAT,EAAW;AAAC,MAAIC,CAAC,GAAC,CAAC,CAAP;AAASpB,EAAAA,KAAK,CAACC,SAAN,CAAgB,mBAAhB,EAAqCoB,iBAArC,CAAuDF,CAAvD,EAAyD,QAAzD,EAAkE,qGAAlE,EAAwK,UAASA,CAAT,EAAW;AAAC,QAAIG,CAAC,GAAC,iBAAiBC,IAAjB,CAAsBJ,CAAtB,CAAN;;AAA+B,QAAGG,CAAH,EAAK;AAAC,UAAIE,CAAC,GAACF,CAAC,CAAC,CAAD,CAAP;AAAW,UAAG,UAAQE,CAAR,IAAW,CAACJ,CAAf,EAAiB,OAAOA,CAAC,GAAC,CAAC,CAAV;AAAY,UAAG,aAAWI,CAAd,EAAgB,OAAM,EAAEJ,CAAC,GAAC,CAAC,CAAL,CAAN;AAAc;;AAAA,WAAM,CAACA,CAAP;AAAS,GAAxS;AAA0S,CAAjW,CAAjxB,EAAonCpB,KAAK,CAACiB,KAAN,CAAYC,GAAZ,CAAgB,gBAAhB,EAAiC,UAASC,CAAT,EAAW;AAACnB,EAAAA,KAAK,CAACC,SAAN,CAAgB,mBAAhB,EAAqCwB,oBAArC,CAA0DN,CAA1D,EAA4D,QAA5D;AAAsE,CAAnH,CAApnC","sourcesContent":["Prism.languages.liquid={comment:{pattern:/(^\\{%\\s*comment\\s*%\\})[\\s\\S]+(?=\\{%\\s*endcomment\\s*%\\}$)/,lookbehind:!0},delimiter:{pattern:/^\\{(?:\\{\\{|[%\\{])-?|-?(?:\\}\\}|[%\\}])\\}$/,alias:\"punctuation\"},string:{pattern:/\"[^\"]*\"|'[^']*'/,greedy:!0},keyword:/\\b(?:as|assign|break|continue|cycle|decrement|echo|else|elsif|(?:end)?(?:capture|case|comment|for|form|if|paginate|style|raw|tablerow|unless)|in|include|increment|limit|liquid|offset|range|render|reversed|section|when|with)\\b/,function:[{pattern:/(\\|\\s*)\\w+/,lookbehind:!0,alias:\"filter\"},{pattern:/(\\.\\s*)(?:first|last|size)/,lookbehind:!0}],boolean:/\\b(?:true|false|nil)\\b/,range:{pattern:/\\.\\./,alias:\"operator\"},number:/\\b\\d+(?:\\.\\d+)?\\b/,operator:/[!=]=|<>|[<>]=?|[|?:=-]|\\b(?:and|or|contains(?=\\s))\\b/,punctuation:/[.,\\[\\]()]/},Prism.hooks.add(\"before-tokenize\",function(e){var r=!1;Prism.languages[\"markup-templating\"].buildPlaceholders(e,\"liquid\",/\\{%\\s*comment\\s*%\\}[\\s\\S]*?\\{%\\s*endcomment\\s*%\\}|\\{(?:%[\\s\\S]*?%|\\{\\{[\\s\\S]*?\\}\\}|\\{[\\s\\S]*?\\})\\}/g,function(e){var n=/^\\{%-?\\s*(\\w+)/.exec(e);if(n){var t=n[1];if(\"raw\"===t&&!r)return r=!0;if(\"endraw\"===t)return!(r=!1)}return!r})}),Prism.hooks.add(\"after-tokenize\",function(e){Prism.languages[\"markup-templating\"].tokenizePlaceholders(e,\"liquid\")});"]},"metadata":{},"sourceType":"script"}