{"ast":null,"code":"!function (e) {\n  var n = {\n    pattern: /(\\b\\d+)(?:%|[a-z]+)/,\n    lookbehind: !0\n  },\n      r = {\n    pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n    lookbehind: !0\n  },\n      t = {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: !0\n    },\n    url: {\n      pattern: /\\burl\\(([\"']?).*?\\1\\)/i,\n      greedy: !0\n    },\n    string: {\n      pattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n      greedy: !0\n    },\n    interpolation: null,\n    func: null,\n    important: /\\B!(?:important|optional)\\b/i,\n    keyword: {\n      pattern: /(^|\\s+)(?:(?:if|else|for|return|unless)(?=\\s|$)|@[\\w-]+)/,\n      lookbehind: !0\n    },\n    hexcode: /#[\\da-f]{3,6}/i,\n    color: [/\\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\\b/i, {\n      pattern: /\\b(?:rgb|hsl)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:rgb|hsl)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n      inside: {\n        unit: n,\n        number: r,\n        function: /[\\w-]+(?=\\()/,\n        punctuation: /[(),]/\n      }\n    }],\n    entity: /\\\\[\\da-f]{1,8}/i,\n    unit: n,\n    boolean: /\\b(?:true|false)\\b/,\n    operator: [/~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.{2,3}|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/],\n    number: r,\n    punctuation: /[{}()\\[\\];:,]/\n  };\n  t.interpolation = {\n    pattern: /\\{[^\\r\\n}:]+\\}/,\n    alias: \"variable\",\n    inside: {\n      delimiter: {\n        pattern: /^\\{|\\}$/,\n        alias: \"punctuation\"\n      },\n      rest: t\n    }\n  }, t.func = {\n    pattern: /[\\w-]+\\([^)]*\\).*/,\n    inside: {\n      function: /^[^(]+/,\n      rest: t\n    }\n  }, e.languages.stylus = {\n    \"atrule-declaration\": {\n      pattern: /(^[ \\t]*)@.+/m,\n      lookbehind: !0,\n      inside: {\n        atrule: /^@[\\w-]+/,\n        rest: t\n      }\n    },\n    \"variable-declaration\": {\n      pattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:\\{[^{}]*\\}|\\S.*|$)/m,\n      lookbehind: !0,\n      inside: {\n        variable: /^\\S+/,\n        rest: t\n      }\n    },\n    statement: {\n      pattern: /(^[ \\t]*)(?:if|else|for|return|unless)[ \\t].+/m,\n      lookbehind: !0,\n      inside: {\n        keyword: /^\\S+/,\n        rest: t\n      }\n    },\n    \"property-declaration\": {\n      pattern: /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)(?!\\s)[^{\\r\\n]*(?:;|[^{\\r\\n,]$(?!(?:\\r?\\n|\\r)(?:\\{|\\2[ \\t])))/m,\n      lookbehind: !0,\n      inside: {\n        property: {\n          pattern: /^[^\\s:]+/,\n          inside: {\n            interpolation: t.interpolation\n          }\n        },\n        rest: t\n      }\n    },\n    selector: {\n      pattern: /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t])))/m,\n      lookbehind: !0,\n      inside: {\n        interpolation: t.interpolation,\n        comment: t.comment,\n        punctuation: /[{},]/\n      }\n    },\n    func: t.func,\n    string: t.string,\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: !0,\n      greedy: !0\n    },\n    interpolation: t.interpolation,\n    punctuation: /[{}()\\[\\];:.]/\n  };\n}(Prism);","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/github/react-snippy/node_modules/prismjs/components/prism-stylus.min.js"],"names":["e","n","pattern","lookbehind","r","t","comment","url","greedy","string","interpolation","func","important","keyword","hexcode","color","inside","unit","number","function","punctuation","entity","boolean","operator","alias","delimiter","rest","languages","stylus","atrule","variable","statement","property","selector","Prism"],"mappings":"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","sourcesContent":["!function(e){var n={pattern:/(\\b\\d+)(?:%|[a-z]+)/,lookbehind:!0},r={pattern:/(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,lookbehind:!0},t={comment:{pattern:/(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,lookbehind:!0},url:{pattern:/\\burl\\(([\"']?).*?\\1\\)/i,greedy:!0},string:{pattern:/(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,greedy:!0},interpolation:null,func:null,important:/\\B!(?:important|optional)\\b/i,keyword:{pattern:/(^|\\s+)(?:(?:if|else|for|return|unless)(?=\\s|$)|@[\\w-]+)/,lookbehind:!0},hexcode:/#[\\da-f]{3,6}/i,color:[/\\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\\b/i,{pattern:/\\b(?:rgb|hsl)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:rgb|hsl)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,inside:{unit:n,number:r,function:/[\\w-]+(?=\\()/,punctuation:/[(),]/}}],entity:/\\\\[\\da-f]{1,8}/i,unit:n,boolean:/\\b(?:true|false)\\b/,operator:[/~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.{2,3}|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/],number:r,punctuation:/[{}()\\[\\];:,]/};t.interpolation={pattern:/\\{[^\\r\\n}:]+\\}/,alias:\"variable\",inside:{delimiter:{pattern:/^\\{|\\}$/,alias:\"punctuation\"},rest:t}},t.func={pattern:/[\\w-]+\\([^)]*\\).*/,inside:{function:/^[^(]+/,rest:t}},e.languages.stylus={\"atrule-declaration\":{pattern:/(^[ \\t]*)@.+/m,lookbehind:!0,inside:{atrule:/^@[\\w-]+/,rest:t}},\"variable-declaration\":{pattern:/(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:\\{[^{}]*\\}|\\S.*|$)/m,lookbehind:!0,inside:{variable:/^\\S+/,rest:t}},statement:{pattern:/(^[ \\t]*)(?:if|else|for|return|unless)[ \\t].+/m,lookbehind:!0,inside:{keyword:/^\\S+/,rest:t}},\"property-declaration\":{pattern:/((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)(?!\\s)[^{\\r\\n]*(?:;|[^{\\r\\n,]$(?!(?:\\r?\\n|\\r)(?:\\{|\\2[ \\t])))/m,lookbehind:!0,inside:{property:{pattern:/^[^\\s:]+/,inside:{interpolation:t.interpolation}},rest:t}},selector:{pattern:/(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t])))/m,lookbehind:!0,inside:{interpolation:t.interpolation,comment:t.comment,punctuation:/[{},]/}},func:t.func,string:t.string,comment:{pattern:/(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,lookbehind:!0,greedy:!0},interpolation:t.interpolation,punctuation:/[{}()\\[\\];:.]/}}(Prism);"]},"metadata":{},"sourceType":"script"}