{"ast":null,"code":"\"use strict\";\n\n;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar es_proposals_1 = tslib_1.__importDefault(require(\"./es-proposals\"));\n\nvar type_annotations_1 = tslib_1.__importDefault(require(\"./type-annotations\"));\n\nvar types_1 = tslib_1.__importDefault(require(\"../lib/types\"));\n\nvar shared_1 = tslib_1.__importDefault(require(\"../lib/shared\"));\n\nfunction default_1(fork) {\n  fork.use(es_proposals_1.default);\n  fork.use(type_annotations_1.default);\n  var types = fork.use(types_1.default);\n  var def = types.Type.def;\n  var or = types.Type.or;\n  var defaults = fork.use(shared_1.default).defaults; // Base types\n\n  def(\"Flow\").bases(\"Node\");\n  def(\"FlowType\").bases(\"Flow\"); // Type annotations\n\n  def(\"AnyTypeAnnotation\").bases(\"FlowType\").build();\n  def(\"EmptyTypeAnnotation\").bases(\"FlowType\").build();\n  def(\"MixedTypeAnnotation\").bases(\"FlowType\").build();\n  def(\"VoidTypeAnnotation\").bases(\"FlowType\").build();\n  def(\"SymbolTypeAnnotation\").bases(\"FlowType\").build();\n  def(\"NumberTypeAnnotation\").bases(\"FlowType\").build();\n  def(\"BigIntTypeAnnotation\").bases(\"FlowType\").build();\n  def(\"NumberLiteralTypeAnnotation\").bases(\"FlowType\").build(\"value\", \"raw\").field(\"value\", Number).field(\"raw\", String); // Babylon 6 differs in AST from Flow\n  // same as NumberLiteralTypeAnnotation\n\n  def(\"NumericLiteralTypeAnnotation\").bases(\"FlowType\").build(\"value\", \"raw\").field(\"value\", Number).field(\"raw\", String);\n  def(\"BigIntLiteralTypeAnnotation\").bases(\"FlowType\").build(\"value\", \"raw\").field(\"value\", null).field(\"raw\", String);\n  def(\"StringTypeAnnotation\").bases(\"FlowType\").build();\n  def(\"StringLiteralTypeAnnotation\").bases(\"FlowType\").build(\"value\", \"raw\").field(\"value\", String).field(\"raw\", String);\n  def(\"BooleanTypeAnnotation\").bases(\"FlowType\").build();\n  def(\"BooleanLiteralTypeAnnotation\").bases(\"FlowType\").build(\"value\", \"raw\").field(\"value\", Boolean).field(\"raw\", String);\n  def(\"TypeAnnotation\").bases(\"Node\").build(\"typeAnnotation\").field(\"typeAnnotation\", def(\"FlowType\"));\n  def(\"NullableTypeAnnotation\").bases(\"FlowType\").build(\"typeAnnotation\").field(\"typeAnnotation\", def(\"FlowType\"));\n  def(\"NullLiteralTypeAnnotation\").bases(\"FlowType\").build();\n  def(\"NullTypeAnnotation\").bases(\"FlowType\").build();\n  def(\"ThisTypeAnnotation\").bases(\"FlowType\").build();\n  def(\"ExistsTypeAnnotation\").bases(\"FlowType\").build();\n  def(\"ExistentialTypeParam\").bases(\"FlowType\").build();\n  def(\"FunctionTypeAnnotation\").bases(\"FlowType\").build(\"params\", \"returnType\", \"rest\", \"typeParameters\").field(\"params\", [def(\"FunctionTypeParam\")]).field(\"returnType\", def(\"FlowType\")).field(\"rest\", or(def(\"FunctionTypeParam\"), null)).field(\"typeParameters\", or(def(\"TypeParameterDeclaration\"), null));\n  def(\"FunctionTypeParam\").bases(\"Node\").build(\"name\", \"typeAnnotation\", \"optional\").field(\"name\", or(def(\"Identifier\"), null)).field(\"typeAnnotation\", def(\"FlowType\")).field(\"optional\", Boolean);\n  def(\"ArrayTypeAnnotation\").bases(\"FlowType\").build(\"elementType\").field(\"elementType\", def(\"FlowType\"));\n  def(\"ObjectTypeAnnotation\").bases(\"FlowType\").build(\"properties\", \"indexers\", \"callProperties\").field(\"properties\", [or(def(\"ObjectTypeProperty\"), def(\"ObjectTypeSpreadProperty\"))]).field(\"indexers\", [def(\"ObjectTypeIndexer\")], defaults.emptyArray).field(\"callProperties\", [def(\"ObjectTypeCallProperty\")], defaults.emptyArray).field(\"inexact\", or(Boolean, void 0), defaults[\"undefined\"]).field(\"exact\", Boolean, defaults[\"false\"]).field(\"internalSlots\", [def(\"ObjectTypeInternalSlot\")], defaults.emptyArray);\n  def(\"Variance\").bases(\"Node\").build(\"kind\").field(\"kind\", or(\"plus\", \"minus\"));\n  var LegacyVariance = or(def(\"Variance\"), \"plus\", \"minus\", null);\n  def(\"ObjectTypeProperty\").bases(\"Node\").build(\"key\", \"value\", \"optional\").field(\"key\", or(def(\"Literal\"), def(\"Identifier\"))).field(\"value\", def(\"FlowType\")).field(\"optional\", Boolean).field(\"variance\", LegacyVariance, defaults[\"null\"]);\n  def(\"ObjectTypeIndexer\").bases(\"Node\").build(\"id\", \"key\", \"value\").field(\"id\", def(\"Identifier\")).field(\"key\", def(\"FlowType\")).field(\"value\", def(\"FlowType\")).field(\"variance\", LegacyVariance, defaults[\"null\"]).field(\"static\", Boolean, defaults[\"false\"]);\n  def(\"ObjectTypeCallProperty\").bases(\"Node\").build(\"value\").field(\"value\", def(\"FunctionTypeAnnotation\")).field(\"static\", Boolean, defaults[\"false\"]);\n  def(\"QualifiedTypeIdentifier\").bases(\"Node\").build(\"qualification\", \"id\").field(\"qualification\", or(def(\"Identifier\"), def(\"QualifiedTypeIdentifier\"))).field(\"id\", def(\"Identifier\"));\n  def(\"GenericTypeAnnotation\").bases(\"FlowType\").build(\"id\", \"typeParameters\").field(\"id\", or(def(\"Identifier\"), def(\"QualifiedTypeIdentifier\"))).field(\"typeParameters\", or(def(\"TypeParameterInstantiation\"), null));\n  def(\"MemberTypeAnnotation\").bases(\"FlowType\").build(\"object\", \"property\").field(\"object\", def(\"Identifier\")).field(\"property\", or(def(\"MemberTypeAnnotation\"), def(\"GenericTypeAnnotation\")));\n  def(\"UnionTypeAnnotation\").bases(\"FlowType\").build(\"types\").field(\"types\", [def(\"FlowType\")]);\n  def(\"IntersectionTypeAnnotation\").bases(\"FlowType\").build(\"types\").field(\"types\", [def(\"FlowType\")]);\n  def(\"TypeofTypeAnnotation\").bases(\"FlowType\").build(\"argument\").field(\"argument\", def(\"FlowType\"));\n  def(\"ObjectTypeSpreadProperty\").bases(\"Node\").build(\"argument\").field(\"argument\", def(\"FlowType\"));\n  def(\"ObjectTypeInternalSlot\").bases(\"Node\").build(\"id\", \"value\", \"optional\", \"static\", \"method\").field(\"id\", def(\"Identifier\")).field(\"value\", def(\"FlowType\")).field(\"optional\", Boolean).field(\"static\", Boolean).field(\"method\", Boolean);\n  def(\"TypeParameterDeclaration\").bases(\"Node\").build(\"params\").field(\"params\", [def(\"TypeParameter\")]);\n  def(\"TypeParameterInstantiation\").bases(\"Node\").build(\"params\").field(\"params\", [def(\"FlowType\")]);\n  def(\"TypeParameter\").bases(\"FlowType\").build(\"name\", \"variance\", \"bound\", \"default\").field(\"name\", String).field(\"variance\", LegacyVariance, defaults[\"null\"]).field(\"bound\", or(def(\"TypeAnnotation\"), null), defaults[\"null\"]).field(\"default\", or(def(\"FlowType\"), null), defaults[\"null\"]);\n  def(\"ClassProperty\").field(\"variance\", LegacyVariance, defaults[\"null\"]);\n  def(\"ClassImplements\").bases(\"Node\").build(\"id\").field(\"id\", def(\"Identifier\")).field(\"superClass\", or(def(\"Expression\"), null), defaults[\"null\"]).field(\"typeParameters\", or(def(\"TypeParameterInstantiation\"), null), defaults[\"null\"]);\n  def(\"InterfaceTypeAnnotation\").bases(\"FlowType\").build(\"body\", \"extends\").field(\"body\", def(\"ObjectTypeAnnotation\")).field(\"extends\", or([def(\"InterfaceExtends\")], null), defaults[\"null\"]);\n  def(\"InterfaceDeclaration\").bases(\"Declaration\").build(\"id\", \"body\", \"extends\").field(\"id\", def(\"Identifier\")).field(\"typeParameters\", or(def(\"TypeParameterDeclaration\"), null), defaults[\"null\"]).field(\"body\", def(\"ObjectTypeAnnotation\")).field(\"extends\", [def(\"InterfaceExtends\")]);\n  def(\"DeclareInterface\").bases(\"InterfaceDeclaration\").build(\"id\", \"body\", \"extends\");\n  def(\"InterfaceExtends\").bases(\"Node\").build(\"id\").field(\"id\", def(\"Identifier\")).field(\"typeParameters\", or(def(\"TypeParameterInstantiation\"), null), defaults[\"null\"]);\n  def(\"TypeAlias\").bases(\"Declaration\").build(\"id\", \"typeParameters\", \"right\").field(\"id\", def(\"Identifier\")).field(\"typeParameters\", or(def(\"TypeParameterDeclaration\"), null)).field(\"right\", def(\"FlowType\"));\n  def(\"DeclareTypeAlias\").bases(\"TypeAlias\").build(\"id\", \"typeParameters\", \"right\");\n  def(\"OpaqueType\").bases(\"Declaration\").build(\"id\", \"typeParameters\", \"impltype\", \"supertype\").field(\"id\", def(\"Identifier\")).field(\"typeParameters\", or(def(\"TypeParameterDeclaration\"), null)).field(\"impltype\", def(\"FlowType\")).field(\"supertype\", or(def(\"FlowType\"), null));\n  def(\"DeclareOpaqueType\").bases(\"OpaqueType\").build(\"id\", \"typeParameters\", \"supertype\").field(\"impltype\", or(def(\"FlowType\"), null));\n  def(\"TypeCastExpression\").bases(\"Expression\").build(\"expression\", \"typeAnnotation\").field(\"expression\", def(\"Expression\")).field(\"typeAnnotation\", def(\"TypeAnnotation\"));\n  def(\"TupleTypeAnnotation\").bases(\"FlowType\").build(\"types\").field(\"types\", [def(\"FlowType\")]);\n  def(\"DeclareVariable\").bases(\"Statement\").build(\"id\").field(\"id\", def(\"Identifier\"));\n  def(\"DeclareFunction\").bases(\"Statement\").build(\"id\").field(\"id\", def(\"Identifier\")).field(\"predicate\", or(def(\"FlowPredicate\"), null), defaults[\"null\"]);\n  def(\"DeclareClass\").bases(\"InterfaceDeclaration\").build(\"id\");\n  def(\"DeclareModule\").bases(\"Statement\").build(\"id\", \"body\").field(\"id\", or(def(\"Identifier\"), def(\"Literal\"))).field(\"body\", def(\"BlockStatement\"));\n  def(\"DeclareModuleExports\").bases(\"Statement\").build(\"typeAnnotation\").field(\"typeAnnotation\", def(\"TypeAnnotation\"));\n  def(\"DeclareExportDeclaration\").bases(\"Declaration\").build(\"default\", \"declaration\", \"specifiers\", \"source\").field(\"default\", Boolean).field(\"declaration\", or(def(\"DeclareVariable\"), def(\"DeclareFunction\"), def(\"DeclareClass\"), def(\"FlowType\"), // Implies default.\n  def(\"TypeAlias\"), // Implies named type\n  def(\"DeclareOpaqueType\"), // Implies named opaque type\n  def(\"InterfaceDeclaration\"), null)).field(\"specifiers\", [or(def(\"ExportSpecifier\"), def(\"ExportBatchSpecifier\"))], defaults.emptyArray).field(\"source\", or(def(\"Literal\"), null), defaults[\"null\"]);\n  def(\"DeclareExportAllDeclaration\").bases(\"Declaration\").build(\"source\").field(\"source\", or(def(\"Literal\"), null), defaults[\"null\"]);\n  def(\"ImportDeclaration\").field(\"importKind\", or(\"value\", \"type\", \"typeof\"), function () {\n    return \"value\";\n  });\n  def(\"FlowPredicate\").bases(\"Flow\");\n  def(\"InferredPredicate\").bases(\"FlowPredicate\").build();\n  def(\"DeclaredPredicate\").bases(\"FlowPredicate\").build(\"value\").field(\"value\", def(\"Expression\"));\n  def(\"Function\").field(\"predicate\", or(def(\"FlowPredicate\"), null), defaults[\"null\"]);\n  def(\"CallExpression\").field(\"typeArguments\", or(null, def(\"TypeParameterInstantiation\")), defaults[\"null\"]);\n  def(\"NewExpression\").field(\"typeArguments\", or(null, def(\"TypeParameterInstantiation\")), defaults[\"null\"]); // Enums\n\n  def(\"EnumDeclaration\").bases(\"Declaration\").build(\"id\", \"body\").field(\"id\", def(\"Identifier\")).field(\"body\", or(def(\"EnumBooleanBody\"), def(\"EnumNumberBody\"), def(\"EnumStringBody\"), def(\"EnumSymbolBody\")));\n  def(\"EnumBooleanBody\").build(\"members\", \"explicitType\").field(\"members\", [def(\"EnumBooleanMember\")]).field(\"explicitType\", Boolean);\n  def(\"EnumNumberBody\").build(\"members\", \"explicitType\").field(\"members\", [def(\"EnumNumberMember\")]).field(\"explicitType\", Boolean);\n  def(\"EnumStringBody\").build(\"members\", \"explicitType\").field(\"members\", or([def(\"EnumStringMember\")], [def(\"EnumDefaultedMember\")])).field(\"explicitType\", Boolean);\n  def(\"EnumSymbolBody\").build(\"members\").field(\"members\", [def(\"EnumDefaultedMember\")]);\n  def(\"EnumBooleanMember\").build(\"id\", \"init\").field(\"id\", def(\"Identifier\")).field(\"init\", or(def(\"Literal\"), Boolean));\n  def(\"EnumNumberMember\").build(\"id\", \"init\").field(\"id\", def(\"Identifier\")).field(\"init\", def(\"Literal\"));\n  def(\"EnumStringMember\").build(\"id\", \"init\").field(\"id\", def(\"Identifier\")).field(\"init\", def(\"Literal\"));\n  def(\"EnumDefaultedMember\").build(\"id\").field(\"id\", def(\"Identifier\"));\n}\n\nexports.default = default_1;\nmodule.exports = exports[\"default\"];","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/github/react-snippy/node_modules/jscodeshift/node_modules/ast-types/def/flow.js"],"names":["Object","defineProperty","exports","value","tslib_1","require","es_proposals_1","__importDefault","type_annotations_1","types_1","shared_1","default_1","fork","use","default","types","def","Type","or","defaults","bases","build","field","Number","String","Boolean","emptyArray","LegacyVariance","module"],"mappings":"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","sourcesContent":["\"use strict\";;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar es_proposals_1 = tslib_1.__importDefault(require(\"./es-proposals\"));\nvar type_annotations_1 = tslib_1.__importDefault(require(\"./type-annotations\"));\nvar types_1 = tslib_1.__importDefault(require(\"../lib/types\"));\nvar shared_1 = tslib_1.__importDefault(require(\"../lib/shared\"));\nfunction default_1(fork) {\n    fork.use(es_proposals_1.default);\n    fork.use(type_annotations_1.default);\n    var types = fork.use(types_1.default);\n    var def = types.Type.def;\n    var or = types.Type.or;\n    var defaults = fork.use(shared_1.default).defaults;\n    // Base types\n    def(\"Flow\").bases(\"Node\");\n    def(\"FlowType\").bases(\"Flow\");\n    // Type annotations\n    def(\"AnyTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"EmptyTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"MixedTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"VoidTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"SymbolTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"NumberTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"BigIntTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"NumberLiteralTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"value\", \"raw\")\n        .field(\"value\", Number)\n        .field(\"raw\", String);\n    // Babylon 6 differs in AST from Flow\n    // same as NumberLiteralTypeAnnotation\n    def(\"NumericLiteralTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"value\", \"raw\")\n        .field(\"value\", Number)\n        .field(\"raw\", String);\n    def(\"BigIntLiteralTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"value\", \"raw\")\n        .field(\"value\", null)\n        .field(\"raw\", String);\n    def(\"StringTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"StringLiteralTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"value\", \"raw\")\n        .field(\"value\", String)\n        .field(\"raw\", String);\n    def(\"BooleanTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"BooleanLiteralTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"value\", \"raw\")\n        .field(\"value\", Boolean)\n        .field(\"raw\", String);\n    def(\"TypeAnnotation\")\n        .bases(\"Node\")\n        .build(\"typeAnnotation\")\n        .field(\"typeAnnotation\", def(\"FlowType\"));\n    def(\"NullableTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"typeAnnotation\")\n        .field(\"typeAnnotation\", def(\"FlowType\"));\n    def(\"NullLiteralTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"NullTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"ThisTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"ExistsTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"ExistentialTypeParam\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"FunctionTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"params\", \"returnType\", \"rest\", \"typeParameters\")\n        .field(\"params\", [def(\"FunctionTypeParam\")])\n        .field(\"returnType\", def(\"FlowType\"))\n        .field(\"rest\", or(def(\"FunctionTypeParam\"), null))\n        .field(\"typeParameters\", or(def(\"TypeParameterDeclaration\"), null));\n    def(\"FunctionTypeParam\")\n        .bases(\"Node\")\n        .build(\"name\", \"typeAnnotation\", \"optional\")\n        .field(\"name\", or(def(\"Identifier\"), null))\n        .field(\"typeAnnotation\", def(\"FlowType\"))\n        .field(\"optional\", Boolean);\n    def(\"ArrayTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"elementType\")\n        .field(\"elementType\", def(\"FlowType\"));\n    def(\"ObjectTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"properties\", \"indexers\", \"callProperties\")\n        .field(\"properties\", [\n        or(def(\"ObjectTypeProperty\"), def(\"ObjectTypeSpreadProperty\"))\n    ])\n        .field(\"indexers\", [def(\"ObjectTypeIndexer\")], defaults.emptyArray)\n        .field(\"callProperties\", [def(\"ObjectTypeCallProperty\")], defaults.emptyArray)\n        .field(\"inexact\", or(Boolean, void 0), defaults[\"undefined\"])\n        .field(\"exact\", Boolean, defaults[\"false\"])\n        .field(\"internalSlots\", [def(\"ObjectTypeInternalSlot\")], defaults.emptyArray);\n    def(\"Variance\")\n        .bases(\"Node\")\n        .build(\"kind\")\n        .field(\"kind\", or(\"plus\", \"minus\"));\n    var LegacyVariance = or(def(\"Variance\"), \"plus\", \"minus\", null);\n    def(\"ObjectTypeProperty\")\n        .bases(\"Node\")\n        .build(\"key\", \"value\", \"optional\")\n        .field(\"key\", or(def(\"Literal\"), def(\"Identifier\")))\n        .field(\"value\", def(\"FlowType\"))\n        .field(\"optional\", Boolean)\n        .field(\"variance\", LegacyVariance, defaults[\"null\"]);\n    def(\"ObjectTypeIndexer\")\n        .bases(\"Node\")\n        .build(\"id\", \"key\", \"value\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"key\", def(\"FlowType\"))\n        .field(\"value\", def(\"FlowType\"))\n        .field(\"variance\", LegacyVariance, defaults[\"null\"])\n        .field(\"static\", Boolean, defaults[\"false\"]);\n    def(\"ObjectTypeCallProperty\")\n        .bases(\"Node\")\n        .build(\"value\")\n        .field(\"value\", def(\"FunctionTypeAnnotation\"))\n        .field(\"static\", Boolean, defaults[\"false\"]);\n    def(\"QualifiedTypeIdentifier\")\n        .bases(\"Node\")\n        .build(\"qualification\", \"id\")\n        .field(\"qualification\", or(def(\"Identifier\"), def(\"QualifiedTypeIdentifier\")))\n        .field(\"id\", def(\"Identifier\"));\n    def(\"GenericTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"id\", \"typeParameters\")\n        .field(\"id\", or(def(\"Identifier\"), def(\"QualifiedTypeIdentifier\")))\n        .field(\"typeParameters\", or(def(\"TypeParameterInstantiation\"), null));\n    def(\"MemberTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"object\", \"property\")\n        .field(\"object\", def(\"Identifier\"))\n        .field(\"property\", or(def(\"MemberTypeAnnotation\"), def(\"GenericTypeAnnotation\")));\n    def(\"UnionTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"types\")\n        .field(\"types\", [def(\"FlowType\")]);\n    def(\"IntersectionTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"types\")\n        .field(\"types\", [def(\"FlowType\")]);\n    def(\"TypeofTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"argument\")\n        .field(\"argument\", def(\"FlowType\"));\n    def(\"ObjectTypeSpreadProperty\")\n        .bases(\"Node\")\n        .build(\"argument\")\n        .field(\"argument\", def(\"FlowType\"));\n    def(\"ObjectTypeInternalSlot\")\n        .bases(\"Node\")\n        .build(\"id\", \"value\", \"optional\", \"static\", \"method\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"value\", def(\"FlowType\"))\n        .field(\"optional\", Boolean)\n        .field(\"static\", Boolean)\n        .field(\"method\", Boolean);\n    def(\"TypeParameterDeclaration\")\n        .bases(\"Node\")\n        .build(\"params\")\n        .field(\"params\", [def(\"TypeParameter\")]);\n    def(\"TypeParameterInstantiation\")\n        .bases(\"Node\")\n        .build(\"params\")\n        .field(\"params\", [def(\"FlowType\")]);\n    def(\"TypeParameter\")\n        .bases(\"FlowType\")\n        .build(\"name\", \"variance\", \"bound\", \"default\")\n        .field(\"name\", String)\n        .field(\"variance\", LegacyVariance, defaults[\"null\"])\n        .field(\"bound\", or(def(\"TypeAnnotation\"), null), defaults[\"null\"])\n        .field(\"default\", or(def(\"FlowType\"), null), defaults[\"null\"]);\n    def(\"ClassProperty\")\n        .field(\"variance\", LegacyVariance, defaults[\"null\"]);\n    def(\"ClassImplements\")\n        .bases(\"Node\")\n        .build(\"id\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"superClass\", or(def(\"Expression\"), null), defaults[\"null\"])\n        .field(\"typeParameters\", or(def(\"TypeParameterInstantiation\"), null), defaults[\"null\"]);\n    def(\"InterfaceTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"body\", \"extends\")\n        .field(\"body\", def(\"ObjectTypeAnnotation\"))\n        .field(\"extends\", or([def(\"InterfaceExtends\")], null), defaults[\"null\"]);\n    def(\"InterfaceDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"id\", \"body\", \"extends\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"typeParameters\", or(def(\"TypeParameterDeclaration\"), null), defaults[\"null\"])\n        .field(\"body\", def(\"ObjectTypeAnnotation\"))\n        .field(\"extends\", [def(\"InterfaceExtends\")]);\n    def(\"DeclareInterface\")\n        .bases(\"InterfaceDeclaration\")\n        .build(\"id\", \"body\", \"extends\");\n    def(\"InterfaceExtends\")\n        .bases(\"Node\")\n        .build(\"id\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"typeParameters\", or(def(\"TypeParameterInstantiation\"), null), defaults[\"null\"]);\n    def(\"TypeAlias\")\n        .bases(\"Declaration\")\n        .build(\"id\", \"typeParameters\", \"right\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"typeParameters\", or(def(\"TypeParameterDeclaration\"), null))\n        .field(\"right\", def(\"FlowType\"));\n    def(\"DeclareTypeAlias\")\n        .bases(\"TypeAlias\")\n        .build(\"id\", \"typeParameters\", \"right\");\n    def(\"OpaqueType\")\n        .bases(\"Declaration\")\n        .build(\"id\", \"typeParameters\", \"impltype\", \"supertype\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"typeParameters\", or(def(\"TypeParameterDeclaration\"), null))\n        .field(\"impltype\", def(\"FlowType\"))\n        .field(\"supertype\", or(def(\"FlowType\"), null));\n    def(\"DeclareOpaqueType\")\n        .bases(\"OpaqueType\")\n        .build(\"id\", \"typeParameters\", \"supertype\")\n        .field(\"impltype\", or(def(\"FlowType\"), null));\n    def(\"TypeCastExpression\")\n        .bases(\"Expression\")\n        .build(\"expression\", \"typeAnnotation\")\n        .field(\"expression\", def(\"Expression\"))\n        .field(\"typeAnnotation\", def(\"TypeAnnotation\"));\n    def(\"TupleTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"types\")\n        .field(\"types\", [def(\"FlowType\")]);\n    def(\"DeclareVariable\")\n        .bases(\"Statement\")\n        .build(\"id\")\n        .field(\"id\", def(\"Identifier\"));\n    def(\"DeclareFunction\")\n        .bases(\"Statement\")\n        .build(\"id\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"predicate\", or(def(\"FlowPredicate\"), null), defaults[\"null\"]);\n    def(\"DeclareClass\")\n        .bases(\"InterfaceDeclaration\")\n        .build(\"id\");\n    def(\"DeclareModule\")\n        .bases(\"Statement\")\n        .build(\"id\", \"body\")\n        .field(\"id\", or(def(\"Identifier\"), def(\"Literal\")))\n        .field(\"body\", def(\"BlockStatement\"));\n    def(\"DeclareModuleExports\")\n        .bases(\"Statement\")\n        .build(\"typeAnnotation\")\n        .field(\"typeAnnotation\", def(\"TypeAnnotation\"));\n    def(\"DeclareExportDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"default\", \"declaration\", \"specifiers\", \"source\")\n        .field(\"default\", Boolean)\n        .field(\"declaration\", or(def(\"DeclareVariable\"), def(\"DeclareFunction\"), def(\"DeclareClass\"), def(\"FlowType\"), // Implies default.\n    def(\"TypeAlias\"), // Implies named type\n    def(\"DeclareOpaqueType\"), // Implies named opaque type\n    def(\"InterfaceDeclaration\"), null))\n        .field(\"specifiers\", [or(def(\"ExportSpecifier\"), def(\"ExportBatchSpecifier\"))], defaults.emptyArray)\n        .field(\"source\", or(def(\"Literal\"), null), defaults[\"null\"]);\n    def(\"DeclareExportAllDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"source\")\n        .field(\"source\", or(def(\"Literal\"), null), defaults[\"null\"]);\n    def(\"ImportDeclaration\")\n        .field(\"importKind\", or(\"value\", \"type\", \"typeof\"), function () { return \"value\"; });\n    def(\"FlowPredicate\").bases(\"Flow\");\n    def(\"InferredPredicate\")\n        .bases(\"FlowPredicate\")\n        .build();\n    def(\"DeclaredPredicate\")\n        .bases(\"FlowPredicate\")\n        .build(\"value\")\n        .field(\"value\", def(\"Expression\"));\n    def(\"Function\")\n        .field(\"predicate\", or(def(\"FlowPredicate\"), null), defaults[\"null\"]);\n    def(\"CallExpression\")\n        .field(\"typeArguments\", or(null, def(\"TypeParameterInstantiation\")), defaults[\"null\"]);\n    def(\"NewExpression\")\n        .field(\"typeArguments\", or(null, def(\"TypeParameterInstantiation\")), defaults[\"null\"]);\n    // Enums\n    def(\"EnumDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"id\", \"body\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"body\", or(def(\"EnumBooleanBody\"), def(\"EnumNumberBody\"), def(\"EnumStringBody\"), def(\"EnumSymbolBody\")));\n    def(\"EnumBooleanBody\")\n        .build(\"members\", \"explicitType\")\n        .field(\"members\", [def(\"EnumBooleanMember\")])\n        .field(\"explicitType\", Boolean);\n    def(\"EnumNumberBody\")\n        .build(\"members\", \"explicitType\")\n        .field(\"members\", [def(\"EnumNumberMember\")])\n        .field(\"explicitType\", Boolean);\n    def(\"EnumStringBody\")\n        .build(\"members\", \"explicitType\")\n        .field(\"members\", or([def(\"EnumStringMember\")], [def(\"EnumDefaultedMember\")]))\n        .field(\"explicitType\", Boolean);\n    def(\"EnumSymbolBody\")\n        .build(\"members\")\n        .field(\"members\", [def(\"EnumDefaultedMember\")]);\n    def(\"EnumBooleanMember\")\n        .build(\"id\", \"init\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"init\", or(def(\"Literal\"), Boolean));\n    def(\"EnumNumberMember\")\n        .build(\"id\", \"init\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"init\", def(\"Literal\"));\n    def(\"EnumStringMember\")\n        .build(\"id\", \"init\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"init\", def(\"Literal\"));\n    def(\"EnumDefaultedMember\")\n        .build(\"id\")\n        .field(\"id\", def(\"Identifier\"));\n}\nexports.default = default_1;\nmodule.exports = exports[\"default\"];\n"]},"metadata":{},"sourceType":"script"}