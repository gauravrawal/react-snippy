{"ast":null,"code":"Prism.languages.javastacktrace = {\n  summary: {\n    pattern: /^[\\t ]*(?:(?:Caused by:|Suppressed:|Exception in thread \"[^\"]*\")[\\t ]+)?[\\w$.]+(?::.*)?$/m,\n    inside: {\n      keyword: {\n        pattern: /^(\\s*)(?:(?:Caused by|Suppressed)(?=:)|Exception in thread)/m,\n        lookbehind: !0\n      },\n      string: {\n        pattern: /^(\\s*)\"[^\"]*\"/,\n        lookbehind: !0\n      },\n      exceptions: {\n        pattern: /^(:?\\s*)[\\w$.]+(?=:|$)/,\n        lookbehind: !0,\n        inside: {\n          \"class-name\": /[\\w$]+(?=$|:)/,\n          namespace: /[a-z]\\w*/,\n          punctuation: /[.:]/\n        }\n      },\n      message: {\n        pattern: /(:\\s*)\\S.*/,\n        lookbehind: !0,\n        alias: \"string\"\n      },\n      punctuation: /:/\n    }\n  },\n  \"stack-frame\": {\n    pattern: /^[\\t ]*at (?:[\\w$./]|@[\\w$.+-]*\\/)+(?:<init>)?\\([^()]*\\)/m,\n    inside: {\n      keyword: {\n        pattern: /^(\\s*)at(?= )/,\n        lookbehind: !0\n      },\n      source: [{\n        pattern: /(\\()\\w+\\.\\w+:\\d+(?=\\))/,\n        lookbehind: !0,\n        inside: {\n          file: /^\\w+\\.\\w+/,\n          punctuation: /:/,\n          \"line-number\": {\n            pattern: /\\d+/,\n            alias: \"number\"\n          }\n        }\n      }, {\n        pattern: /(\\()[^()]*(?=\\))/,\n        lookbehind: !0,\n        inside: {\n          keyword: /^(?:Unknown Source|Native Method)$/\n        }\n      }],\n      \"class-name\": /[\\w$]+(?=\\.(?:<init>|[\\w$]+)\\()/,\n      function: /(?:<init>|[\\w$]+)(?=\\()/,\n      \"class-loader\": {\n        pattern: /(\\s)[a-z]\\w*(?:\\.[a-z]\\w*)*(?=\\/[\\w@$.]*\\/)/,\n        lookbehind: !0,\n        alias: \"namespace\",\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      module: {\n        pattern: /([\\s/])[a-z]\\w*(?:\\.[a-z]\\w*)*(?:@[\\w$.+-]*)?(?=\\/)/,\n        lookbehind: !0,\n        inside: {\n          version: {\n            pattern: /(@)[\\s\\S]+/,\n            lookbehind: !0,\n            alias: \"number\"\n          },\n          punctuation: /[@.]/\n        }\n      },\n      namespace: {\n        pattern: /(?:[a-z]\\w*\\.)+/,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      punctuation: /[()/.]/\n    }\n  },\n  more: {\n    pattern: /^[\\t ]*\\.{3} \\d+ [a-z]+(?: [a-z]+)*/m,\n    inside: {\n      punctuation: /\\.{3}/,\n      number: /\\d+/,\n      keyword: /\\b[a-z]+(?: [a-z]+)*\\b/\n    }\n  }\n};","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/github/react-snippy/node_modules/prismjs/components/prism-javastacktrace.min.js"],"names":["Prism","languages","javastacktrace","summary","pattern","inside","keyword","lookbehind","string","exceptions","namespace","punctuation","message","alias","source","file","function","module","version","more","number"],"mappings":"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","sourcesContent":["Prism.languages.javastacktrace={summary:{pattern:/^[\\t ]*(?:(?:Caused by:|Suppressed:|Exception in thread \"[^\"]*\")[\\t ]+)?[\\w$.]+(?::.*)?$/m,inside:{keyword:{pattern:/^(\\s*)(?:(?:Caused by|Suppressed)(?=:)|Exception in thread)/m,lookbehind:!0},string:{pattern:/^(\\s*)\"[^\"]*\"/,lookbehind:!0},exceptions:{pattern:/^(:?\\s*)[\\w$.]+(?=:|$)/,lookbehind:!0,inside:{\"class-name\":/[\\w$]+(?=$|:)/,namespace:/[a-z]\\w*/,punctuation:/[.:]/}},message:{pattern:/(:\\s*)\\S.*/,lookbehind:!0,alias:\"string\"},punctuation:/:/}},\"stack-frame\":{pattern:/^[\\t ]*at (?:[\\w$./]|@[\\w$.+-]*\\/)+(?:<init>)?\\([^()]*\\)/m,inside:{keyword:{pattern:/^(\\s*)at(?= )/,lookbehind:!0},source:[{pattern:/(\\()\\w+\\.\\w+:\\d+(?=\\))/,lookbehind:!0,inside:{file:/^\\w+\\.\\w+/,punctuation:/:/,\"line-number\":{pattern:/\\d+/,alias:\"number\"}}},{pattern:/(\\()[^()]*(?=\\))/,lookbehind:!0,inside:{keyword:/^(?:Unknown Source|Native Method)$/}}],\"class-name\":/[\\w$]+(?=\\.(?:<init>|[\\w$]+)\\()/,function:/(?:<init>|[\\w$]+)(?=\\()/,\"class-loader\":{pattern:/(\\s)[a-z]\\w*(?:\\.[a-z]\\w*)*(?=\\/[\\w@$.]*\\/)/,lookbehind:!0,alias:\"namespace\",inside:{punctuation:/\\./}},module:{pattern:/([\\s/])[a-z]\\w*(?:\\.[a-z]\\w*)*(?:@[\\w$.+-]*)?(?=\\/)/,lookbehind:!0,inside:{version:{pattern:/(@)[\\s\\S]+/,lookbehind:!0,alias:\"number\"},punctuation:/[@.]/}},namespace:{pattern:/(?:[a-z]\\w*\\.)+/,inside:{punctuation:/\\./}},punctuation:/[()/.]/}},more:{pattern:/^[\\t ]*\\.{3} \\d+ [a-z]+(?: [a-z]+)*/m,inside:{punctuation:/\\.{3}/,number:/\\d+/,keyword:/\\b[a-z]+(?: [a-z]+)*\\b/}}};"]},"metadata":{},"sourceType":"script"}