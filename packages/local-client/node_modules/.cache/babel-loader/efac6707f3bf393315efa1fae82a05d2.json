{"ast":null,"code":"!function (e) {\n  var n = /\\b(?:abstype|and|andalso|as|case|datatype|do|else|end|eqtype|exception|fn|fun|functor|handle|if|in|include|infix|infixr|let|local|nonfix|of|op|open|orelse|raise|rec|sharing|sig|signature|struct|structure|then|type|val|where|while|with|withtype)\\b/i;\n  e.languages.sml = {\n    comment: /\\(\\*(?:[^*(]|\\*(?!\\))|\\((?!\\*)|\\(\\*(?:[^*(]|\\*(?!\\))|\\((?!\\*))*\\*\\))*\\*\\)/,\n    string: {\n      pattern: /#?\"(?:[^\"\\\\]|\\\\.)*\"/,\n      greedy: !0\n    },\n    \"class-name\": [{\n      pattern: RegExp(\"((?:^|[^:]):\\\\s*)<TERMINAL>(?:\\\\s*(?:(?:\\\\*|->)\\\\s*<TERMINAL>|,\\\\s*<TERMINAL>(?:(?=<NOT-LAST>)|(?!<NOT-LAST>)\\\\s+<LONG-ID>)))*\".replace(/<NOT-LAST>/g, function () {\n        return \"\\\\s*(?:[*,]|->)\";\n      }).replace(/<TERMINAL>/g, function () {\n        return \"(?:'[\\\\w']*|<LONG-ID>|\\\\((?:[^()]|\\\\([^()]*\\\\))*\\\\)|\\\\{(?:[^{}]|\\\\{[^{}]*\\\\})*\\\\})(?:\\\\s+<LONG-ID>)*\";\n      }).replace(/<LONG-ID>/g, function () {\n        return \"(?!<KEYWORD>)[a-z\\\\d_][\\\\w'.]*\";\n      }).replace(/<KEYWORD>/g, function () {\n        return n.source;\n      }), \"i\"),\n      lookbehind: !0,\n      greedy: !0,\n      inside: null\n    }, {\n      pattern: /((?:^|[^\\w'])(?:datatype|exception|functor|signature|structure|type)\\s+)[a-z_][\\w'.]*/i,\n      lookbehind: !0\n    }],\n    function: {\n      pattern: /((?:^|[^\\w'])fun\\s+)[a-z_][\\w'.]*/i,\n      lookbehind: !0\n    },\n    keyword: n,\n    variable: {\n      pattern: /(^|[^\\w'])'[\\w']*/,\n      lookbehind: !0\n    },\n    number: /~?\\b(?:\\d+(?:\\.\\d+)?(?:e~?\\d+)?|0x[\\da-f]+)\\b/i,\n    word: {\n      pattern: /\\b0w(?:\\d+|x[\\da-f]+)\\b/i,\n      alias: \"constant\"\n    },\n    boolean: /\\b(?:false|true)\\b/i,\n    operator: /\\.\\.\\.|:[>=:]|=>?|->|[<>]=?|[!+\\-*/^#|@~]/,\n    punctuation: /[(){}\\[\\].:,;]/\n  }, e.languages.sml[\"class-name\"][0].inside = e.languages.sml, e.languages.smlnj = e.languages.sml;\n}(Prism);","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/jbook/node_modules/prismjs/components/prism-sml.min.js"],"names":["e","n","languages","sml","comment","string","pattern","greedy","RegExp","replace","source","lookbehind","inside","function","keyword","variable","number","word","alias","boolean","operator","punctuation","smlnj","Prism"],"mappings":"AAAA,CAAC,UAASA,CAAT,EAAW;AAAC,MAAIC,CAAC,GAAC,yPAAN;AAAgQD,EAAAA,CAAC,CAACE,SAAF,CAAYC,GAAZ,GAAgB;AAACC,IAAAA,OAAO,EAAC,2EAAT;AAAqFC,IAAAA,MAAM,EAAC;AAACC,MAAAA,OAAO,EAAC,qBAAT;AAA+BC,MAAAA,MAAM,EAAC,CAAC;AAAvC,KAA5F;AAAsI,kBAAa,CAAC;AAACD,MAAAA,OAAO,EAACE,MAAM,CAAC,iIAAiIC,OAAjI,CAAyI,aAAzI,EAAuJ,YAAU;AAAC,eAAM,iBAAN;AAAwB,OAA1L,EAA4LA,OAA5L,CAAoM,aAApM,EAAkN,YAAU;AAAC,eAAM,sGAAN;AAA6G,OAA1U,EAA4UA,OAA5U,CAAoV,YAApV,EAAiW,YAAU;AAAC,eAAM,gCAAN;AAAuC,OAAnZ,EAAqZA,OAArZ,CAA6Z,YAA7Z,EAA0a,YAAU;AAAC,eAAOR,CAAC,CAACS,MAAT;AAAgB,OAArc,CAAD,EAAwc,GAAxc,CAAf;AAA4dC,MAAAA,UAAU,EAAC,CAAC,CAAxe;AAA0eJ,MAAAA,MAAM,EAAC,CAAC,CAAlf;AAAofK,MAAAA,MAAM,EAAC;AAA3f,KAAD,EAAkgB;AAACN,MAAAA,OAAO,EAAC,wFAAT;AAAkGK,MAAAA,UAAU,EAAC,CAAC;AAA9G,KAAlgB,CAAnJ;AAAuwBE,IAAAA,QAAQ,EAAC;AAACP,MAAAA,OAAO,EAAC,oCAAT;AAA8CK,MAAAA,UAAU,EAAC,CAAC;AAA1D,KAAhxB;AAA60BG,IAAAA,OAAO,EAACb,CAAr1B;AAAu1Bc,IAAAA,QAAQ,EAAC;AAACT,MAAAA,OAAO,EAAC,mBAAT;AAA6BK,MAAAA,UAAU,EAAC,CAAC;AAAzC,KAAh2B;AAA44BK,IAAAA,MAAM,EAAC,gDAAn5B;AAAo8BC,IAAAA,IAAI,EAAC;AAACX,MAAAA,OAAO,EAAC,0BAAT;AAAoCY,MAAAA,KAAK,EAAC;AAA1C,KAAz8B;AAA+/BC,IAAAA,OAAO,EAAC,qBAAvgC;AAA6hCC,IAAAA,QAAQ,EAAC,2CAAtiC;AAAklCC,IAAAA,WAAW,EAAC;AAA9lC,GAAhB,EAAgoCrB,CAAC,CAACE,SAAF,CAAYC,GAAZ,CAAgB,YAAhB,EAA8B,CAA9B,EAAiCS,MAAjC,GAAwCZ,CAAC,CAACE,SAAF,CAAYC,GAAprC,EAAwrCH,CAAC,CAACE,SAAF,CAAYoB,KAAZ,GAAkBtB,CAAC,CAACE,SAAF,CAAYC,GAAttC;AAA0tC,CAAt+C,CAAu+CoB,KAAv+C,CAAD","sourcesContent":["!function(e){var n=/\\b(?:abstype|and|andalso|as|case|datatype|do|else|end|eqtype|exception|fn|fun|functor|handle|if|in|include|infix|infixr|let|local|nonfix|of|op|open|orelse|raise|rec|sharing|sig|signature|struct|structure|then|type|val|where|while|with|withtype)\\b/i;e.languages.sml={comment:/\\(\\*(?:[^*(]|\\*(?!\\))|\\((?!\\*)|\\(\\*(?:[^*(]|\\*(?!\\))|\\((?!\\*))*\\*\\))*\\*\\)/,string:{pattern:/#?\"(?:[^\"\\\\]|\\\\.)*\"/,greedy:!0},\"class-name\":[{pattern:RegExp(\"((?:^|[^:]):\\\\s*)<TERMINAL>(?:\\\\s*(?:(?:\\\\*|->)\\\\s*<TERMINAL>|,\\\\s*<TERMINAL>(?:(?=<NOT-LAST>)|(?!<NOT-LAST>)\\\\s+<LONG-ID>)))*\".replace(/<NOT-LAST>/g,function(){return\"\\\\s*(?:[*,]|->)\"}).replace(/<TERMINAL>/g,function(){return\"(?:'[\\\\w']*|<LONG-ID>|\\\\((?:[^()]|\\\\([^()]*\\\\))*\\\\)|\\\\{(?:[^{}]|\\\\{[^{}]*\\\\})*\\\\})(?:\\\\s+<LONG-ID>)*\"}).replace(/<LONG-ID>/g,function(){return\"(?!<KEYWORD>)[a-z\\\\d_][\\\\w'.]*\"}).replace(/<KEYWORD>/g,function(){return n.source}),\"i\"),lookbehind:!0,greedy:!0,inside:null},{pattern:/((?:^|[^\\w'])(?:datatype|exception|functor|signature|structure|type)\\s+)[a-z_][\\w'.]*/i,lookbehind:!0}],function:{pattern:/((?:^|[^\\w'])fun\\s+)[a-z_][\\w'.]*/i,lookbehind:!0},keyword:n,variable:{pattern:/(^|[^\\w'])'[\\w']*/,lookbehind:!0},number:/~?\\b(?:\\d+(?:\\.\\d+)?(?:e~?\\d+)?|0x[\\da-f]+)\\b/i,word:{pattern:/\\b0w(?:\\d+|x[\\da-f]+)\\b/i,alias:\"constant\"},boolean:/\\b(?:false|true)\\b/i,operator:/\\.\\.\\.|:[>=:]|=>?|->|[<>]=?|[!+\\-*/^#|@~]/,punctuation:/[(){}\\[\\].:,;]/},e.languages.sml[\"class-name\"][0].inside=e.languages.sml,e.languages.smlnj=e.languages.sml}(Prism);"]},"metadata":{},"sourceType":"script"}