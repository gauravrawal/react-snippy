{"ast":null,"code":"Prism.languages.aspnet = Prism.languages.extend('markup', {\n  'page-directive': {\n    pattern: /<%\\s*@.*%>/i,\n    alias: 'tag',\n    inside: {\n      'page-directive': {\n        pattern: /<%\\s*@\\s*(?:Assembly|Control|Implements|Import|Master(?:Type)?|OutputCache|Page|PreviousPageType|Reference|Register)?|%>/i,\n        alias: 'tag'\n      },\n      rest: Prism.languages.markup.tag.inside\n    }\n  },\n  'directive': {\n    pattern: /<%.*%>/i,\n    alias: 'tag',\n    inside: {\n      'directive': {\n        pattern: /<%\\s*?[$=%#:]{0,2}|%>/i,\n        alias: 'tag'\n      },\n      rest: Prism.languages.csharp\n    }\n  }\n}); // Regexp copied from prism-markup, with a negative look-ahead added\n\nPrism.languages.aspnet.tag.pattern = /<(?!%)\\/?[^\\s>\\/]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i; // match directives of attribute value foo=\"<% Bar %>\"\n\nPrism.languages.insertBefore('inside', 'punctuation', {\n  'directive': Prism.languages.aspnet['directive']\n}, Prism.languages.aspnet.tag.inside['attr-value']);\nPrism.languages.insertBefore('aspnet', 'comment', {\n  'asp-comment': {\n    pattern: /<%--[\\s\\S]*?--%>/,\n    alias: ['asp', 'comment']\n  }\n}); // script runat=\"server\" contains csharp, not javascript\n\nPrism.languages.insertBefore('aspnet', Prism.languages.javascript ? 'script' : 'tag', {\n  'asp-script': {\n    pattern: /(<script(?=.*runat=['\"]?server\\b)[^>]*>)[\\s\\S]*?(?=<\\/script>)/i,\n    lookbehind: true,\n    alias: ['asp', 'script'],\n    inside: Prism.languages.csharp || {}\n  }\n});","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/github/react-snippy/node_modules/prismjs/components/prism-aspnet.js"],"names":["Prism","languages","aspnet","extend","pattern","alias","inside","rest","markup","tag","csharp","insertBefore","javascript","lookbehind"],"mappings":"AAAAA,KAAK,CAACC,SAAN,CAAgBC,MAAhB,GAAyBF,KAAK,CAACC,SAAN,CAAgBE,MAAhB,CAAuB,QAAvB,EAAiC;AACzD,oBAAkB;AACjBC,IAAAA,OAAO,EAAE,aADQ;AAEjBC,IAAAA,KAAK,EAAE,KAFU;AAGjBC,IAAAA,MAAM,EAAE;AACP,wBAAkB;AACjBF,QAAAA,OAAO,EAAE,2HADQ;AAEjBC,QAAAA,KAAK,EAAE;AAFU,OADX;AAKPE,MAAAA,IAAI,EAAEP,KAAK,CAACC,SAAN,CAAgBO,MAAhB,CAAuBC,GAAvB,CAA2BH;AAL1B;AAHS,GADuC;AAYzD,eAAa;AACZF,IAAAA,OAAO,EAAE,SADG;AAEZC,IAAAA,KAAK,EAAE,KAFK;AAGZC,IAAAA,MAAM,EAAE;AACP,mBAAa;AACZF,QAAAA,OAAO,EAAE,wBADG;AAEZC,QAAAA,KAAK,EAAE;AAFK,OADN;AAKPE,MAAAA,IAAI,EAAEP,KAAK,CAACC,SAAN,CAAgBS;AALf;AAHI;AAZ4C,CAAjC,CAAzB,C,CAwBA;;AACAV,KAAK,CAACC,SAAN,CAAgBC,MAAhB,CAAuBO,GAAvB,CAA2BL,OAA3B,GAAqC,mGAArC,C,CAEA;;AACAJ,KAAK,CAACC,SAAN,CAAgBU,YAAhB,CAA6B,QAA7B,EAAuC,aAAvC,EAAsD;AACrD,eAAaX,KAAK,CAACC,SAAN,CAAgBC,MAAhB,CAAuB,WAAvB;AADwC,CAAtD,EAEGF,KAAK,CAACC,SAAN,CAAgBC,MAAhB,CAAuBO,GAAvB,CAA2BH,MAA3B,CAAkC,YAAlC,CAFH;AAIAN,KAAK,CAACC,SAAN,CAAgBU,YAAhB,CAA6B,QAA7B,EAAuC,SAAvC,EAAkD;AACjD,iBAAe;AACdP,IAAAA,OAAO,EAAE,kBADK;AAEdC,IAAAA,KAAK,EAAE,CAAC,KAAD,EAAQ,SAAR;AAFO;AADkC,CAAlD,E,CAOA;;AACAL,KAAK,CAACC,SAAN,CAAgBU,YAAhB,CAA6B,QAA7B,EAAuCX,KAAK,CAACC,SAAN,CAAgBW,UAAhB,GAA6B,QAA7B,GAAwC,KAA/E,EAAsF;AACrF,gBAAc;AACbR,IAAAA,OAAO,EAAE,iEADI;AAEbS,IAAAA,UAAU,EAAE,IAFC;AAGbR,IAAAA,KAAK,EAAE,CAAC,KAAD,EAAQ,QAAR,CAHM;AAIbC,IAAAA,MAAM,EAAEN,KAAK,CAACC,SAAN,CAAgBS,MAAhB,IAA0B;AAJrB;AADuE,CAAtF","sourcesContent":["Prism.languages.aspnet = Prism.languages.extend('markup', {\n\t'page-directive': {\n\t\tpattern: /<%\\s*@.*%>/i,\n\t\talias: 'tag',\n\t\tinside: {\n\t\t\t'page-directive': {\n\t\t\t\tpattern: /<%\\s*@\\s*(?:Assembly|Control|Implements|Import|Master(?:Type)?|OutputCache|Page|PreviousPageType|Reference|Register)?|%>/i,\n\t\t\t\talias: 'tag'\n\t\t\t},\n\t\t\trest: Prism.languages.markup.tag.inside\n\t\t}\n\t},\n\t'directive': {\n\t\tpattern: /<%.*%>/i,\n\t\talias: 'tag',\n\t\tinside: {\n\t\t\t'directive': {\n\t\t\t\tpattern: /<%\\s*?[$=%#:]{0,2}|%>/i,\n\t\t\t\talias: 'tag'\n\t\t\t},\n\t\t\trest: Prism.languages.csharp\n\t\t}\n\t}\n});\n// Regexp copied from prism-markup, with a negative look-ahead added\nPrism.languages.aspnet.tag.pattern = /<(?!%)\\/?[^\\s>\\/]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i;\n\n// match directives of attribute value foo=\"<% Bar %>\"\nPrism.languages.insertBefore('inside', 'punctuation', {\n\t'directive': Prism.languages.aspnet['directive']\n}, Prism.languages.aspnet.tag.inside['attr-value']);\n\nPrism.languages.insertBefore('aspnet', 'comment', {\n\t'asp-comment': {\n\t\tpattern: /<%--[\\s\\S]*?--%>/,\n\t\talias: ['asp', 'comment']\n\t}\n});\n\n// script runat=\"server\" contains csharp, not javascript\nPrism.languages.insertBefore('aspnet', Prism.languages.javascript ? 'script' : 'tag', {\n\t'asp-script': {\n\t\tpattern: /(<script(?=.*runat=['\"]?server\\b)[^>]*>)[\\s\\S]*?(?=<\\/script>)/i,\n\t\tlookbehind: true,\n\t\talias: ['asp', 'script'],\n\t\tinside: Prism.languages.csharp || {}\n\t}\n});\n"]},"metadata":{},"sourceType":"script"}