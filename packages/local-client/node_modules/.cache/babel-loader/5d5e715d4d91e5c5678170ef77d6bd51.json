{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/gauravrawal/gaurav/udemy/jbook/src/components/resizable.tsx\",\n    _s = $RefreshSig$();\n\nimport \"./resizable.css\";\nimport { useEffect, useState } from \"react\";\nimport { ResizableBox } from \"react-resizable\";\n\nconst Resizable = ({\n  direction,\n  children\n}) => {\n  _s();\n\n  let resizableProps;\n  const [innerHeight, setInnerHeight] = useState(window.innerHeight);\n  const [innerWidth, setInnerWidth] = useState(window.innerWidth);\n  useEffect(() => {\n    const listener = () => {\n      console.log(window.innerWidth, window.innerHeight);\n    };\n\n    window.addEventListener(\"resize\", listener);\n    return () => {\n      window.removeEventListener(\"resize\", listener);\n    };\n  });\n\n  if (direction === \"horizontal\") {\n    resizableProps = {\n      className: \"resize-horizontal\",\n      height: Infinity,\n      width: window.innerWidth * 0.75,\n      resizeHandles: [\"e\"],\n      maxConstraints: [window.innerWidth * 0.75, Infinity],\n      minConstraints: [window.innerWidth * 0.2, Infinity]\n    };\n  } else {\n    resizableProps = {\n      height: 300,\n      width: Infinity,\n      resizeHandles: [\"s\"],\n      maxConstraints: [Infinity, window.innerHeight * 0.9],\n      minConstraints: [Infinity, 24]\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(ResizableBox, { ...resizableProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Resizable, \"pP7Dsp6ebnNv2hiUMMicRYhA838=\");\n\n_c = Resizable;\nexport default Resizable;\n\nvar _c;\n\n$RefreshReg$(_c, \"Resizable\");","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/jbook/src/components/resizable.tsx"],"names":["useEffect","useState","ResizableBox","Resizable","direction","children","resizableProps","innerHeight","setInnerHeight","window","innerWidth","setInnerWidth","listener","console","log","addEventListener","removeEventListener","className","height","Infinity","width","resizeHandles","maxConstraints","minConstraints"],"mappings":";;;;;AAAA,OAAO,iBAAP;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,YAAT,QAAgD,iBAAhD;;AAMA,MAAMC,SAAmC,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA6B;AAAA;;AACvE,MAAIC,cAAJ;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAACQ,MAAM,CAACF,WAAR,CAA9C;AACA,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAACQ,MAAM,CAACC,UAAR,CAA5C;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,QAAQ,GAAG,MAAM;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACC,UAAnB,EAA+BD,MAAM,CAACF,WAAtC;AACD,KAFD;;AAGAE,IAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkCH,QAAlC;AAEA,WAAO,MAAM;AACXH,MAAAA,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAqCJ,QAArC;AACD,KAFD;AAGD,GATQ,CAAT;;AAWA,MAAIR,SAAS,KAAK,YAAlB,EAAgC;AAC9BE,IAAAA,cAAc,GAAG;AACfW,MAAAA,SAAS,EAAE,mBADI;AAEfC,MAAAA,MAAM,EAAEC,QAFO;AAGfC,MAAAA,KAAK,EAAEX,MAAM,CAACC,UAAP,GAAoB,IAHZ;AAIfW,MAAAA,aAAa,EAAE,CAAC,GAAD,CAJA;AAKfC,MAAAA,cAAc,EAAE,CAACb,MAAM,CAACC,UAAP,GAAoB,IAArB,EAA2BS,QAA3B,CALD;AAMfI,MAAAA,cAAc,EAAE,CAACd,MAAM,CAACC,UAAP,GAAoB,GAArB,EAA0BS,QAA1B;AAND,KAAjB;AAQD,GATD,MASO;AACLb,IAAAA,cAAc,GAAG;AACfY,MAAAA,MAAM,EAAE,GADO;AAEfE,MAAAA,KAAK,EAAED,QAFQ;AAGfE,MAAAA,aAAa,EAAE,CAAC,GAAD,CAHA;AAIfC,MAAAA,cAAc,EAAE,CAACH,QAAD,EAAWV,MAAM,CAACF,WAAP,GAAqB,GAAhC,CAJD;AAKfgB,MAAAA,cAAc,EAAE,CAACJ,QAAD,EAAW,EAAX;AALD,KAAjB;AAOD;;AACD,sBAAO,QAAC,YAAD,OAAkBb,cAAlB;AAAA,cAAmCD;AAAnC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAnCD;;GAAMF,S;;KAAAA,S;AAqCN,eAAeA,SAAf","sourcesContent":["import \"./resizable.css\";\nimport { useEffect, useState } from \"react\";\nimport { ResizableBox, ResizableBoxProps } from \"react-resizable\";\n\ninterface ResizableProps {\n  direction: \"horizontal\" | \"vertical\";\n}\n\nconst Resizable: React.FC<ResizableProps> = ({ direction, children }) => {\n  let resizableProps: ResizableBoxProps;\n  const [innerHeight, setInnerHeight] = useState(window.innerHeight);\n  const [innerWidth, setInnerWidth] = useState(window.innerWidth);\n\n  useEffect(() => {\n    const listener = () => {\n      console.log(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener(\"resize\", listener);\n\n    return () => {\n      window.removeEventListener(\"resize\", listener);\n    };\n  });\n\n  if (direction === \"horizontal\") {\n    resizableProps = {\n      className: \"resize-horizontal\",\n      height: Infinity,\n      width: window.innerWidth * 0.75,\n      resizeHandles: [\"e\"],\n      maxConstraints: [window.innerWidth * 0.75, Infinity],\n      minConstraints: [window.innerWidth * 0.2, Infinity],\n    };\n  } else {\n    resizableProps = {\n      height: 300,\n      width: Infinity,\n      resizeHandles: [\"s\"],\n      maxConstraints: [Infinity, window.innerHeight * 0.9],\n      minConstraints: [Infinity, 24],\n    };\n  }\n  return <ResizableBox {...resizableProps}>{children}</ResizableBox>;\n};\n\nexport default Resizable;\n"]},"metadata":{},"sourceType":"module"}