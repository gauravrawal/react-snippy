{"ast":null,"code":"!function (e) {\n  for (var n = '\\\\((?:[^();\"#\\\\\\\\]|\\\\\\\\[^]|;.*(?!.)|\"(?:[^\"\\\\\\\\]|\\\\\\\\.)*\"|#(?:\\\\{(?:(?!#\\\\})[^])*#\\\\}|[^{])|<expr>)*\\\\)', i = 0; i < 5; i++) n = n.replace(/<expr>/g, function () {\n    return n;\n  });\n\n  n = n.replace(/<expr>/g, \"[^\\\\s\\\\S]\");\n  var d = e.languages.lilypond = {\n    comment: /%(?:(?!\\{).*|\\{[\\s\\S]*?%\\})/,\n    \"embedded-scheme\": {\n      pattern: RegExp('(^|[=\\\\s])#(?:\"(?:[^\"\\\\\\\\]|\\\\\\\\.)*\"|[^\\\\s()\"]*(?:[^\\\\s()]|<expr>))'.replace(/<expr>/g, function () {\n        return n;\n      }), \"m\"),\n      lookbehind: !0,\n      greedy: !0,\n      inside: {\n        scheme: {\n          pattern: /^(#)[\\s\\S]+$/,\n          lookbehind: !0,\n          alias: \"language-scheme\",\n          inside: {\n            \"embedded-lilypond\": {\n              pattern: /#\\{[\\s\\S]*?#\\}/,\n              greedy: !0,\n              inside: {\n                punctuation: /^#\\{|#\\}$/,\n                lilypond: {\n                  pattern: /[\\s\\S]+/,\n                  alias: \"language-lilypond\",\n                  inside: null\n                }\n              }\n            },\n            rest: e.languages.scheme\n          }\n        },\n        punctuation: /#/\n      }\n    },\n    string: {\n      pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n      greedy: !0\n    },\n    \"class-name\": {\n      pattern: /(\\\\new\\s+)[\\w-]+/,\n      lookbehind: !0\n    },\n    keyword: {\n      pattern: /\\\\[a-z][-\\w]*/i,\n      inside: {\n        punctuation: /^\\\\/\n      }\n    },\n    operator: /[=|]|<<|>>/,\n    punctuation: {\n      pattern: /(^|[a-z\\d])(?:'+|,+|[_^]?-[_^]?(?:[-+^!>._]|(?=\\d))|[_^]\\.?|[.!])|[{}()[\\]<>^~]|\\\\[()[\\]<>\\\\!]|--|__/,\n      lookbehind: !0\n    },\n    number: /\\b\\d+(?:\\/\\d+)?\\b/\n  };\n  d[\"embedded-scheme\"].inside.scheme.inside[\"embedded-lilypond\"].inside.lilypond.inside = d, e.languages.ly = d;\n}(Prism);","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/github/react-snippy/node_modules/prismjs/components/prism-lilypond.min.js"],"names":["e","n","i","replace","d","languages","lilypond","comment","pattern","RegExp","lookbehind","greedy","inside","scheme","alias","punctuation","rest","string","keyword","operator","number","ly","Prism"],"mappings":"AAAA,CAAC,UAASA,CAAT,EAAW;AAAC,OAAI,IAAIC,CAAC,GAAC,yGAAN,EAAgHC,CAAC,GAAC,CAAtH,EAAwHA,CAAC,GAAC,CAA1H,EAA4HA,CAAC,EAA7H,EAAgID,CAAC,GAACA,CAAC,CAACE,OAAF,CAAU,SAAV,EAAoB,YAAU;AAAC,WAAOF,CAAP;AAAS,GAAxC,CAAF;;AAA4CA,EAAAA,CAAC,GAACA,CAAC,CAACE,OAAF,CAAU,SAAV,EAAoB,WAApB,CAAF;AAAmC,MAAIC,CAAC,GAACJ,CAAC,CAACK,SAAF,CAAYC,QAAZ,GAAqB;AAACC,IAAAA,OAAO,EAAC,6BAAT;AAAuC,uBAAkB;AAACC,MAAAA,OAAO,EAACC,MAAM,CAAC,qEAAqEN,OAArE,CAA6E,SAA7E,EAAuF,YAAU;AAAC,eAAOF,CAAP;AAAS,OAA3G,CAAD,EAA8G,GAA9G,CAAf;AAAkIS,MAAAA,UAAU,EAAC,CAAC,CAA9I;AAAgJC,MAAAA,MAAM,EAAC,CAAC,CAAxJ;AAA0JC,MAAAA,MAAM,EAAC;AAACC,QAAAA,MAAM,EAAC;AAACL,UAAAA,OAAO,EAAC,cAAT;AAAwBE,UAAAA,UAAU,EAAC,CAAC,CAApC;AAAsCI,UAAAA,KAAK,EAAC,iBAA5C;AAA8DF,UAAAA,MAAM,EAAC;AAAC,iCAAoB;AAACJ,cAAAA,OAAO,EAAC,gBAAT;AAA0BG,cAAAA,MAAM,EAAC,CAAC,CAAlC;AAAoCC,cAAAA,MAAM,EAAC;AAACG,gBAAAA,WAAW,EAAC,WAAb;AAAyBT,gBAAAA,QAAQ,EAAC;AAACE,kBAAAA,OAAO,EAAC,SAAT;AAAmBM,kBAAAA,KAAK,EAAC,mBAAzB;AAA6CF,kBAAAA,MAAM,EAAC;AAApD;AAAlC;AAA3C,aAArB;AAA8JI,YAAAA,IAAI,EAAChB,CAAC,CAACK,SAAF,CAAYQ;AAA/K;AAArE,SAAR;AAAqQE,QAAAA,WAAW,EAAC;AAAjR;AAAjK,KAAzD;AAAifE,IAAAA,MAAM,EAAC;AAACT,MAAAA,OAAO,EAAC,mBAAT;AAA6BG,MAAAA,MAAM,EAAC,CAAC;AAArC,KAAxf;AAAgiB,kBAAa;AAACH,MAAAA,OAAO,EAAC,kBAAT;AAA4BE,MAAAA,UAAU,EAAC,CAAC;AAAxC,KAA7iB;AAAwlBQ,IAAAA,OAAO,EAAC;AAACV,MAAAA,OAAO,EAAC,gBAAT;AAA0BI,MAAAA,MAAM,EAAC;AAACG,QAAAA,WAAW,EAAC;AAAb;AAAjC,KAAhmB;AAAspBI,IAAAA,QAAQ,EAAC,YAA/pB;AAA4qBJ,IAAAA,WAAW,EAAC;AAACP,MAAAA,OAAO,EAAC,sGAAT;AAAgHE,MAAAA,UAAU,EAAC,CAAC;AAA5H,KAAxrB;AAAuzBU,IAAAA,MAAM,EAAC;AAA9zB,GAA3B;AAA82BhB,EAAAA,CAAC,CAAC,iBAAD,CAAD,CAAqBQ,MAArB,CAA4BC,MAA5B,CAAmCD,MAAnC,CAA0C,mBAA1C,EAA+DA,MAA/D,CAAsEN,QAAtE,CAA+EM,MAA/E,GAAsFR,CAAtF,EAAwFJ,CAAC,CAACK,SAAF,CAAYgB,EAAZ,GAAejB,CAAvG;AAAyG,CAAlrC,CAAmrCkB,KAAnrC,CAAD","sourcesContent":["!function(e){for(var n='\\\\((?:[^();\"#\\\\\\\\]|\\\\\\\\[^]|;.*(?!.)|\"(?:[^\"\\\\\\\\]|\\\\\\\\.)*\"|#(?:\\\\{(?:(?!#\\\\})[^])*#\\\\}|[^{])|<expr>)*\\\\)',i=0;i<5;i++)n=n.replace(/<expr>/g,function(){return n});n=n.replace(/<expr>/g,\"[^\\\\s\\\\S]\");var d=e.languages.lilypond={comment:/%(?:(?!\\{).*|\\{[\\s\\S]*?%\\})/,\"embedded-scheme\":{pattern:RegExp('(^|[=\\\\s])#(?:\"(?:[^\"\\\\\\\\]|\\\\\\\\.)*\"|[^\\\\s()\"]*(?:[^\\\\s()]|<expr>))'.replace(/<expr>/g,function(){return n}),\"m\"),lookbehind:!0,greedy:!0,inside:{scheme:{pattern:/^(#)[\\s\\S]+$/,lookbehind:!0,alias:\"language-scheme\",inside:{\"embedded-lilypond\":{pattern:/#\\{[\\s\\S]*?#\\}/,greedy:!0,inside:{punctuation:/^#\\{|#\\}$/,lilypond:{pattern:/[\\s\\S]+/,alias:\"language-lilypond\",inside:null}}},rest:e.languages.scheme}},punctuation:/#/}},string:{pattern:/\"(?:[^\"\\\\]|\\\\.)*\"/,greedy:!0},\"class-name\":{pattern:/(\\\\new\\s+)[\\w-]+/,lookbehind:!0},keyword:{pattern:/\\\\[a-z][-\\w]*/i,inside:{punctuation:/^\\\\/}},operator:/[=|]|<<|>>/,punctuation:{pattern:/(^|[a-z\\d])(?:'+|,+|[_^]?-[_^]?(?:[-+^!>._]|(?=\\d))|[_^]\\.?|[.!])|[{}()[\\]<>^~]|\\\\[()[\\]<>\\\\!]|--|__/,lookbehind:!0},number:/\\b\\d+(?:\\/\\d+)?\\b/};d[\"embedded-scheme\"].inside.scheme.inside[\"embedded-lilypond\"].inside.lilypond.inside=d,e.languages.ly=d}(Prism);"]},"metadata":{},"sourceType":"script"}