{"ast":null,"code":"(function (Prism) {\n  var string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n  Prism.languages.css = {\n    'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n    'atrule': {\n      pattern: /@[\\w-](?:[^;{\\s]|\\s+(?![\\s{]))*(?:;|(?=\\s*\\{))/,\n      inside: {\n        'rule': /^@[\\w-]+/,\n        'selector-function-argument': {\n          pattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n          lookbehind: true,\n          alias: 'selector'\n        },\n        'keyword': {\n          pattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n          lookbehind: true\n        } // See rest below\n\n      }\n    },\n    'url': {\n      // https://drafts.csswg.org/css-values-3/#urls\n      pattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n      greedy: true,\n      inside: {\n        'function': /^url/i,\n        'punctuation': /^\\(|\\)$/,\n        'string': {\n          pattern: RegExp('^' + string.source + '$'),\n          alias: 'url'\n        }\n      }\n    },\n    'selector': {\n      pattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n      lookbehind: true\n    },\n    'string': {\n      pattern: string,\n      greedy: true\n    },\n    'property': {\n      pattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n      lookbehind: true\n    },\n    'important': /!important\\b/i,\n    'function': {\n      pattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n      lookbehind: true\n    },\n    'punctuation': /[(){};:,]/\n  };\n  Prism.languages.css['atrule'].inside.rest = Prism.languages.css;\n  var markup = Prism.languages.markup;\n\n  if (markup) {\n    markup.tag.addInlined('style', 'css');\n    markup.tag.addAttribute('style', 'css');\n  }\n})(Prism);","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/github/react-snippy/node_modules/prismjs/components/prism-css.js"],"names":["Prism","string","languages","css","pattern","inside","lookbehind","alias","RegExp","source","greedy","rest","markup","tag","addInlined","addAttribute"],"mappings":"AAAC,WAAUA,KAAV,EAAiB;AAEjB,MAAIC,MAAM,GAAG,6EAAb;AAEAD,EAAAA,KAAK,CAACE,SAAN,CAAgBC,GAAhB,GAAsB;AACrB,eAAW,kBADU;AAErB,cAAU;AACTC,MAAAA,OAAO,EAAE,gDADA;AAETC,MAAAA,MAAM,EAAE;AACP,gBAAQ,UADD;AAEP,sCAA8B;AAC7BD,UAAAA,OAAO,EAAE,2FADoB;AAE7BE,UAAAA,UAAU,EAAE,IAFiB;AAG7BC,UAAAA,KAAK,EAAE;AAHsB,SAFvB;AAOP,mBAAW;AACVH,UAAAA,OAAO,EAAE,wCADC;AAEVE,UAAAA,UAAU,EAAE;AAFF,SAPJ,CAWP;;AAXO;AAFC,KAFW;AAkBrB,WAAO;AACN;AACAF,MAAAA,OAAO,EAAEI,MAAM,CAAC,iBAAiBP,MAAM,CAACQ,MAAxB,GAAiC,GAAjC,GAAuC,8BAA8BA,MAArE,GAA8E,MAA/E,EAAuF,GAAvF,CAFT;AAGNC,MAAAA,MAAM,EAAE,IAHF;AAINL,MAAAA,MAAM,EAAE;AACP,oBAAY,OADL;AAEP,uBAAe,SAFR;AAGP,kBAAU;AACTD,UAAAA,OAAO,EAAEI,MAAM,CAAC,MAAMP,MAAM,CAACQ,MAAb,GAAsB,GAAvB,CADN;AAETF,UAAAA,KAAK,EAAE;AAFE;AAHH;AAJF,KAlBc;AA+BrB,gBAAY;AACXH,MAAAA,OAAO,EAAEI,MAAM,CAAC,uDAAuDP,MAAM,CAACQ,MAA9D,GAAuE,eAAxE,CADJ;AAEXH,MAAAA,UAAU,EAAE;AAFD,KA/BS;AAmCrB,cAAU;AACTF,MAAAA,OAAO,EAAEH,MADA;AAETS,MAAAA,MAAM,EAAE;AAFC,KAnCW;AAuCrB,gBAAY;AACXN,MAAAA,OAAO,EAAE,mFADE;AAEXE,MAAAA,UAAU,EAAE;AAFD,KAvCS;AA2CrB,iBAAa,eA3CQ;AA4CrB,gBAAY;AACXF,MAAAA,OAAO,EAAE,iCADE;AAEXE,MAAAA,UAAU,EAAE;AAFD,KA5CS;AAgDrB,mBAAe;AAhDM,GAAtB;AAmDAN,EAAAA,KAAK,CAACE,SAAN,CAAgBC,GAAhB,CAAoB,QAApB,EAA8BE,MAA9B,CAAqCM,IAArC,GAA4CX,KAAK,CAACE,SAAN,CAAgBC,GAA5D;AAEA,MAAIS,MAAM,GAAGZ,KAAK,CAACE,SAAN,CAAgBU,MAA7B;;AACA,MAAIA,MAAJ,EAAY;AACXA,IAAAA,MAAM,CAACC,GAAP,CAAWC,UAAX,CAAsB,OAAtB,EAA+B,KAA/B;AACAF,IAAAA,MAAM,CAACC,GAAP,CAAWE,YAAX,CAAwB,OAAxB,EAAiC,KAAjC;AACA;AAED,CA/DA,EA+DCf,KA/DD,CAAD","sourcesContent":["(function (Prism) {\n\n\tvar string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: /@[\\w-](?:[^;{\\s]|\\s+(?![\\s{]))*(?:;|(?=\\s*\\{))/,\n\t\t\tinside: {\n\t\t\t\t'rule': /^@[\\w-]+/,\n\t\t\t\t'selector-function-argument': {\n\t\t\t\t\tpattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'selector'\n\t\t\t\t},\n\t\t\t\t'keyword': {\n\t\t\t\t\tpattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'url': {\n\t\t\t// https://drafts.csswg.org/css-values-3/#urls\n\t\t\tpattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'function': /^url/i,\n\t\t\t\t'punctuation': /^\\(|\\)$/,\n\t\t\t\t'string': {\n\t\t\t\t\tpattern: RegExp('^' + string.source + '$'),\n\t\t\t\t\talias: 'url'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'selector': {\n\t\t\tpattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n\t\t\tlookbehind: true\n\t\t},\n\t\t'string': {\n\t\t\tpattern: string,\n\t\t\tgreedy: true\n\t\t},\n\t\t'property': {\n\t\t\tpattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'important': /!important\\b/i,\n\t\t'function': {\n\t\t\tpattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'punctuation': /[(){};:,]/\n\t};\n\n\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\n\tvar markup = Prism.languages.markup;\n\tif (markup) {\n\t\tmarkup.tag.addInlined('style', 'css');\n\t\tmarkup.tag.addAttribute('style', 'css');\n\t}\n\n}(Prism));\n"]},"metadata":{},"sourceType":"script"}