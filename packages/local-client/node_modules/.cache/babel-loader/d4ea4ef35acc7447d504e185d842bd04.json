{"ast":null,"code":"!function (h) {\n  function v(e, n) {\n    return \"___\" + e.toUpperCase() + n + \"___\";\n  }\n\n  Object.defineProperties(h.languages[\"markup-templating\"] = {}, {\n    buildPlaceholders: {\n      value: function (a, r, e, o) {\n        if (a.language === r) {\n          var c = a.tokenStack = [];\n          a.code = a.code.replace(e, function (e) {\n            if (\"function\" == typeof o && !o(e)) return e;\n\n            for (var n, t = c.length; -1 !== a.code.indexOf(n = v(r, t));) ++t;\n\n            return c[t] = e, n;\n          }), a.grammar = h.languages.markup;\n        }\n      }\n    },\n    tokenizePlaceholders: {\n      value: function (p, k) {\n        if (p.language === k && p.tokenStack) {\n          p.grammar = h.languages[k];\n          var m = 0,\n              d = Object.keys(p.tokenStack);\n          !function e(n) {\n            for (var t = 0; t < n.length && !(m >= d.length); t++) {\n              var a = n[t];\n\n              if (\"string\" == typeof a || a.content && \"string\" == typeof a.content) {\n                var r = d[m],\n                    o = p.tokenStack[r],\n                    c = \"string\" == typeof a ? a : a.content,\n                    i = v(k, r),\n                    u = c.indexOf(i);\n\n                if (-1 < u) {\n                  ++m;\n                  var g = c.substring(0, u),\n                      l = new h.Token(k, h.tokenize(o, p.grammar), \"language-\" + k, o),\n                      s = c.substring(u + i.length),\n                      f = [];\n                  g && f.push.apply(f, e([g])), f.push(l), s && f.push.apply(f, e([s])), \"string\" == typeof a ? n.splice.apply(n, [t, 1].concat(f)) : a.content = f;\n                }\n              } else a.content && e(a.content);\n            }\n\n            return n;\n          }(p.tokens);\n        }\n      }\n    }\n  });\n}(Prism);","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/github/react-snippy/node_modules/prismjs/components/prism-markup-templating.min.js"],"names":["h","v","e","n","toUpperCase","Object","defineProperties","languages","buildPlaceholders","value","a","r","o","language","c","tokenStack","code","replace","t","length","indexOf","grammar","markup","tokenizePlaceholders","p","k","m","d","keys","content","i","u","g","substring","l","Token","tokenize","s","f","push","apply","splice","concat","tokens","Prism"],"mappings":"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","sourcesContent":["!function(h){function v(e,n){return\"___\"+e.toUpperCase()+n+\"___\"}Object.defineProperties(h.languages[\"markup-templating\"]={},{buildPlaceholders:{value:function(a,r,e,o){if(a.language===r){var c=a.tokenStack=[];a.code=a.code.replace(e,function(e){if(\"function\"==typeof o&&!o(e))return e;for(var n,t=c.length;-1!==a.code.indexOf(n=v(r,t));)++t;return c[t]=e,n}),a.grammar=h.languages.markup}}},tokenizePlaceholders:{value:function(p,k){if(p.language===k&&p.tokenStack){p.grammar=h.languages[k];var m=0,d=Object.keys(p.tokenStack);!function e(n){for(var t=0;t<n.length&&!(m>=d.length);t++){var a=n[t];if(\"string\"==typeof a||a.content&&\"string\"==typeof a.content){var r=d[m],o=p.tokenStack[r],c=\"string\"==typeof a?a:a.content,i=v(k,r),u=c.indexOf(i);if(-1<u){++m;var g=c.substring(0,u),l=new h.Token(k,h.tokenize(o,p.grammar),\"language-\"+k,o),s=c.substring(u+i.length),f=[];g&&f.push.apply(f,e([g])),f.push(l),s&&f.push.apply(f,e([s])),\"string\"==typeof a?n.splice.apply(n,[t,1].concat(f)):a.content=f}}else a.content&&e(a.content)}return n}(p.tokens)}}}})}(Prism);"]},"metadata":{},"sourceType":"script"}