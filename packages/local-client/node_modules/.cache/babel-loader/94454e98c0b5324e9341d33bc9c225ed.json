{"ast":null,"code":"Prism.languages.groovy = Prism.languages.extend(\"clike\", {\n  string: [{\n    pattern: /(\"\"\"|''')(?:[^\\\\]|\\\\[\\s\\S])*?\\1|\\$\\/(?:[^/$]|\\$(?:[/$]|(?![/$]))|\\/(?!\\$))*\\/\\$/,\n    greedy: !0\n  }, {\n    pattern: /([\"'/])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: !0\n  }],\n  keyword: /\\b(?:as|def|in|abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|native|new|package|private|protected|public|return|short|static|strictfp|super|switch|synchronized|this|throw|throws|trait|transient|try|void|volatile|while)\\b/,\n  number: /\\b(?:0b[01_]+|0x[\\da-f_]+(?:\\.[\\da-f_p\\-]+)?|[\\d_]+(?:\\.[\\d_]+)?(?:e[+-]?\\d+)?)[glidf]?\\b/i,\n  operator: {\n    pattern: /(^|[^.])(?:~|==?~?|\\?[.:]?|\\*(?:[.=]|\\*=?)?|\\.[@&]|\\.\\.<|\\.\\.(?!\\.)|-[-=>]?|\\+[+=]?|!=?|<(?:<=?|=>?)?|>(?:>>?=?|=)?|&[&=]?|\\|[|=]?|\\/=?|\\^=?|%=?)/,\n    lookbehind: !0\n  },\n  punctuation: /\\.+|[{}[\\];(),:$]/\n}), Prism.languages.insertBefore(\"groovy\", \"string\", {\n  shebang: {\n    pattern: /#!.+/,\n    alias: \"comment\"\n  }\n}), Prism.languages.insertBefore(\"groovy\", \"punctuation\", {\n  \"spock-block\": /\\b(?:setup|given|when|then|and|cleanup|expect|where):/\n}), Prism.languages.insertBefore(\"groovy\", \"function\", {\n  annotation: {\n    pattern: /(^|[^.])@\\w+/,\n    lookbehind: !0,\n    alias: \"punctuation\"\n  }\n}), Prism.hooks.add(\"wrap\", function (e) {\n  if (\"groovy\" === e.language && \"string\" === e.type) {\n    var t = e.content[0];\n\n    if (\"'\" != t) {\n      var n = /([^\\\\])(?:\\$(?:\\{.*?\\}|[\\w.]+))/;\n      \"$\" === t && (n = /([^\\$])(?:\\$(?:\\{.*?\\}|[\\w.]+))/), e.content = e.content.replace(/&lt;/g, \"<\").replace(/&amp;/g, \"&\"), e.content = Prism.highlight(e.content, {\n        expression: {\n          pattern: n,\n          lookbehind: !0,\n          inside: Prism.languages.groovy\n        }\n      }), e.classes.push(\"/\" === t ? \"regex\" : \"gstring\");\n    }\n  }\n});","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/jbook/node_modules/prismjs/components/prism-groovy.min.js"],"names":["Prism","languages","groovy","extend","string","pattern","greedy","keyword","number","operator","lookbehind","punctuation","insertBefore","shebang","alias","annotation","hooks","add","e","language","type","t","content","n","replace","highlight","expression","inside","classes","push"],"mappings":"AAAAA,KAAK,CAACC,SAAN,CAAgBC,MAAhB,GAAuBF,KAAK,CAACC,SAAN,CAAgBE,MAAhB,CAAuB,OAAvB,EAA+B;AAACC,EAAAA,MAAM,EAAC,CAAC;AAACC,IAAAA,OAAO,EAAC,iFAAT;AAA2FC,IAAAA,MAAM,EAAC,CAAC;AAAnG,GAAD,EAAuG;AAACD,IAAAA,OAAO,EAAC,mCAAT;AAA6CC,IAAAA,MAAM,EAAC,CAAC;AAArD,GAAvG,CAAR;AAAwKC,EAAAA,OAAO,EAAC,4WAAhL;AAA6hBC,EAAAA,MAAM,EAAC,4FAApiB;AAAioBC,EAAAA,QAAQ,EAAC;AAACJ,IAAAA,OAAO,EAAC,mJAAT;AAA6JK,IAAAA,UAAU,EAAC,CAAC;AAAzK,GAA1oB;AAAszBC,EAAAA,WAAW,EAAC;AAAl0B,CAA/B,CAAvB,EAA84BX,KAAK,CAACC,SAAN,CAAgBW,YAAhB,CAA6B,QAA7B,EAAsC,QAAtC,EAA+C;AAACC,EAAAA,OAAO,EAAC;AAACR,IAAAA,OAAO,EAAC,MAAT;AAAgBS,IAAAA,KAAK,EAAC;AAAtB;AAAT,CAA/C,CAA94B,EAAy+Bd,KAAK,CAACC,SAAN,CAAgBW,YAAhB,CAA6B,QAA7B,EAAsC,aAAtC,EAAoD;AAAC,iBAAc;AAAf,CAApD,CAAz+B,EAAsmCZ,KAAK,CAACC,SAAN,CAAgBW,YAAhB,CAA6B,QAA7B,EAAsC,UAAtC,EAAiD;AAACG,EAAAA,UAAU,EAAC;AAACV,IAAAA,OAAO,EAAC,cAAT;AAAwBK,IAAAA,UAAU,EAAC,CAAC,CAApC;AAAsCI,IAAAA,KAAK,EAAC;AAA5C;AAAZ,CAAjD,CAAtmC,EAAguCd,KAAK,CAACgB,KAAN,CAAYC,GAAZ,CAAgB,MAAhB,EAAuB,UAASC,CAAT,EAAW;AAAC,MAAG,aAAWA,CAAC,CAACC,QAAb,IAAuB,aAAWD,CAAC,CAACE,IAAvC,EAA4C;AAAC,QAAIC,CAAC,GAACH,CAAC,CAACI,OAAF,CAAU,CAAV,CAAN;;AAAmB,QAAG,OAAKD,CAAR,EAAU;AAAC,UAAIE,CAAC,GAAC,iCAAN;AAAwC,cAAMF,CAAN,KAAUE,CAAC,GAAC,iCAAZ,GAA+CL,CAAC,CAACI,OAAF,GAAUJ,CAAC,CAACI,OAAF,CAAUE,OAAV,CAAkB,OAAlB,EAA0B,GAA1B,EAA+BA,OAA/B,CAAuC,QAAvC,EAAgD,GAAhD,CAAzD,EAA8GN,CAAC,CAACI,OAAF,GAAUtB,KAAK,CAACyB,SAAN,CAAgBP,CAAC,CAACI,OAAlB,EAA0B;AAACI,QAAAA,UAAU,EAAC;AAACrB,UAAAA,OAAO,EAACkB,CAAT;AAAWb,UAAAA,UAAU,EAAC,CAAC,CAAvB;AAAyBiB,UAAAA,MAAM,EAAC3B,KAAK,CAACC,SAAN,CAAgBC;AAAhD;AAAZ,OAA1B,CAAxH,EAAwNgB,CAAC,CAACU,OAAF,CAAUC,IAAV,CAAe,QAAMR,CAAN,GAAQ,OAAR,GAAgB,SAA/B,CAAxN;AAAkQ;AAAC;AAAC,CAA1Z,CAAhuC","sourcesContent":["Prism.languages.groovy=Prism.languages.extend(\"clike\",{string:[{pattern:/(\"\"\"|''')(?:[^\\\\]|\\\\[\\s\\S])*?\\1|\\$\\/(?:[^/$]|\\$(?:[/$]|(?![/$]))|\\/(?!\\$))*\\/\\$/,greedy:!0},{pattern:/([\"'/])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0}],keyword:/\\b(?:as|def|in|abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|native|new|package|private|protected|public|return|short|static|strictfp|super|switch|synchronized|this|throw|throws|trait|transient|try|void|volatile|while)\\b/,number:/\\b(?:0b[01_]+|0x[\\da-f_]+(?:\\.[\\da-f_p\\-]+)?|[\\d_]+(?:\\.[\\d_]+)?(?:e[+-]?\\d+)?)[glidf]?\\b/i,operator:{pattern:/(^|[^.])(?:~|==?~?|\\?[.:]?|\\*(?:[.=]|\\*=?)?|\\.[@&]|\\.\\.<|\\.\\.(?!\\.)|-[-=>]?|\\+[+=]?|!=?|<(?:<=?|=>?)?|>(?:>>?=?|=)?|&[&=]?|\\|[|=]?|\\/=?|\\^=?|%=?)/,lookbehind:!0},punctuation:/\\.+|[{}[\\];(),:$]/}),Prism.languages.insertBefore(\"groovy\",\"string\",{shebang:{pattern:/#!.+/,alias:\"comment\"}}),Prism.languages.insertBefore(\"groovy\",\"punctuation\",{\"spock-block\":/\\b(?:setup|given|when|then|and|cleanup|expect|where):/}),Prism.languages.insertBefore(\"groovy\",\"function\",{annotation:{pattern:/(^|[^.])@\\w+/,lookbehind:!0,alias:\"punctuation\"}}),Prism.hooks.add(\"wrap\",function(e){if(\"groovy\"===e.language&&\"string\"===e.type){var t=e.content[0];if(\"'\"!=t){var n=/([^\\\\])(?:\\$(?:\\{.*?\\}|[\\w.]+))/;\"$\"===t&&(n=/([^\\$])(?:\\$(?:\\{.*?\\}|[\\w.]+))/),e.content=e.content.replace(/&lt;/g,\"<\").replace(/&amp;/g,\"&\"),e.content=Prism.highlight(e.content,{expression:{pattern:n,lookbehind:!0,inside:Prism.languages.groovy}}),e.classes.push(\"/\"===t?\"regex\":\"gstring\")}}});"]},"metadata":{},"sourceType":"script"}