{"ast":null,"code":"module.exports = flow;\n\nvar repeat = require('repeat-string');\n\nfunction flow(parent, context) {\n  var children = parent.children || [];\n  var results = [];\n  var index = -1;\n  var child;\n\n  while (++index < children.length) {\n    child = children[index];\n    results.push(context.handle(child, parent, context, {\n      before: '\\n',\n      after: '\\n'\n    }));\n\n    if (index + 1 < children.length) {\n      results.push(between(child, children[index + 1]));\n    }\n  }\n\n  return results.join('');\n\n  function between(left, right) {\n    var index = -1;\n    var result;\n\n    while (++index < context.join.length) {\n      result = context.join[index](left, right, parent, context);\n\n      if (result === true || result === 1) {\n        break;\n      }\n\n      if (typeof result === 'number') {\n        return repeat('\\n', 1 + Number(result));\n      }\n\n      if (result === false) {\n        return '\\n\\n<!---->\\n\\n';\n      }\n    }\n\n    return '\\n\\n';\n  }\n}","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/github/react-snippy/node_modules/mdast-util-to-markdown/lib/util/container-flow.js"],"names":["module","exports","flow","repeat","require","parent","context","children","results","index","child","length","push","handle","before","after","between","join","left","right","result","Number"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiBC,IAAjB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,eAAD,CAApB;;AAEA,SAASF,IAAT,CAAcG,MAAd,EAAsBC,OAAtB,EAA+B;AAC7B,MAAIC,QAAQ,GAAGF,MAAM,CAACE,QAAP,IAAmB,EAAlC;AACA,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,KAAK,GAAG,CAAC,CAAb;AACA,MAAIC,KAAJ;;AAEA,SAAO,EAAED,KAAF,GAAUF,QAAQ,CAACI,MAA1B,EAAkC;AAChCD,IAAAA,KAAK,GAAGH,QAAQ,CAACE,KAAD,CAAhB;AAEAD,IAAAA,OAAO,CAACI,IAAR,CACEN,OAAO,CAACO,MAAR,CAAeH,KAAf,EAAsBL,MAAtB,EAA8BC,OAA9B,EAAuC;AAACQ,MAAAA,MAAM,EAAE,IAAT;AAAeC,MAAAA,KAAK,EAAE;AAAtB,KAAvC,CADF;;AAIA,QAAIN,KAAK,GAAG,CAAR,GAAYF,QAAQ,CAACI,MAAzB,EAAiC;AAC/BH,MAAAA,OAAO,CAACI,IAAR,CAAaI,OAAO,CAACN,KAAD,EAAQH,QAAQ,CAACE,KAAK,GAAG,CAAT,CAAhB,CAApB;AACD;AACF;;AAED,SAAOD,OAAO,CAACS,IAAR,CAAa,EAAb,CAAP;;AAEA,WAASD,OAAT,CAAiBE,IAAjB,EAAuBC,KAAvB,EAA8B;AAC5B,QAAIV,KAAK,GAAG,CAAC,CAAb;AACA,QAAIW,MAAJ;;AAEA,WAAO,EAAEX,KAAF,GAAUH,OAAO,CAACW,IAAR,CAAaN,MAA9B,EAAsC;AACpCS,MAAAA,MAAM,GAAGd,OAAO,CAACW,IAAR,CAAaR,KAAb,EAAoBS,IAApB,EAA0BC,KAA1B,EAAiCd,MAAjC,EAAyCC,OAAzC,CAAT;;AAEA,UAAIc,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,CAAlC,EAAqC;AACnC;AACD;;AAED,UAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgC;AAC9B,eAAOjB,MAAM,CAAC,IAAD,EAAO,IAAIkB,MAAM,CAACD,MAAD,CAAjB,CAAb;AACD;;AAED,UAAIA,MAAM,KAAK,KAAf,EAAsB;AACpB,eAAO,iBAAP;AACD;AACF;;AAED,WAAO,MAAP;AACD;AACF","sourcesContent":["module.exports = flow\n\nvar repeat = require('repeat-string')\n\nfunction flow(parent, context) {\n  var children = parent.children || []\n  var results = []\n  var index = -1\n  var child\n\n  while (++index < children.length) {\n    child = children[index]\n\n    results.push(\n      context.handle(child, parent, context, {before: '\\n', after: '\\n'})\n    )\n\n    if (index + 1 < children.length) {\n      results.push(between(child, children[index + 1]))\n    }\n  }\n\n  return results.join('')\n\n  function between(left, right) {\n    var index = -1\n    var result\n\n    while (++index < context.join.length) {\n      result = context.join[index](left, right, parent, context)\n\n      if (result === true || result === 1) {\n        break\n      }\n\n      if (typeof result === 'number') {\n        return repeat('\\n', 1 + Number(result))\n      }\n\n      if (result === false) {\n        return '\\n\\n<!---->\\n\\n'\n      }\n    }\n\n    return '\\n\\n'\n  }\n}\n"]},"metadata":{},"sourceType":"script"}