{"ast":null,"code":"Prism.languages.aql = {\n  comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n  property: {\n    pattern: /([{,]\\s*)(?:(?!\\d)\\w+|([\"'´`])(?:(?!\\2)[^\\\\\\r\\n]|\\\\.)*\\2)(?=\\s*:)/,\n    lookbehind: !0,\n    greedy: !0\n  },\n  string: {\n    pattern: /([\"'´`])(?:(?!\\1)[^\\\\\\r\\n]|\\\\.)*\\1/,\n    greedy: !0\n  },\n  variable: /@@?\\w+/,\n  keyword: [{\n    pattern: /(\\bWITH\\s+)COUNT(?=\\s+INTO\\b)/i,\n    lookbehind: !0\n  }, /\\b(?:AGGREGATE|ALL|AND|ANY|ASC|COLLECT|DESC|DISTINCT|FILTER|FOR|GRAPH|IN|INBOUND|INSERT|INTO|K_PATHS|K_SHORTEST_PATHS|LET|LIKE|LIMIT|NONE|NOT|NULL|OR|OUTBOUND|REMOVE|REPLACE|RETURN|SHORTEST_PATH|SORT|UPDATE|UPSERT|WINDOW|WITH)\\b/i, {\n    pattern: /(^|[^\\w.[])(?:KEEP|PRUNE|SEARCH|TO)\\b/i,\n    lookbehind: !0\n  }, {\n    pattern: /(^|[^\\w.[])(?:CURRENT|NEW|OLD)\\b/,\n    lookbehind: !0\n  }, {\n    pattern: /\\bOPTIONS(?=\\s*\\{)/i\n  }],\n  function: /\\b(?!\\d)\\w+(?=\\s*\\()/,\n  boolean: /\\b(?:true|false)\\b/i,\n  range: {\n    pattern: /\\.\\./,\n    alias: \"operator\"\n  },\n  number: [/\\b0b[01]+/i, /\\b0x[0-9a-f]+/i, /(?:\\B\\.\\d+|\\b(?:0|[1-9]\\d*)(?:\\.\\d+)?)(?:e[+-]?\\d+)?/i],\n  operator: /\\*{2,}|[=!]~|[!=<>]=?|&&|\\|\\||[-+*/%]/,\n  punctuation: /::|[?.:,;()[\\]{}]/\n};","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/github/react-snippy/node_modules/prismjs/components/prism-aql.min.js"],"names":["Prism","languages","aql","comment","property","pattern","lookbehind","greedy","string","variable","keyword","function","boolean","range","alias","number","operator","punctuation"],"mappings":"AAAAA,KAAK,CAACC,SAAN,CAAgBC,GAAhB,GAAoB;AAACC,EAAAA,OAAO,EAAC,yBAAT;AAAmCC,EAAAA,QAAQ,EAAC;AAACC,IAAAA,OAAO,EAAC,mEAAT;AAA6EC,IAAAA,UAAU,EAAC,CAAC,CAAzF;AAA2FC,IAAAA,MAAM,EAAC,CAAC;AAAnG,GAA5C;AAAkJC,EAAAA,MAAM,EAAC;AAACH,IAAAA,OAAO,EAAC,oCAAT;AAA8CE,IAAAA,MAAM,EAAC,CAAC;AAAtD,GAAzJ;AAAkNE,EAAAA,QAAQ,EAAC,QAA3N;AAAoOC,EAAAA,OAAO,EAAC,CAAC;AAACL,IAAAA,OAAO,EAAC,gCAAT;AAA0CC,IAAAA,UAAU,EAAC,CAAC;AAAtD,GAAD,EAA0D,uOAA1D,EAAkS;AAACD,IAAAA,OAAO,EAAC,wCAAT;AAAkDC,IAAAA,UAAU,EAAC,CAAC;AAA9D,GAAlS,EAAmW;AAACD,IAAAA,OAAO,EAAC,kCAAT;AAA4CC,IAAAA,UAAU,EAAC,CAAC;AAAxD,GAAnW,EAA8Z;AAACD,IAAAA,OAAO,EAAC;AAAT,GAA9Z,CAA5O;AAA2qBM,EAAAA,QAAQ,EAAC,sBAAprB;AAA2sBC,EAAAA,OAAO,EAAC,qBAAntB;AAAyuBC,EAAAA,KAAK,EAAC;AAACR,IAAAA,OAAO,EAAC,MAAT;AAAgBS,IAAAA,KAAK,EAAC;AAAtB,GAA/uB;AAAixBC,EAAAA,MAAM,EAAC,CAAC,YAAD,EAAc,gBAAd,EAA+B,uDAA/B,CAAxxB;AAAg3BC,EAAAA,QAAQ,EAAC,uCAAz3B;AAAi6BC,EAAAA,WAAW,EAAC;AAA76B,CAApB","sourcesContent":["Prism.languages.aql={comment:/\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,property:{pattern:/([{,]\\s*)(?:(?!\\d)\\w+|([\"'´`])(?:(?!\\2)[^\\\\\\r\\n]|\\\\.)*\\2)(?=\\s*:)/,lookbehind:!0,greedy:!0},string:{pattern:/([\"'´`])(?:(?!\\1)[^\\\\\\r\\n]|\\\\.)*\\1/,greedy:!0},variable:/@@?\\w+/,keyword:[{pattern:/(\\bWITH\\s+)COUNT(?=\\s+INTO\\b)/i,lookbehind:!0},/\\b(?:AGGREGATE|ALL|AND|ANY|ASC|COLLECT|DESC|DISTINCT|FILTER|FOR|GRAPH|IN|INBOUND|INSERT|INTO|K_PATHS|K_SHORTEST_PATHS|LET|LIKE|LIMIT|NONE|NOT|NULL|OR|OUTBOUND|REMOVE|REPLACE|RETURN|SHORTEST_PATH|SORT|UPDATE|UPSERT|WINDOW|WITH)\\b/i,{pattern:/(^|[^\\w.[])(?:KEEP|PRUNE|SEARCH|TO)\\b/i,lookbehind:!0},{pattern:/(^|[^\\w.[])(?:CURRENT|NEW|OLD)\\b/,lookbehind:!0},{pattern:/\\bOPTIONS(?=\\s*\\{)/i}],function:/\\b(?!\\d)\\w+(?=\\s*\\()/,boolean:/\\b(?:true|false)\\b/i,range:{pattern:/\\.\\./,alias:\"operator\"},number:[/\\b0b[01]+/i,/\\b0x[0-9a-f]+/i,/(?:\\B\\.\\d+|\\b(?:0|[1-9]\\d*)(?:\\.\\d+)?)(?:e[+-]?\\d+)?/i],operator:/\\*{2,}|[=!]~|[!=<>]=?|&&|\\|\\||[-+*/%]/,punctuation:/::|[?.:,;()[\\]{}]/};"]},"metadata":{},"sourceType":"script"}