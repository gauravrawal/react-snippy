{"ast":null,"code":"Prism.languages.nevod = {\n  comment: /\\/\\/.*|(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$))/,\n  string: {\n    pattern: /(?:\"(?:\"\"|[^\"])*\"(?!\")|'(?:''|[^'])*'(?!'))!?\\*?/,\n    greedy: !0,\n    inside: {\n      \"string-attrs\": /!$|!\\*$|\\*$/\n    }\n  },\n  namespace: {\n    pattern: /(@namespace\\s+)[a-zA-Z0-9\\-.]+(?=\\s*\\{)/,\n    lookbehind: !0\n  },\n  pattern: {\n    pattern: /(@pattern\\s+)?#?[a-zA-Z0-9\\-.]+(?:\\s*\\(\\s*(?:~\\s*)?[a-zA-Z0-9\\-.]+\\s*(?:,\\s*(?:~\\s*)?[a-zA-Z0-9\\-.]*)*\\))?(?=\\s*=)/,\n    lookbehind: !0,\n    inside: {\n      \"pattern-name\": {\n        pattern: /^#?[a-zA-Z0-9\\-.]+/,\n        alias: \"class-name\"\n      },\n      fields: {\n        pattern: /\\(.*\\)/,\n        inside: {\n          \"field-name\": {\n            pattern: /[a-zA-Z0-9\\-.]+/,\n            alias: \"variable\"\n          },\n          punctuation: /[,()]/,\n          operator: {\n            pattern: /~/,\n            alias: \"field-hidden-mark\"\n          }\n        }\n      }\n    }\n  },\n  search: {\n    pattern: /(@search\\s+|#)[a-zA-Z0-9\\-.]+(?:\\.\\*)?(?=\\s*;)/,\n    alias: \"function\",\n    lookbehind: !0\n  },\n  keyword: /@(?:require|namespace|pattern|search|inside|outside|having|where)\\b/,\n  \"standard-pattern\": {\n    pattern: /\\b(?:Word|Punct|Symbol|Space|LineBreak|Start|End|Alpha|AlphaNum|Num|NumAlpha|Blank|WordBreak|Any)(?:\\([a-zA-Z0-9\\-.,\\s+]*\\))?/,\n    inside: {\n      \"standard-pattern-name\": {\n        pattern: /^[a-zA-Z0-9\\-.]+/,\n        alias: \"builtin\"\n      },\n      quantifier: {\n        pattern: /\\b\\d+(?:\\s*\\+|\\s*-\\s*\\d+)?(?!\\w)/,\n        alias: \"number\"\n      },\n      \"standard-pattern-attr\": {\n        pattern: /[a-zA-Z0-9\\-.]+/,\n        alias: \"builtin\"\n      },\n      punctuation: /[,()]/\n    }\n  },\n  quantifier: {\n    pattern: /\\b\\d+(?:\\s*\\+|\\s*-\\s*\\d+)?(?!\\w)/,\n    alias: \"number\"\n  },\n  operator: [{\n    pattern: /=/,\n    alias: \"pattern-def\"\n  }, {\n    pattern: /&/,\n    alias: \"conjunction\"\n  }, {\n    pattern: /~/,\n    alias: \"exception\"\n  }, {\n    pattern: /\\?/,\n    alias: \"optionality\"\n  }, {\n    pattern: /[[\\]]/,\n    alias: \"repetition\"\n  }, {\n    pattern: /[{}]/,\n    alias: \"variation\"\n  }, {\n    pattern: /[+_]/,\n    alias: \"sequence\"\n  }, {\n    pattern: /\\.{2,3}/,\n    alias: \"span\"\n  }],\n  \"field-capture\": [{\n    pattern: /([a-zA-Z0-9\\-.]+\\s*\\()\\s*[a-zA-Z0-9\\-.]+\\s*:\\s*[a-zA-Z0-9\\-.]+(?:\\s*,\\s*[a-zA-Z0-9\\-.]+\\s*:\\s*[a-zA-Z0-9\\-.]+)*(?=\\s*\\))/,\n    lookbehind: !0,\n    inside: {\n      \"field-name\": {\n        pattern: /[a-zA-Z0-9\\-.]+/,\n        alias: \"variable\"\n      },\n      colon: /:/\n    }\n  }, {\n    pattern: /[a-zA-Z0-9\\-.]+\\s*:/,\n    inside: {\n      \"field-name\": {\n        pattern: /[a-zA-Z0-9\\-.]+/,\n        alias: \"variable\"\n      },\n      colon: /:/\n    }\n  }],\n  punctuation: /[:;,()]/,\n  name: /[a-zA-Z0-9\\-.]+/\n};","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/jbook/node_modules/prismjs/components/prism-nevod.min.js"],"names":["Prism","languages","nevod","comment","string","pattern","greedy","inside","namespace","lookbehind","alias","fields","punctuation","operator","search","keyword","quantifier","colon","name"],"mappings":"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","sourcesContent":["Prism.languages.nevod={comment:/\\/\\/.*|(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$))/,string:{pattern:/(?:\"(?:\"\"|[^\"])*\"(?!\")|'(?:''|[^'])*'(?!'))!?\\*?/,greedy:!0,inside:{\"string-attrs\":/!$|!\\*$|\\*$/}},namespace:{pattern:/(@namespace\\s+)[a-zA-Z0-9\\-.]+(?=\\s*\\{)/,lookbehind:!0},pattern:{pattern:/(@pattern\\s+)?#?[a-zA-Z0-9\\-.]+(?:\\s*\\(\\s*(?:~\\s*)?[a-zA-Z0-9\\-.]+\\s*(?:,\\s*(?:~\\s*)?[a-zA-Z0-9\\-.]*)*\\))?(?=\\s*=)/,lookbehind:!0,inside:{\"pattern-name\":{pattern:/^#?[a-zA-Z0-9\\-.]+/,alias:\"class-name\"},fields:{pattern:/\\(.*\\)/,inside:{\"field-name\":{pattern:/[a-zA-Z0-9\\-.]+/,alias:\"variable\"},punctuation:/[,()]/,operator:{pattern:/~/,alias:\"field-hidden-mark\"}}}}},search:{pattern:/(@search\\s+|#)[a-zA-Z0-9\\-.]+(?:\\.\\*)?(?=\\s*;)/,alias:\"function\",lookbehind:!0},keyword:/@(?:require|namespace|pattern|search|inside|outside|having|where)\\b/,\"standard-pattern\":{pattern:/\\b(?:Word|Punct|Symbol|Space|LineBreak|Start|End|Alpha|AlphaNum|Num|NumAlpha|Blank|WordBreak|Any)(?:\\([a-zA-Z0-9\\-.,\\s+]*\\))?/,inside:{\"standard-pattern-name\":{pattern:/^[a-zA-Z0-9\\-.]+/,alias:\"builtin\"},quantifier:{pattern:/\\b\\d+(?:\\s*\\+|\\s*-\\s*\\d+)?(?!\\w)/,alias:\"number\"},\"standard-pattern-attr\":{pattern:/[a-zA-Z0-9\\-.]+/,alias:\"builtin\"},punctuation:/[,()]/}},quantifier:{pattern:/\\b\\d+(?:\\s*\\+|\\s*-\\s*\\d+)?(?!\\w)/,alias:\"number\"},operator:[{pattern:/=/,alias:\"pattern-def\"},{pattern:/&/,alias:\"conjunction\"},{pattern:/~/,alias:\"exception\"},{pattern:/\\?/,alias:\"optionality\"},{pattern:/[[\\]]/,alias:\"repetition\"},{pattern:/[{}]/,alias:\"variation\"},{pattern:/[+_]/,alias:\"sequence\"},{pattern:/\\.{2,3}/,alias:\"span\"}],\"field-capture\":[{pattern:/([a-zA-Z0-9\\-.]+\\s*\\()\\s*[a-zA-Z0-9\\-.]+\\s*:\\s*[a-zA-Z0-9\\-.]+(?:\\s*,\\s*[a-zA-Z0-9\\-.]+\\s*:\\s*[a-zA-Z0-9\\-.]+)*(?=\\s*\\))/,lookbehind:!0,inside:{\"field-name\":{pattern:/[a-zA-Z0-9\\-.]+/,alias:\"variable\"},colon:/:/}},{pattern:/[a-zA-Z0-9\\-.]+\\s*:/,inside:{\"field-name\":{pattern:/[a-zA-Z0-9\\-.]+/,alias:\"variable\"},colon:/:/}}],punctuation:/[:;,()]/,name:/[a-zA-Z0-9\\-.]+/};"]},"metadata":{},"sourceType":"script"}