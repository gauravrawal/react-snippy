{"ast":null,"code":"Prism.languages.fsharp = Prism.languages.extend(\"clike\", {\n  comment: [{\n    pattern: /(^|[^\\\\])\\(\\*(?!\\))[\\s\\S]*?\\*\\)/,\n    lookbehind: !0\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: !0\n  }],\n  string: {\n    pattern: /(?:\"\"\"[\\s\\S]*?\"\"\"|@\"(?:\"\"|[^\"])*\"|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")B?|'(?:[^\\\\']|\\\\(?:.|\\d{3}|x[a-fA-F\\d]{2}|u[a-fA-F\\d]{4}|U[a-fA-F\\d]{8}))'B?/,\n    greedy: !0\n  },\n  \"class-name\": {\n    pattern: /(\\b(?:exception|inherit|interface|new|of|type)\\s+|\\w\\s*:\\s*|\\s:\\??>\\s*)[.\\w]+\\b(?:\\s*(?:->|\\*)\\s*[.\\w]+\\b)*(?!\\s*[:.])/,\n    lookbehind: !0,\n    inside: {\n      operator: /->|\\*/,\n      punctuation: /\\./\n    }\n  },\n  keyword: /\\b(?:let|return|use|yield)(?:!\\B|\\b)|\\b(?:abstract|and|as|assert|base|begin|class|default|delegate|do|done|downcast|downto|elif|else|end|exception|extern|false|finally|for|fun|function|global|if|in|inherit|inline|interface|internal|lazy|match|member|module|mutable|namespace|new|not|null|of|open|or|override|private|public|rec|select|static|struct|then|to|true|try|type|upcast|val|void|when|while|with|asr|land|lor|lsl|lsr|lxor|mod|sig|atomic|break|checked|component|const|constraint|constructor|continue|eager|event|external|fixed|functor|include|method|mixin|object|parallel|process|protected|pure|sealed|tailcall|trait|virtual|volatile)\\b/,\n  number: [/\\b0x[\\da-fA-F]+(?:un|lf|LF)?\\b/, /\\b0b[01]+(?:y|uy)?\\b/, /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[fm]|e[+-]?\\d+)?\\b/i, /\\b\\d+(?:[IlLsy]|u[lsy]?|UL)?\\b/],\n  operator: /([<>~&^])\\1\\1|([*.:<>&])\\2|<-|->|[!=:]=|<?\\|{1,3}>?|\\??(?:<=|>=|<>|[-+*/%=<>])\\??|[!?^&]|~[+~-]|:>|:\\?>?/\n}), Prism.languages.insertBefore(\"fsharp\", \"keyword\", {\n  preprocessor: {\n    pattern: /(^[\\t ]*)#.*/m,\n    lookbehind: !0,\n    alias: \"property\",\n    inside: {\n      directive: {\n        pattern: /(^#)\\b(?:else|endif|if|light|line|nowarn)\\b/,\n        lookbehind: !0,\n        alias: \"keyword\"\n      }\n    }\n  }\n}), Prism.languages.insertBefore(\"fsharp\", \"punctuation\", {\n  \"computation-expression\": {\n    pattern: /\\b[_a-z]\\w*(?=\\s*\\{)/i,\n    alias: \"keyword\"\n  }\n}), Prism.languages.insertBefore(\"fsharp\", \"string\", {\n  annotation: {\n    pattern: /\\[<.+?>\\]/,\n    inside: {\n      punctuation: /^\\[<|>\\]$/,\n      \"class-name\": {\n        pattern: /^\\w+$|(^|;\\s*)[A-Z]\\w*(?=\\()/,\n        lookbehind: !0\n      },\n      \"annotation-content\": {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages.fsharp\n      }\n    }\n  }\n});","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/github/react-snippy/node_modules/prismjs/components/prism-fsharp.min.js"],"names":["Prism","languages","fsharp","extend","comment","pattern","lookbehind","string","greedy","inside","operator","punctuation","keyword","number","insertBefore","preprocessor","alias","directive","annotation"],"mappings":"AAAAA,KAAK,CAACC,SAAN,CAAgBC,MAAhB,GAAuBF,KAAK,CAACC,SAAN,CAAgBE,MAAhB,CAAuB,OAAvB,EAA+B;AAACC,EAAAA,OAAO,EAAC,CAAC;AAACC,IAAAA,OAAO,EAAC,iCAAT;AAA2CC,IAAAA,UAAU,EAAC,CAAC;AAAvD,GAAD,EAA2D;AAACD,IAAAA,OAAO,EAAC,kBAAT;AAA4BC,IAAAA,UAAU,EAAC,CAAC;AAAxC,GAA3D,CAAT;AAAgHC,EAAAA,MAAM,EAAC;AAACF,IAAAA,OAAO,EAAC,uIAAT;AAAiJG,IAAAA,MAAM,EAAC,CAAC;AAAzJ,GAAvH;AAAmR,gBAAa;AAACH,IAAAA,OAAO,EAAC,wHAAT;AAAkIC,IAAAA,UAAU,EAAC,CAAC,CAA9I;AAAgJG,IAAAA,MAAM,EAAC;AAACC,MAAAA,QAAQ,EAAC,OAAV;AAAkBC,MAAAA,WAAW,EAAC;AAA9B;AAAvJ,GAAhS;AAA4dC,EAAAA,OAAO,EAAC,moBAApe;AAAwmCC,EAAAA,MAAM,EAAC,CAAC,gCAAD,EAAkC,sBAAlC,EAAyD,mDAAzD,EAA6G,gCAA7G,CAA/mC;AAA8vCH,EAAAA,QAAQ,EAAC;AAAvwC,CAA/B,CAAvB,EAA06CV,KAAK,CAACC,SAAN,CAAgBa,YAAhB,CAA6B,QAA7B,EAAsC,SAAtC,EAAgD;AAACC,EAAAA,YAAY,EAAC;AAACV,IAAAA,OAAO,EAAC,eAAT;AAAyBC,IAAAA,UAAU,EAAC,CAAC,CAArC;AAAuCU,IAAAA,KAAK,EAAC,UAA7C;AAAwDP,IAAAA,MAAM,EAAC;AAACQ,MAAAA,SAAS,EAAC;AAACZ,QAAAA,OAAO,EAAC,6CAAT;AAAuDC,QAAAA,UAAU,EAAC,CAAC,CAAnE;AAAqEU,QAAAA,KAAK,EAAC;AAA3E;AAAX;AAA/D;AAAd,CAAhD,CAA16C,EAA4oDhB,KAAK,CAACC,SAAN,CAAgBa,YAAhB,CAA6B,QAA7B,EAAsC,aAAtC,EAAoD;AAAC,4BAAyB;AAACT,IAAAA,OAAO,EAAC,uBAAT;AAAiCW,IAAAA,KAAK,EAAC;AAAvC;AAA1B,CAApD,CAA5oD,EAA8wDhB,KAAK,CAACC,SAAN,CAAgBa,YAAhB,CAA6B,QAA7B,EAAsC,QAAtC,EAA+C;AAACI,EAAAA,UAAU,EAAC;AAACb,IAAAA,OAAO,EAAC,WAAT;AAAqBI,IAAAA,MAAM,EAAC;AAACE,MAAAA,WAAW,EAAC,WAAb;AAAyB,oBAAa;AAACN,QAAAA,OAAO,EAAC,8BAAT;AAAwCC,QAAAA,UAAU,EAAC,CAAC;AAApD,OAAtC;AAA6F,4BAAqB;AAACD,QAAAA,OAAO,EAAC,SAAT;AAAmBI,QAAAA,MAAM,EAACT,KAAK,CAACC,SAAN,CAAgBC;AAA1C;AAAlH;AAA5B;AAAZ,CAA/C,CAA9wD","sourcesContent":["Prism.languages.fsharp=Prism.languages.extend(\"clike\",{comment:[{pattern:/(^|[^\\\\])\\(\\*(?!\\))[\\s\\S]*?\\*\\)/,lookbehind:!0},{pattern:/(^|[^\\\\:])\\/\\/.*/,lookbehind:!0}],string:{pattern:/(?:\"\"\"[\\s\\S]*?\"\"\"|@\"(?:\"\"|[^\"])*\"|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")B?|'(?:[^\\\\']|\\\\(?:.|\\d{3}|x[a-fA-F\\d]{2}|u[a-fA-F\\d]{4}|U[a-fA-F\\d]{8}))'B?/,greedy:!0},\"class-name\":{pattern:/(\\b(?:exception|inherit|interface|new|of|type)\\s+|\\w\\s*:\\s*|\\s:\\??>\\s*)[.\\w]+\\b(?:\\s*(?:->|\\*)\\s*[.\\w]+\\b)*(?!\\s*[:.])/,lookbehind:!0,inside:{operator:/->|\\*/,punctuation:/\\./}},keyword:/\\b(?:let|return|use|yield)(?:!\\B|\\b)|\\b(?:abstract|and|as|assert|base|begin|class|default|delegate|do|done|downcast|downto|elif|else|end|exception|extern|false|finally|for|fun|function|global|if|in|inherit|inline|interface|internal|lazy|match|member|module|mutable|namespace|new|not|null|of|open|or|override|private|public|rec|select|static|struct|then|to|true|try|type|upcast|val|void|when|while|with|asr|land|lor|lsl|lsr|lxor|mod|sig|atomic|break|checked|component|const|constraint|constructor|continue|eager|event|external|fixed|functor|include|method|mixin|object|parallel|process|protected|pure|sealed|tailcall|trait|virtual|volatile)\\b/,number:[/\\b0x[\\da-fA-F]+(?:un|lf|LF)?\\b/,/\\b0b[01]+(?:y|uy)?\\b/,/(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[fm]|e[+-]?\\d+)?\\b/i,/\\b\\d+(?:[IlLsy]|u[lsy]?|UL)?\\b/],operator:/([<>~&^])\\1\\1|([*.:<>&])\\2|<-|->|[!=:]=|<?\\|{1,3}>?|\\??(?:<=|>=|<>|[-+*/%=<>])\\??|[!?^&]|~[+~-]|:>|:\\?>?/}),Prism.languages.insertBefore(\"fsharp\",\"keyword\",{preprocessor:{pattern:/(^[\\t ]*)#.*/m,lookbehind:!0,alias:\"property\",inside:{directive:{pattern:/(^#)\\b(?:else|endif|if|light|line|nowarn)\\b/,lookbehind:!0,alias:\"keyword\"}}}}),Prism.languages.insertBefore(\"fsharp\",\"punctuation\",{\"computation-expression\":{pattern:/\\b[_a-z]\\w*(?=\\s*\\{)/i,alias:\"keyword\"}}),Prism.languages.insertBefore(\"fsharp\",\"string\",{annotation:{pattern:/\\[<.+?>\\]/,inside:{punctuation:/^\\[<|>\\]$/,\"class-name\":{pattern:/^\\w+$|(^|;\\s*)[A-Z]\\w*(?=\\()/,lookbehind:!0},\"annotation-content\":{pattern:/[\\s\\S]+/,inside:Prism.languages.fsharp}}}});"]},"metadata":{},"sourceType":"script"}