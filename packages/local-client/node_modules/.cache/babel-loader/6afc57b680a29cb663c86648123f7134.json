{"ast":null,"code":"(function (Prism) {\n  var typescript = Prism.util.clone(Prism.languages.typescript);\n  Prism.languages.tsx = Prism.languages.extend('jsx', typescript); // This will prevent collisions between TSX tags and TS generic types.\n  // Idea by https://github.com/karlhorky\n  // Discussion: https://github.com/PrismJS/prism/issues/2594#issuecomment-710666928\n\n  var tag = Prism.languages.tsx.tag;\n  tag.pattern = RegExp(/(^|[^\\w$]|(?=<\\/))/.source + '(?:' + tag.pattern.source + ')', tag.pattern.flags);\n  tag.lookbehind = true;\n})(Prism);","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/jbook/node_modules/prismjs/components/prism-tsx.js"],"names":["Prism","typescript","util","clone","languages","tsx","extend","tag","pattern","RegExp","source","flags","lookbehind"],"mappings":"AAAC,WAAUA,KAAV,EAAiB;AACjB,MAAIC,UAAU,GAAGD,KAAK,CAACE,IAAN,CAAWC,KAAX,CAAiBH,KAAK,CAACI,SAAN,CAAgBH,UAAjC,CAAjB;AACAD,EAAAA,KAAK,CAACI,SAAN,CAAgBC,GAAhB,GAAsBL,KAAK,CAACI,SAAN,CAAgBE,MAAhB,CAAuB,KAAvB,EAA8BL,UAA9B,CAAtB,CAFiB,CAIjB;AACA;AACA;;AACA,MAAIM,GAAG,GAAGP,KAAK,CAACI,SAAN,CAAgBC,GAAhB,CAAoBE,GAA9B;AACAA,EAAAA,GAAG,CAACC,OAAJ,GAAcC,MAAM,CAAC,qBAAqBC,MAArB,GAA8B,KAA9B,GAAsCH,GAAG,CAACC,OAAJ,CAAYE,MAAlD,GAA2D,GAA5D,EAAiEH,GAAG,CAACC,OAAJ,CAAYG,KAA7E,CAApB;AACAJ,EAAAA,GAAG,CAACK,UAAJ,GAAiB,IAAjB;AACA,CAVA,EAUCZ,KAVD,CAAD","sourcesContent":["(function (Prism) {\n\tvar typescript = Prism.util.clone(Prism.languages.typescript);\n\tPrism.languages.tsx = Prism.languages.extend('jsx', typescript);\n\n\t// This will prevent collisions between TSX tags and TS generic types.\n\t// Idea by https://github.com/karlhorky\n\t// Discussion: https://github.com/PrismJS/prism/issues/2594#issuecomment-710666928\n\tvar tag = Prism.languages.tsx.tag;\n\ttag.pattern = RegExp(/(^|[^\\w$]|(?=<\\/))/.source + '(?:' + tag.pattern.source + ')', tag.pattern.flags);\n\ttag.lookbehind = true;\n}(Prism));\n"]},"metadata":{},"sourceType":"script"}