{"ast":null,"code":"Prism.languages.peoplecode = {\n  comment: RegExp([\"/\\\\*[^]*?\\\\*/\", \"\\\\bREM[^;]*;\", \"<\\\\*(?:[^<*]|\\\\*(?!>)|<(?!\\\\*)|<\\\\*(?:(?!\\\\*>)[^])*\\\\*>)*\\\\*>\", \"/\\\\+[^]*?\\\\+/\"].join(\"|\")),\n  string: {\n    pattern: /'(?:''|[^'\\r\\n])*'(?!')|\"(?:\"\"|[^\"\\r\\n])*\"(?!\")/,\n    greedy: !0\n  },\n  variable: /%\\w+/,\n  \"function-definition\": {\n    pattern: /((?:^|[^\\w-])(?:function|method)\\s+)\\w+/i,\n    lookbehind: !0,\n    alias: \"function\"\n  },\n  \"class-name\": {\n    pattern: /((?:^|[^-\\w])(?:as|catch|class|component|create|extends|global|implements|instance|local|of|property|returns)\\s+)\\w+(?::\\w+)*/i,\n    lookbehind: !0,\n    inside: {\n      punctuation: /:/\n    }\n  },\n  keyword: /\\b(?:abstract|alias|as|catch|class|component|constant|create|declare|else|end-(?:class|evaluate|for|function|get|if|method|set|try|while)|evaluate|extends|for|function|get|global|implements|import|instance|if|library|local|method|null|of|out|peopleCode|private|program|property|protected|readonly|ref|repeat|returns?|set|step|then|throw|to|try|until|value|when(?:-other)?|while)\\b/i,\n  \"operator-keyword\": {\n    pattern: /\\b(?:and|not|or)\\b/i,\n    alias: \"operator\"\n  },\n  function: /[_a-z]\\w*(?=\\s*\\()/i,\n  boolean: /\\b(?:false|true)\\b/i,\n  number: /\\b\\d+(?:\\.\\d+)?\\b/,\n  operator: /<>|[<>]=?|!=|\\*\\*|[-+*/|=@]/,\n  punctuation: /[:.;,()[\\]]/\n}, Prism.languages.pcode = Prism.languages.peoplecode;","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/github/react-snippy/node_modules/prismjs/components/prism-peoplecode.min.js"],"names":["Prism","languages","peoplecode","comment","RegExp","join","string","pattern","greedy","variable","lookbehind","alias","inside","punctuation","keyword","function","boolean","number","operator","pcode"],"mappings":"AAAAA,KAAK,CAACC,SAAN,CAAgBC,UAAhB,GAA2B;AAACC,EAAAA,OAAO,EAACC,MAAM,CAAC,CAAC,eAAD,EAAiB,cAAjB,EAAgC,+DAAhC,EAAgG,eAAhG,EAAiHC,IAAjH,CAAsH,GAAtH,CAAD,CAAf;AAA4IC,EAAAA,MAAM,EAAC;AAACC,IAAAA,OAAO,EAAC,iDAAT;AAA2DC,IAAAA,MAAM,EAAC,CAAC;AAAnE,GAAnJ;AAAyNC,EAAAA,QAAQ,EAAC,MAAlO;AAAyO,yBAAsB;AAACF,IAAAA,OAAO,EAAC,0CAAT;AAAoDG,IAAAA,UAAU,EAAC,CAAC,CAAhE;AAAkEC,IAAAA,KAAK,EAAC;AAAxE,GAA/P;AAAmV,gBAAa;AAACJ,IAAAA,OAAO,EAAC,gIAAT;AAA0IG,IAAAA,UAAU,EAAC,CAAC,CAAtJ;AAAwJE,IAAAA,MAAM,EAAC;AAACC,MAAAA,WAAW,EAAC;AAAb;AAA/J,GAAhW;AAAkhBC,EAAAA,OAAO,EAAC,+XAA1hB;AAA05B,sBAAmB;AAACP,IAAAA,OAAO,EAAC,qBAAT;AAA+BI,IAAAA,KAAK,EAAC;AAArC,GAA76B;AAA89BI,EAAAA,QAAQ,EAAC,qBAAv+B;AAA6/BC,EAAAA,OAAO,EAAC,qBAArgC;AAA2hCC,EAAAA,MAAM,EAAC,mBAAliC;AAAsjCC,EAAAA,QAAQ,EAAC,6BAA/jC;AAA6lCL,EAAAA,WAAW,EAAC;AAAzmC,CAA3B,EAAmpCb,KAAK,CAACC,SAAN,CAAgBkB,KAAhB,GAAsBnB,KAAK,CAACC,SAAN,CAAgBC,UAAzrC","sourcesContent":["Prism.languages.peoplecode={comment:RegExp([\"/\\\\*[^]*?\\\\*/\",\"\\\\bREM[^;]*;\",\"<\\\\*(?:[^<*]|\\\\*(?!>)|<(?!\\\\*)|<\\\\*(?:(?!\\\\*>)[^])*\\\\*>)*\\\\*>\",\"/\\\\+[^]*?\\\\+/\"].join(\"|\")),string:{pattern:/'(?:''|[^'\\r\\n])*'(?!')|\"(?:\"\"|[^\"\\r\\n])*\"(?!\")/,greedy:!0},variable:/%\\w+/,\"function-definition\":{pattern:/((?:^|[^\\w-])(?:function|method)\\s+)\\w+/i,lookbehind:!0,alias:\"function\"},\"class-name\":{pattern:/((?:^|[^-\\w])(?:as|catch|class|component|create|extends|global|implements|instance|local|of|property|returns)\\s+)\\w+(?::\\w+)*/i,lookbehind:!0,inside:{punctuation:/:/}},keyword:/\\b(?:abstract|alias|as|catch|class|component|constant|create|declare|else|end-(?:class|evaluate|for|function|get|if|method|set|try|while)|evaluate|extends|for|function|get|global|implements|import|instance|if|library|local|method|null|of|out|peopleCode|private|program|property|protected|readonly|ref|repeat|returns?|set|step|then|throw|to|try|until|value|when(?:-other)?|while)\\b/i,\"operator-keyword\":{pattern:/\\b(?:and|not|or)\\b/i,alias:\"operator\"},function:/[_a-z]\\w*(?=\\s*\\()/i,boolean:/\\b(?:false|true)\\b/i,number:/\\b\\d+(?:\\.\\d+)?\\b/,operator:/<>|[<>]=?|!=|\\*\\*|[-+*/|=@]/,punctuation:/[:.;,()[\\]]/},Prism.languages.pcode=Prism.languages.peoplecode;"]},"metadata":{},"sourceType":"script"}