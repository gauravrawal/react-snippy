{"ast":null,"code":"(function (Prism) {\n  var keywords = /\\b(?:ACT|ACTIFSUB|CARRAY|CASE|CLEARGIF|COA|COA_INT|CONSTANTS|CONTENT|CUR|EDITPANEL|EFFECT|EXT|FILE|FLUIDTEMPLATE|FORM|FRAME|FRAMESET|GIFBUILDER|GMENU|GMENU_FOLDOUT|GMENU_LAYERS|GP|HMENU|HRULER|HTML|IENV|IFSUB|IMAGE|IMGMENU|IMGMENUITEM|IMGTEXT|IMG_RESOURCE|INCLUDE_TYPOSCRIPT|JSMENU|JSMENUITEM|LLL|LOAD_REGISTER|NO|PAGE|RECORDS|RESTORE_REGISTER|TEMPLATE|TEXT|TMENU|TMENUITEM|TMENU_LAYERS|USER|USER_INT|_GIFBUILDER|global|globalString|globalVar)\\b/;\n  Prism.languages.typoscript = {\n    'comment': [{\n      // multiline comments /* */\n      pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n      lookbehind: true\n    }, {\n      // double-slash comments - ignored when backslashes or colon is found in front\n      // also ignored whenever directly after an equal-sign, because it would probably be an url without protocol\n      pattern: /(^|[^\\\\:= \\t]|(?:^|[^= \\t])[ \\t]+)\\/\\/.*/,\n      lookbehind: true,\n      greedy: true\n    }, {\n      // hash comments - ignored when leading quote is found for hex colors in strings\n      pattern: /(^|[^\"'])#.*/,\n      lookbehind: true,\n      greedy: true\n    }],\n    'function': [{\n      // old include style\n      pattern: /<INCLUDE_TYPOSCRIPT:\\s*source\\s*=\\s*(?:\"[^\"\\r\\n]*\"|'[^'\\r\\n]*')\\s*>/,\n      inside: {\n        'string': {\n          pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n          inside: {\n            'keyword': keywords\n          }\n        },\n        'keyword': {\n          pattern: /INCLUDE_TYPOSCRIPT/\n        }\n      }\n    }, {\n      // new include style\n      pattern: /@import\\s*(?:\"[^\"\\r\\n]*\"|'[^'\\r\\n]*')/,\n      inside: {\n        'string': /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/\n      }\n    }],\n    'string': {\n      pattern: /^([^=]*=[< ]?)(?:(?!\\]\\n).)*/,\n      lookbehind: true,\n      inside: {\n        'function': /\\{\\$.*\\}/,\n        // constants include\n        'keyword': keywords,\n        'number': /^[0-9]+$/,\n        'punctuation': /[,|:]/\n      }\n    },\n    'keyword': keywords,\n    'number': {\n      // special highlighting for indexes of arrays in tags\n      pattern: /\\b[0-9]+\\s*[.{=]/,\n      inside: {\n        'operator': /[.{=]/\n      }\n    },\n    'tag': {\n      pattern: /\\.?[-\\w\\\\]+\\.?/,\n      inside: {\n        'punctuation': /\\./\n      }\n    },\n    'punctuation': /[{}[\\];(),.:|]/,\n    'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/\n  };\n  Prism.languages.tsconfig = Prism.languages.typoscript;\n})(Prism);","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/github/react-snippy/node_modules/prismjs/components/prism-typoscript.js"],"names":["Prism","keywords","languages","typoscript","pattern","lookbehind","greedy","inside","tsconfig"],"mappings":"AAAC,WAAUA,KAAV,EAAiB;AAEjB,MAAIC,QAAQ,GAAG,+bAAf;AAEAD,EAAAA,KAAK,CAACE,SAAN,CAAgBC,UAAhB,GAA6B;AAC5B,eAAW,CACV;AACC;AACAC,MAAAA,OAAO,EAAE,iCAFV;AAGCC,MAAAA,UAAU,EAAE;AAHb,KADU,EAMV;AACC;AACA;AACAD,MAAAA,OAAO,EAAE,0CAHV;AAICC,MAAAA,UAAU,EAAE,IAJb;AAKCC,MAAAA,MAAM,EAAE;AALT,KANU,EAaV;AACC;AACAF,MAAAA,OAAO,EAAE,cAFV;AAGCC,MAAAA,UAAU,EAAE,IAHb;AAICC,MAAAA,MAAM,EAAE;AAJT,KAbU,CADiB;AAqB5B,gBAAY,CACX;AACC;AACAF,MAAAA,OAAO,EAAE,qEAFV;AAGCG,MAAAA,MAAM,EAAE;AACP,kBAAU;AACTH,UAAAA,OAAO,EAAE,yBADA;AAETG,UAAAA,MAAM,EAAE;AACP,uBAAWN;AADJ;AAFC,SADH;AAOP,mBAAW;AACVG,UAAAA,OAAO,EAAE;AADC;AAPJ;AAHT,KADW,EAgBX;AACC;AACAA,MAAAA,OAAO,EAAE,uCAFV;AAGCG,MAAAA,MAAM,EAAE;AACP,kBAAU;AADH;AAHT,KAhBW,CArBgB;AA6C5B,cAAU;AACTH,MAAAA,OAAO,EAAE,8BADA;AAETC,MAAAA,UAAU,EAAE,IAFH;AAGTE,MAAAA,MAAM,EAAE;AACP,oBAAY,UADL;AACiB;AACxB,mBAAWN,QAFJ;AAGP,kBAAU,UAHH;AAIP,uBAAe;AAJR;AAHC,KA7CkB;AAuD5B,eAAWA,QAvDiB;AAwD5B,cAAU;AACT;AACAG,MAAAA,OAAO,EAAE,kBAFA;AAGTG,MAAAA,MAAM,EAAE;AACP,oBAAY;AADL;AAHC,KAxDkB;AA+D5B,WAAO;AACNH,MAAAA,OAAO,EAAE,gBADH;AAENG,MAAAA,MAAM,EAAE;AACP,uBAAe;AADR;AAFF,KA/DqB;AAqE5B,mBAAe,gBArEa;AAsE5B,gBAAY;AAtEgB,GAA7B;AAyEAP,EAAAA,KAAK,CAACE,SAAN,CAAgBM,QAAhB,GAA2BR,KAAK,CAACE,SAAN,CAAgBC,UAA3C;AAEA,CA/EA,EA+ECH,KA/ED,CAAD","sourcesContent":["(function (Prism) {\n\n\tvar keywords = /\\b(?:ACT|ACTIFSUB|CARRAY|CASE|CLEARGIF|COA|COA_INT|CONSTANTS|CONTENT|CUR|EDITPANEL|EFFECT|EXT|FILE|FLUIDTEMPLATE|FORM|FRAME|FRAMESET|GIFBUILDER|GMENU|GMENU_FOLDOUT|GMENU_LAYERS|GP|HMENU|HRULER|HTML|IENV|IFSUB|IMAGE|IMGMENU|IMGMENUITEM|IMGTEXT|IMG_RESOURCE|INCLUDE_TYPOSCRIPT|JSMENU|JSMENUITEM|LLL|LOAD_REGISTER|NO|PAGE|RECORDS|RESTORE_REGISTER|TEMPLATE|TEXT|TMENU|TMENUITEM|TMENU_LAYERS|USER|USER_INT|_GIFBUILDER|global|globalString|globalVar)\\b/;\n\n\tPrism.languages.typoscript = {\n\t\t'comment': [\n\t\t\t{\n\t\t\t\t// multiline comments /* */\n\t\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\t// double-slash comments - ignored when backslashes or colon is found in front\n\t\t\t\t// also ignored whenever directly after an equal-sign, because it would probably be an url without protocol\n\t\t\t\tpattern: /(^|[^\\\\:= \\t]|(?:^|[^= \\t])[ \\t]+)\\/\\/.*/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t{\n\t\t\t\t// hash comments - ignored when leading quote is found for hex colors in strings\n\t\t\t\tpattern: /(^|[^\"'])#.*/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true\n\t\t\t}\n\t\t],\n\t\t'function': [\n\t\t\t{\n\t\t\t\t// old include style\n\t\t\t\tpattern: /<INCLUDE_TYPOSCRIPT:\\s*source\\s*=\\s*(?:\"[^\"\\r\\n]*\"|'[^'\\r\\n]*')\\s*>/,\n\t\t\t\tinside: {\n\t\t\t\t\t'string': {\n\t\t\t\t\t\tpattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t'keyword': keywords,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t'keyword': {\n\t\t\t\t\t\tpattern: /INCLUDE_TYPOSCRIPT/,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t// new include style\n\t\t\t\tpattern: /@import\\s*(?:\"[^\"\\r\\n]*\"|'[^'\\r\\n]*')/,\n\t\t\t\tinside: {\n\t\t\t\t\t'string': /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n\t\t\t\t},\n\t\t\t}\n\t\t],\n\t\t'string': {\n\t\t\tpattern: /^([^=]*=[< ]?)(?:(?!\\]\\n).)*/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'function': /\\{\\$.*\\}/, // constants include\n\t\t\t\t'keyword': keywords,\n\t\t\t\t'number': /^[0-9]+$/,\n\t\t\t\t'punctuation': /[,|:]/,\n\t\t\t}\n\t\t},\n\t\t'keyword': keywords,\n\t\t'number': {\n\t\t\t// special highlighting for indexes of arrays in tags\n\t\t\tpattern: /\\b[0-9]+\\s*[.{=]/,\n\t\t\tinside: {\n\t\t\t\t'operator': /[.{=]/,\n\t\t\t}\n\t\t},\n\t\t'tag': {\n\t\t\tpattern: /\\.?[-\\w\\\\]+\\.?/,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /\\./,\n\t\t\t}\n\t\t},\n\t\t'punctuation': /[{}[\\];(),.:|]/,\n\t\t'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n\t};\n\n\tPrism.languages.tsconfig = Prism.languages.typoscript;\n\n}(Prism));\n"]},"metadata":{},"sourceType":"script"}