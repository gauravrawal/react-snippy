{"ast":null,"code":"Prism.languages.racket = Prism.languages.extend('scheme', {\n  'lambda-parameter': {\n    // the racket lambda syntax is a lot more complex, so we won't even attempt to capture it.\n    // this will just prevent false positives of the `function` pattern\n    pattern: /([(\\[]lambda\\s+[(\\[])[^()\\[\\]'\\s]+/,\n    lookbehind: true\n  }\n});\nPrism.languages.insertBefore('racket', 'string', {\n  'lang': {\n    pattern: /^#lang.+/m,\n    greedy: true,\n    alias: 'keyword'\n  }\n});\nPrism.languages.rkt = Prism.languages.racket;","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/github/react-snippy/node_modules/prismjs/components/prism-racket.js"],"names":["Prism","languages","racket","extend","pattern","lookbehind","insertBefore","greedy","alias","rkt"],"mappings":"AAAAA,KAAK,CAACC,SAAN,CAAgBC,MAAhB,GAAyBF,KAAK,CAACC,SAAN,CAAgBE,MAAhB,CAAuB,QAAvB,EAAiC;AACzD,sBAAoB;AACnB;AACA;AACAC,IAAAA,OAAO,EAAE,oCAHU;AAInBC,IAAAA,UAAU,EAAE;AAJO;AADqC,CAAjC,CAAzB;AASAL,KAAK,CAACC,SAAN,CAAgBK,YAAhB,CAA6B,QAA7B,EAAuC,QAAvC,EAAiD;AAChD,UAAQ;AACPF,IAAAA,OAAO,EAAE,WADF;AAEPG,IAAAA,MAAM,EAAE,IAFD;AAGPC,IAAAA,KAAK,EAAE;AAHA;AADwC,CAAjD;AAQAR,KAAK,CAACC,SAAN,CAAgBQ,GAAhB,GAAsBT,KAAK,CAACC,SAAN,CAAgBC,MAAtC","sourcesContent":["Prism.languages.racket = Prism.languages.extend('scheme', {\n\t'lambda-parameter': {\n\t\t// the racket lambda syntax is a lot more complex, so we won't even attempt to capture it.\n\t\t// this will just prevent false positives of the `function` pattern\n\t\tpattern: /([(\\[]lambda\\s+[(\\[])[^()\\[\\]'\\s]+/,\n\t\tlookbehind: true\n\t}\n});\n\nPrism.languages.insertBefore('racket', 'string', {\n\t'lang': {\n\t\tpattern: /^#lang.+/m,\n\t\tgreedy: true,\n\t\talias: 'keyword'\n\t}\n});\n\nPrism.languages.rkt = Prism.languages.racket;\n"]},"metadata":{},"sourceType":"script"}