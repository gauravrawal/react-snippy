{"ast":null,"code":"(function (Prism) {\n  Prism.languages.latte = {\n    'comment': /^\\{\\*[\\s\\S]*/,\n    'ld': {\n      pattern: /^\\{(?:[=_]|\\/?(?!\\d|\\w+\\()\\w+)?/,\n      inside: {\n        'punctuation': /^\\{\\/?/,\n        'tag': {\n          pattern: /.+/,\n          alias: 'important'\n        }\n      }\n    },\n    'rd': {\n      pattern: /\\}$/,\n      inside: {\n        'punctuation': /.+/\n      }\n    },\n    'php': {\n      pattern: /\\S(?:[\\s\\S]*\\S)?/,\n      alias: 'language-php',\n      inside: Prism.languages.php\n    }\n  };\n  var markupLatte = Prism.languages.extend('markup', {});\n  Prism.languages.insertBefore('inside', 'attr-value', {\n    'n-attr': {\n      pattern: /n:[\\w-]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+))?/,\n      inside: {\n        'attr-name': {\n          pattern: /^[^\\s=]+/,\n          alias: 'important'\n        },\n        'attr-value': {\n          pattern: /=[\\s\\S]+/,\n          inside: {\n            'punctuation': [/^=/, {\n              pattern: /^(\\s*)[\"']|[\"']$/,\n              lookbehind: true\n            }],\n            'php': {\n              pattern: /\\S(?:[\\s\\S]*\\S)?/,\n              inside: Prism.languages.php\n            }\n          }\n        }\n      }\n    }\n  }, markupLatte.tag);\n  Prism.hooks.add('before-tokenize', function (env) {\n    if (env.language !== 'latte') {\n      return;\n    }\n\n    var lattePattern = /\\{\\*[\\s\\S]*?\\*\\}|\\{[^'\"\\s{}*](?:[^\"'/{}]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*?\\}/g;\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'latte', lattePattern);\n    env.grammar = markupLatte;\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'latte');\n  });\n})(Prism);","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/github/react-snippy/node_modules/prismjs/components/prism-latte.js"],"names":["Prism","languages","latte","pattern","inside","alias","php","markupLatte","extend","insertBefore","lookbehind","tag","hooks","add","env","language","lattePattern","buildPlaceholders","grammar","tokenizePlaceholders"],"mappings":"AAAC,WAAUA,KAAV,EAAiB;AACjBA,EAAAA,KAAK,CAACC,SAAN,CAAgBC,KAAhB,GAAwB;AACvB,eAAW,cADY;AAEvB,UAAM;AACLC,MAAAA,OAAO,EAAE,iCADJ;AAELC,MAAAA,MAAM,EAAE;AACP,uBAAe,QADR;AAEP,eAAO;AACND,UAAAA,OAAO,EAAE,IADH;AAENE,UAAAA,KAAK,EAAE;AAFD;AAFA;AAFH,KAFiB;AAYvB,UAAM;AACLF,MAAAA,OAAO,EAAE,KADJ;AAELC,MAAAA,MAAM,EAAE;AACP,uBAAe;AADR;AAFH,KAZiB;AAkBvB,WAAO;AACND,MAAAA,OAAO,EAAE,kBADH;AAENE,MAAAA,KAAK,EAAE,cAFD;AAGND,MAAAA,MAAM,EAAEJ,KAAK,CAACC,SAAN,CAAgBK;AAHlB;AAlBgB,GAAxB;AAyBA,MAAIC,WAAW,GAAGP,KAAK,CAACC,SAAN,CAAgBO,MAAhB,CAAuB,QAAvB,EAAiC,EAAjC,CAAlB;AACAR,EAAAA,KAAK,CAACC,SAAN,CAAgBQ,YAAhB,CAA6B,QAA7B,EAAuC,YAAvC,EAAqD;AACpD,cAAU;AACTN,MAAAA,OAAO,EAAE,oDADA;AAETC,MAAAA,MAAM,EAAE;AACP,qBAAa;AACZD,UAAAA,OAAO,EAAE,UADG;AAEZE,UAAAA,KAAK,EAAE;AAFK,SADN;AAKP,sBAAc;AACbF,UAAAA,OAAO,EAAE,UADI;AAEbC,UAAAA,MAAM,EAAE;AACP,2BAAe,CACd,IADc,EAEd;AACCD,cAAAA,OAAO,EAAE,kBADV;AAECO,cAAAA,UAAU,EAAE;AAFb,aAFc,CADR;AAQP,mBAAO;AACNP,cAAAA,OAAO,EAAE,kBADH;AAENC,cAAAA,MAAM,EAAEJ,KAAK,CAACC,SAAN,CAAgBK;AAFlB;AARA;AAFK;AALP;AAFC;AAD0C,GAArD,EA0BGC,WAAW,CAACI,GA1Bf;AA4BAX,EAAAA,KAAK,CAACY,KAAN,CAAYC,GAAZ,CAAgB,iBAAhB,EAAmC,UAAUC,GAAV,EAAe;AACjD,QAAIA,GAAG,CAACC,QAAJ,KAAiB,OAArB,EAA8B;AAC7B;AACA;;AACD,QAAIC,YAAY,GAAG,uHAAnB;AACAhB,IAAAA,KAAK,CAACC,SAAN,CAAgB,mBAAhB,EAAqCgB,iBAArC,CAAuDH,GAAvD,EAA4D,OAA5D,EAAqEE,YAArE;AACAF,IAAAA,GAAG,CAACI,OAAJ,GAAcX,WAAd;AACA,GAPD;AASAP,EAAAA,KAAK,CAACY,KAAN,CAAYC,GAAZ,CAAgB,gBAAhB,EAAkC,UAAUC,GAAV,EAAe;AAChDd,IAAAA,KAAK,CAACC,SAAN,CAAgB,mBAAhB,EAAqCkB,oBAArC,CAA0DL,GAA1D,EAA+D,OAA/D;AACA,GAFD;AAIA,CApEA,EAoECd,KApED,CAAD","sourcesContent":["(function (Prism) {\n\tPrism.languages.latte = {\n\t\t'comment': /^\\{\\*[\\s\\S]*/,\n\t\t'ld': {\n\t\t\tpattern: /^\\{(?:[=_]|\\/?(?!\\d|\\w+\\()\\w+)?/,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /^\\{\\/?/,\n\t\t\t\t'tag': {\n\t\t\t\t\tpattern: /.+/,\n\t\t\t\t\talias: 'important'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'rd': {\n\t\t\tpattern: /\\}$/,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /.+/\n\t\t\t}\n\t\t},\n\t\t'php': {\n\t\t\tpattern: /\\S(?:[\\s\\S]*\\S)?/,\n\t\t\talias: 'language-php',\n\t\t\tinside: Prism.languages.php\n\t\t}\n\t};\n\n\tvar markupLatte = Prism.languages.extend('markup', {});\n\tPrism.languages.insertBefore('inside', 'attr-value', {\n\t\t'n-attr': {\n\t\t\tpattern: /n:[\\w-]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+))?/,\n\t\t\tinside: {\n\t\t\t\t'attr-name': {\n\t\t\t\t\tpattern: /^[^\\s=]+/,\n\t\t\t\t\talias: 'important'\n\t\t\t\t},\n\t\t\t\t'attr-value': {\n\t\t\t\t\tpattern: /=[\\s\\S]+/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t\t/^=/,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpattern: /^(\\s*)[\"']|[\"']$/,\n\t\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t'php': {\n\t\t\t\t\t\t\tpattern: /\\S(?:[\\s\\S]*\\S)?/,\n\t\t\t\t\t\t\tinside: Prism.languages.php\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t}\n\t\t},\n\t}, markupLatte.tag);\n\n\tPrism.hooks.add('before-tokenize', function (env) {\n\t\tif (env.language !== 'latte') {\n\t\t\treturn;\n\t\t}\n\t\tvar lattePattern = /\\{\\*[\\s\\S]*?\\*\\}|\\{[^'\"\\s{}*](?:[^\"'/{}]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*?\\}/g;\n\t\tPrism.languages['markup-templating'].buildPlaceholders(env, 'latte', lattePattern);\n\t\tenv.grammar = markupLatte;\n\t});\n\n\tPrism.hooks.add('after-tokenize', function (env) {\n\t\tPrism.languages['markup-templating'].tokenizePlaceholders(env, 'latte');\n\t});\n\n}(Prism));\n"]},"metadata":{},"sourceType":"script"}