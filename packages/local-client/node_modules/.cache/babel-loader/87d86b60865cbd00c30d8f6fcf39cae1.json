{"ast":null,"code":"!function (a) {\n  var e = {\n    pattern: /\\\\[\\\\(){}[\\]^$+*?|.]/,\n    alias: \"escape\"\n  },\n      n = /\\\\(?:x[\\da-fA-F]{2}|u[\\da-fA-F]{4}|u\\{[\\da-fA-F]+\\}|c[a-zA-Z]|0[0-7]{0,2}|[123][0-7]{2}|.)/,\n      t = \"(?:[^\\\\\\\\-]|\" + n.source + \")\",\n      s = RegExp(t + \"-\" + t),\n      i = {\n    pattern: /(<|')[^<>']+(?=[>']$)/,\n    lookbehind: !0,\n    alias: \"variable\"\n  };\n  a.languages.regex = {\n    charset: {\n      pattern: /((?:^|[^\\\\])(?:\\\\\\\\)*)\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*\\]/,\n      lookbehind: !0,\n      inside: {\n        \"charset-negation\": {\n          pattern: /(^\\[)\\^/,\n          lookbehind: !0,\n          alias: \"operator\"\n        },\n        \"charset-punctuation\": {\n          pattern: /^\\[|\\]$/,\n          alias: \"punctuation\"\n        },\n        range: {\n          pattern: s,\n          inside: {\n            escape: n,\n            \"range-punctuation\": {\n              pattern: /-/,\n              alias: \"operator\"\n            }\n          }\n        },\n        \"special-escape\": e,\n        charclass: {\n          pattern: /\\\\[wsd]|\\\\p\\{[^{}]+\\}/i,\n          alias: \"class-name\"\n        },\n        escape: n\n      }\n    },\n    \"special-escape\": e,\n    charclass: {\n      pattern: /\\.|\\\\[wsd]|\\\\p\\{[^{}]+\\}/i,\n      alias: \"class-name\"\n    },\n    backreference: [{\n      pattern: /\\\\(?![123][0-7]{2})[1-9]/,\n      alias: \"keyword\"\n    }, {\n      pattern: /\\\\k<[^<>']+>/,\n      alias: \"keyword\",\n      inside: {\n        \"group-name\": i\n      }\n    }],\n    anchor: {\n      pattern: /[$^]|\\\\[ABbGZz]/,\n      alias: \"function\"\n    },\n    escape: n,\n    group: [{\n      pattern: /\\((?:\\?(?:<[^<>']+>|'[^<>']+'|[>:]|<?[=!]|[idmnsuxU]+(?:-[idmnsuxU]+)?:?))?/,\n      alias: \"punctuation\",\n      inside: {\n        \"group-name\": i\n      }\n    }, {\n      pattern: /\\)/,\n      alias: \"punctuation\"\n    }],\n    quantifier: {\n      pattern: /(?:[+*?]|\\{\\d+(?:,\\d*)?\\})[?+]?/,\n      alias: \"number\"\n    },\n    alternation: {\n      pattern: /\\|/,\n      alias: \"keyword\"\n    }\n  };\n}(Prism);","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/jbook/node_modules/prismjs/components/prism-regex.min.js"],"names":["a","e","pattern","alias","n","t","source","s","RegExp","i","lookbehind","languages","regex","charset","inside","range","escape","charclass","backreference","anchor","group","quantifier","alternation","Prism"],"mappings":"AAAA,CAAC,UAASA,CAAT,EAAW;AAAC,MAAIC,CAAC,GAAC;AAACC,IAAAA,OAAO,EAAC,sBAAT;AAAgCC,IAAAA,KAAK,EAAC;AAAtC,GAAN;AAAA,MAAsDC,CAAC,GAAC,4FAAxD;AAAA,MAAqJC,CAAC,GAAC,iBAAeD,CAAC,CAACE,MAAjB,GAAwB,GAA/K;AAAA,MAAmLC,CAAC,GAACC,MAAM,CAACH,CAAC,GAAC,GAAF,GAAMA,CAAP,CAA3L;AAAA,MAAqMI,CAAC,GAAC;AAACP,IAAAA,OAAO,EAAC,uBAAT;AAAiCQ,IAAAA,UAAU,EAAC,CAAC,CAA7C;AAA+CP,IAAAA,KAAK,EAAC;AAArD,GAAvM;AAAwQH,EAAAA,CAAC,CAACW,SAAF,CAAYC,KAAZ,GAAkB;AAACC,IAAAA,OAAO,EAAC;AAACX,MAAAA,OAAO,EAAC,iDAAT;AAA2DQ,MAAAA,UAAU,EAAC,CAAC,CAAvE;AAAyEI,MAAAA,MAAM,EAAC;AAAC,4BAAmB;AAACZ,UAAAA,OAAO,EAAC,SAAT;AAAmBQ,UAAAA,UAAU,EAAC,CAAC,CAA/B;AAAiCP,UAAAA,KAAK,EAAC;AAAvC,SAApB;AAAuE,+BAAsB;AAACD,UAAAA,OAAO,EAAC,SAAT;AAAmBC,UAAAA,KAAK,EAAC;AAAzB,SAA7F;AAAqIY,QAAAA,KAAK,EAAC;AAACb,UAAAA,OAAO,EAACK,CAAT;AAAWO,UAAAA,MAAM,EAAC;AAACE,YAAAA,MAAM,EAACZ,CAAR;AAAU,iCAAoB;AAACF,cAAAA,OAAO,EAAC,GAAT;AAAaC,cAAAA,KAAK,EAAC;AAAnB;AAA9B;AAAlB,SAA3I;AAA4N,0BAAiBF,CAA7O;AAA+OgB,QAAAA,SAAS,EAAC;AAACf,UAAAA,OAAO,EAAC,wBAAT;AAAkCC,UAAAA,KAAK,EAAC;AAAxC,SAAzP;AAA+Sa,QAAAA,MAAM,EAACZ;AAAtT;AAAhF,KAAT;AAAmZ,sBAAiBH,CAApa;AAAsagB,IAAAA,SAAS,EAAC;AAACf,MAAAA,OAAO,EAAC,2BAAT;AAAqCC,MAAAA,KAAK,EAAC;AAA3C,KAAhb;AAAyee,IAAAA,aAAa,EAAC,CAAC;AAAChB,MAAAA,OAAO,EAAC,0BAAT;AAAoCC,MAAAA,KAAK,EAAC;AAA1C,KAAD,EAAsD;AAACD,MAAAA,OAAO,EAAC,cAAT;AAAwBC,MAAAA,KAAK,EAAC,SAA9B;AAAwCW,MAAAA,MAAM,EAAC;AAAC,sBAAaL;AAAd;AAA/C,KAAtD,CAAvf;AAA+mBU,IAAAA,MAAM,EAAC;AAACjB,MAAAA,OAAO,EAAC,iBAAT;AAA2BC,MAAAA,KAAK,EAAC;AAAjC,KAAtnB;AAAmqBa,IAAAA,MAAM,EAACZ,CAA1qB;AAA4qBgB,IAAAA,KAAK,EAAC,CAAC;AAAClB,MAAAA,OAAO,EAAC,6EAAT;AAAuFC,MAAAA,KAAK,EAAC,aAA7F;AAA2GW,MAAAA,MAAM,EAAC;AAAC,sBAAaL;AAAd;AAAlH,KAAD,EAAqI;AAACP,MAAAA,OAAO,EAAC,IAAT;AAAcC,MAAAA,KAAK,EAAC;AAApB,KAArI,CAAlrB;AAA21BkB,IAAAA,UAAU,EAAC;AAACnB,MAAAA,OAAO,EAAC,iCAAT;AAA2CC,MAAAA,KAAK,EAAC;AAAjD,KAAt2B;AAAi6BmB,IAAAA,WAAW,EAAC;AAACpB,MAAAA,OAAO,EAAC,IAAT;AAAcC,MAAAA,KAAK,EAAC;AAApB;AAA76B,GAAlB;AAA+9B,CAAnvC,CAAovCoB,KAApvC,CAAD","sourcesContent":["!function(a){var e={pattern:/\\\\[\\\\(){}[\\]^$+*?|.]/,alias:\"escape\"},n=/\\\\(?:x[\\da-fA-F]{2}|u[\\da-fA-F]{4}|u\\{[\\da-fA-F]+\\}|c[a-zA-Z]|0[0-7]{0,2}|[123][0-7]{2}|.)/,t=\"(?:[^\\\\\\\\-]|\"+n.source+\")\",s=RegExp(t+\"-\"+t),i={pattern:/(<|')[^<>']+(?=[>']$)/,lookbehind:!0,alias:\"variable\"};a.languages.regex={charset:{pattern:/((?:^|[^\\\\])(?:\\\\\\\\)*)\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*\\]/,lookbehind:!0,inside:{\"charset-negation\":{pattern:/(^\\[)\\^/,lookbehind:!0,alias:\"operator\"},\"charset-punctuation\":{pattern:/^\\[|\\]$/,alias:\"punctuation\"},range:{pattern:s,inside:{escape:n,\"range-punctuation\":{pattern:/-/,alias:\"operator\"}}},\"special-escape\":e,charclass:{pattern:/\\\\[wsd]|\\\\p\\{[^{}]+\\}/i,alias:\"class-name\"},escape:n}},\"special-escape\":e,charclass:{pattern:/\\.|\\\\[wsd]|\\\\p\\{[^{}]+\\}/i,alias:\"class-name\"},backreference:[{pattern:/\\\\(?![123][0-7]{2})[1-9]/,alias:\"keyword\"},{pattern:/\\\\k<[^<>']+>/,alias:\"keyword\",inside:{\"group-name\":i}}],anchor:{pattern:/[$^]|\\\\[ABbGZz]/,alias:\"function\"},escape:n,group:[{pattern:/\\((?:\\?(?:<[^<>']+>|'[^<>']+'|[>:]|<?[=!]|[idmnsuxU]+(?:-[idmnsuxU]+)?:?))?/,alias:\"punctuation\",inside:{\"group-name\":i}},{pattern:/\\)/,alias:\"punctuation\"}],quantifier:{pattern:/(?:[+*?]|\\{\\d+(?:,\\d*)?\\})[?+]?/,alias:\"number\"},alternation:{pattern:/\\|/,alias:\"keyword\"}}}(Prism);"]},"metadata":{},"sourceType":"script"}