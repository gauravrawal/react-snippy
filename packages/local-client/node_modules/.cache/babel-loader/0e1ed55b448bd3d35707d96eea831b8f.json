{"ast":null,"code":"Prism.languages.erlang = {\n  comment: /%.+/,\n  string: {\n    pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n    greedy: !0\n  },\n  \"quoted-function\": {\n    pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'(?=\\()/,\n    alias: \"function\"\n  },\n  \"quoted-atom\": {\n    pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'/,\n    alias: \"atom\"\n  },\n  boolean: /\\b(?:true|false)\\b/,\n  keyword: /\\b(?:fun|when|case|of|end|if|receive|after|try|catch)\\b/,\n  number: [/\\$\\\\?./, /\\b\\d+#[a-z0-9]+/i, /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i],\n  function: /\\b[a-z][\\w@]*(?=\\()/,\n  variable: {\n    pattern: /(^|[^@])(?:\\b|\\?)[A-Z_][\\w@]*/,\n    lookbehind: !0\n  },\n  operator: [/[=\\/<>:]=|=[:\\/]=|\\+\\+?|--?|[=*\\/!]|\\b(?:bnot|div|rem|band|bor|bxor|bsl|bsr|not|and|or|xor|orelse|andalso)\\b/, {\n    pattern: /(^|[^<])<(?!<)/,\n    lookbehind: !0\n  }, {\n    pattern: /(^|[^>])>(?!>)/,\n    lookbehind: !0\n  }],\n  atom: /\\b[a-z][\\w@]*/,\n  punctuation: /[()[\\]{}:;,.#|]|<<|>>/\n};","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/jbook/node_modules/prismjs/components/prism-erlang.min.js"],"names":["Prism","languages","erlang","comment","string","pattern","greedy","alias","boolean","keyword","number","function","variable","lookbehind","operator","atom","punctuation"],"mappings":"AAAAA,KAAK,CAACC,SAAN,CAAgBC,MAAhB,GAAuB;AAACC,EAAAA,OAAO,EAAC,KAAT;AAAeC,EAAAA,MAAM,EAAC;AAACC,IAAAA,OAAO,EAAC,uBAAT;AAAiCC,IAAAA,MAAM,EAAC,CAAC;AAAzC,GAAtB;AAAkE,qBAAkB;AAACD,IAAAA,OAAO,EAAC,6BAAT;AAAuCE,IAAAA,KAAK,EAAC;AAA7C,GAApF;AAA6I,iBAAc;AAACF,IAAAA,OAAO,EAAC,uBAAT;AAAiCE,IAAAA,KAAK,EAAC;AAAvC,GAA3J;AAA0MC,EAAAA,OAAO,EAAC,oBAAlN;AAAuOC,EAAAA,OAAO,EAAC,yDAA/O;AAAySC,EAAAA,MAAM,EAAC,CAAC,QAAD,EAAU,kBAAV,EAA6B,4CAA7B,CAAhT;AAA2XC,EAAAA,QAAQ,EAAC,qBAApY;AAA0ZC,EAAAA,QAAQ,EAAC;AAACP,IAAAA,OAAO,EAAC,+BAAT;AAAyCQ,IAAAA,UAAU,EAAC,CAAC;AAArD,GAAna;AAA2dC,EAAAA,QAAQ,EAAC,CAAC,8GAAD,EAAgH;AAACT,IAAAA,OAAO,EAAC,gBAAT;AAA0BQ,IAAAA,UAAU,EAAC,CAAC;AAAtC,GAAhH,EAAyJ;AAACR,IAAAA,OAAO,EAAC,gBAAT;AAA0BQ,IAAAA,UAAU,EAAC,CAAC;AAAtC,GAAzJ,CAApe;AAAuqBE,EAAAA,IAAI,EAAC,eAA5qB;AAA4rBC,EAAAA,WAAW,EAAC;AAAxsB,CAAvB","sourcesContent":["Prism.languages.erlang={comment:/%.+/,string:{pattern:/\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,greedy:!0},\"quoted-function\":{pattern:/'(?:\\\\.|[^\\\\'\\r\\n])+'(?=\\()/,alias:\"function\"},\"quoted-atom\":{pattern:/'(?:\\\\.|[^\\\\'\\r\\n])+'/,alias:\"atom\"},boolean:/\\b(?:true|false)\\b/,keyword:/\\b(?:fun|when|case|of|end|if|receive|after|try|catch)\\b/,number:[/\\$\\\\?./,/\\b\\d+#[a-z0-9]+/i,/(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i],function:/\\b[a-z][\\w@]*(?=\\()/,variable:{pattern:/(^|[^@])(?:\\b|\\?)[A-Z_][\\w@]*/,lookbehind:!0},operator:[/[=\\/<>:]=|=[:\\/]=|\\+\\+?|--?|[=*\\/!]|\\b(?:bnot|div|rem|band|bor|bxor|bsl|bsr|not|and|or|xor|orelse|andalso)\\b/,{pattern:/(^|[^<])<(?!<)/,lookbehind:!0},{pattern:/(^|[^>])>(?!>)/,lookbehind:!0}],atom:/\\b[a-z][\\w@]*/,punctuation:/[()[\\]{}:;,.#|]|<<|>>/};"]},"metadata":{},"sourceType":"script"}