{"ast":null,"code":"!function (e) {\n  var t = /#(?!\\{).+/,\n      n = {\n    pattern: /#\\{[^}]+\\}/,\n    alias: \"variable\"\n  };\n  e.languages.coffeescript = e.languages.extend(\"javascript\", {\n    comment: t,\n    string: [{\n      pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n      greedy: !0\n    }, {\n      pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n      greedy: !0,\n      inside: {\n        interpolation: n\n      }\n    }],\n    keyword: /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n    \"class-member\": {\n      pattern: /@(?!\\d)\\w+/,\n      alias: \"variable\"\n    }\n  }), e.languages.insertBefore(\"coffeescript\", \"comment\", {\n    \"multiline-comment\": {\n      pattern: /###[\\s\\S]+?###/,\n      alias: \"comment\"\n    },\n    \"block-regex\": {\n      pattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n      alias: \"regex\",\n      inside: {\n        comment: t,\n        interpolation: n\n      }\n    }\n  }), e.languages.insertBefore(\"coffeescript\", \"string\", {\n    \"inline-javascript\": {\n      pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n      inside: {\n        delimiter: {\n          pattern: /^`|`$/,\n          alias: \"punctuation\"\n        },\n        script: {\n          pattern: /[\\s\\S]+/,\n          alias: \"language-javascript\",\n          inside: e.languages.javascript\n        }\n      }\n    },\n    \"multiline-string\": [{\n      pattern: /'''[\\s\\S]*?'''/,\n      greedy: !0,\n      alias: \"string\"\n    }, {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: !0,\n      alias: \"string\",\n      inside: {\n        interpolation: n\n      }\n    }]\n  }), e.languages.insertBefore(\"coffeescript\", \"keyword\", {\n    property: /(?!\\d)\\w+(?=\\s*:(?!:))/\n  }), delete e.languages.coffeescript[\"template-string\"], e.languages.coffee = e.languages.coffeescript;\n}(Prism);","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/github/react-snippy/node_modules/prismjs/components/prism-coffeescript.min.js"],"names":["e","t","n","pattern","alias","languages","coffeescript","extend","comment","string","greedy","inside","interpolation","keyword","insertBefore","delimiter","script","javascript","property","coffee","Prism"],"mappings":"AAAA,CAAC,UAASA,CAAT,EAAW;AAAC,MAAIC,CAAC,GAAC,WAAN;AAAA,MAAkBC,CAAC,GAAC;AAACC,IAAAA,OAAO,EAAC,YAAT;AAAsBC,IAAAA,KAAK,EAAC;AAA5B,GAApB;AAA4DJ,EAAAA,CAAC,CAACK,SAAF,CAAYC,YAAZ,GAAyBN,CAAC,CAACK,SAAF,CAAYE,MAAZ,CAAmB,YAAnB,EAAgC;AAACC,IAAAA,OAAO,EAACP,CAAT;AAAWQ,IAAAA,MAAM,EAAC,CAAC;AAACN,MAAAA,OAAO,EAAC,wBAAT;AAAkCO,MAAAA,MAAM,EAAC,CAAC;AAA1C,KAAD,EAA8C;AAACP,MAAAA,OAAO,EAAC,wBAAT;AAAkCO,MAAAA,MAAM,EAAC,CAAC,CAA1C;AAA4CC,MAAAA,MAAM,EAAC;AAACC,QAAAA,aAAa,EAACV;AAAf;AAAnD,KAA9C,CAAlB;AAAuIW,IAAAA,OAAO,EAAC,kSAA/I;AAAkb,oBAAe;AAACV,MAAAA,OAAO,EAAC,YAAT;AAAsBC,MAAAA,KAAK,EAAC;AAA5B;AAAjc,GAAhC,CAAzB,EAAoiBJ,CAAC,CAACK,SAAF,CAAYS,YAAZ,CAAyB,cAAzB,EAAwC,SAAxC,EAAkD;AAAC,yBAAoB;AAACX,MAAAA,OAAO,EAAC,gBAAT;AAA0BC,MAAAA,KAAK,EAAC;AAAhC,KAArB;AAAgE,mBAAc;AAACD,MAAAA,OAAO,EAAC,oBAAT;AAA8BC,MAAAA,KAAK,EAAC,OAApC;AAA4CO,MAAAA,MAAM,EAAC;AAACH,QAAAA,OAAO,EAACP,CAAT;AAAWW,QAAAA,aAAa,EAACV;AAAzB;AAAnD;AAA9E,GAAlD,CAApiB,EAAsvBF,CAAC,CAACK,SAAF,CAAYS,YAAZ,CAAyB,cAAzB,EAAwC,QAAxC,EAAiD;AAAC,yBAAoB;AAACX,MAAAA,OAAO,EAAC,wBAAT;AAAkCQ,MAAAA,MAAM,EAAC;AAACI,QAAAA,SAAS,EAAC;AAACZ,UAAAA,OAAO,EAAC,OAAT;AAAiBC,UAAAA,KAAK,EAAC;AAAvB,SAAX;AAAiDY,QAAAA,MAAM,EAAC;AAACb,UAAAA,OAAO,EAAC,SAAT;AAAmBC,UAAAA,KAAK,EAAC,qBAAzB;AAA+CO,UAAAA,MAAM,EAACX,CAAC,CAACK,SAAF,CAAYY;AAAlE;AAAxD;AAAzC,KAArB;AAAsM,wBAAmB,CAAC;AAACd,MAAAA,OAAO,EAAC,gBAAT;AAA0BO,MAAAA,MAAM,EAAC,CAAC,CAAlC;AAAoCN,MAAAA,KAAK,EAAC;AAA1C,KAAD,EAAqD;AAACD,MAAAA,OAAO,EAAC,gBAAT;AAA0BO,MAAAA,MAAM,EAAC,CAAC,CAAlC;AAAoCN,MAAAA,KAAK,EAAC,QAA1C;AAAmDO,MAAAA,MAAM,EAAC;AAACC,QAAAA,aAAa,EAACV;AAAf;AAA1D,KAArD;AAAzN,GAAjD,CAAtvB,EAAqoCF,CAAC,CAACK,SAAF,CAAYS,YAAZ,CAAyB,cAAzB,EAAwC,SAAxC,EAAkD;AAACI,IAAAA,QAAQ,EAAC;AAAV,GAAlD,CAAroC,EAA4tC,OAAOlB,CAAC,CAACK,SAAF,CAAYC,YAAZ,CAAyB,iBAAzB,CAAnuC,EAA+wCN,CAAC,CAACK,SAAF,CAAYc,MAAZ,GAAmBnB,CAAC,CAACK,SAAF,CAAYC,YAA9yC;AAA2zC,CAAn4C,CAAo4Cc,KAAp4C,CAAD","sourcesContent":["!function(e){var t=/#(?!\\{).+/,n={pattern:/#\\{[^}]+\\}/,alias:\"variable\"};e.languages.coffeescript=e.languages.extend(\"javascript\",{comment:t,string:[{pattern:/'(?:\\\\[\\s\\S]|[^\\\\'])*'/,greedy:!0},{pattern:/\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,greedy:!0,inside:{interpolation:n}}],keyword:/\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\"class-member\":{pattern:/@(?!\\d)\\w+/,alias:\"variable\"}}),e.languages.insertBefore(\"coffeescript\",\"comment\",{\"multiline-comment\":{pattern:/###[\\s\\S]+?###/,alias:\"comment\"},\"block-regex\":{pattern:/\\/{3}[\\s\\S]*?\\/{3}/,alias:\"regex\",inside:{comment:t,interpolation:n}}}),e.languages.insertBefore(\"coffeescript\",\"string\",{\"inline-javascript\":{pattern:/`(?:\\\\[\\s\\S]|[^\\\\`])*`/,inside:{delimiter:{pattern:/^`|`$/,alias:\"punctuation\"},script:{pattern:/[\\s\\S]+/,alias:\"language-javascript\",inside:e.languages.javascript}}},\"multiline-string\":[{pattern:/'''[\\s\\S]*?'''/,greedy:!0,alias:\"string\"},{pattern:/\"\"\"[\\s\\S]*?\"\"\"/,greedy:!0,alias:\"string\",inside:{interpolation:n}}]}),e.languages.insertBefore(\"coffeescript\",\"keyword\",{property:/(?!\\d)\\w+(?=\\s*:(?!:))/}),delete e.languages.coffeescript[\"template-string\"],e.languages.coffee=e.languages.coffeescript}(Prism);"]},"metadata":{},"sourceType":"script"}