{"ast":null,"code":"Prism.languages.nevod = {\n  'comment': /\\/\\/.*|(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$))/,\n  'string': {\n    pattern: /(?:\"(?:\"\"|[^\"])*\"(?!\")|'(?:''|[^'])*'(?!'))!?\\*?/,\n    greedy: true,\n    inside: {\n      'string-attrs': /!$|!\\*$|\\*$/\n    }\n  },\n  'namespace': {\n    pattern: /(@namespace\\s+)[a-zA-Z0-9\\-.]+(?=\\s*\\{)/,\n    lookbehind: true\n  },\n  'pattern': {\n    pattern: /(@pattern\\s+)?#?[a-zA-Z0-9\\-.]+(?:\\s*\\(\\s*(?:~\\s*)?[a-zA-Z0-9\\-.]+\\s*(?:,\\s*(?:~\\s*)?[a-zA-Z0-9\\-.]*)*\\))?(?=\\s*=)/,\n    lookbehind: true,\n    inside: {\n      'pattern-name': {\n        pattern: /^#?[a-zA-Z0-9\\-.]+/,\n        alias: 'class-name'\n      },\n      'fields': {\n        pattern: /\\(.*\\)/,\n        inside: {\n          'field-name': {\n            pattern: /[a-zA-Z0-9\\-.]+/,\n            alias: 'variable'\n          },\n          'punctuation': /[,()]/,\n          'operator': {\n            pattern: /~/,\n            alias: 'field-hidden-mark'\n          }\n        }\n      }\n    }\n  },\n  'search': {\n    pattern: /(@search\\s+|#)[a-zA-Z0-9\\-.]+(?:\\.\\*)?(?=\\s*;)/,\n    alias: 'function',\n    lookbehind: true\n  },\n  'keyword': /@(?:require|namespace|pattern|search|inside|outside|having|where)\\b/,\n  'standard-pattern': {\n    pattern: /\\b(?:Word|Punct|Symbol|Space|LineBreak|Start|End|Alpha|AlphaNum|Num|NumAlpha|Blank|WordBreak|Any)(?:\\([a-zA-Z0-9\\-.,\\s+]*\\))?/,\n    inside: {\n      'standard-pattern-name': {\n        pattern: /^[a-zA-Z0-9\\-.]+/,\n        alias: 'builtin'\n      },\n      'quantifier': {\n        pattern: /\\b\\d+(?:\\s*\\+|\\s*-\\s*\\d+)?(?!\\w)/,\n        alias: 'number'\n      },\n      'standard-pattern-attr': {\n        pattern: /[a-zA-Z0-9\\-.]+/,\n        alias: 'builtin'\n      },\n      'punctuation': /[,()]/\n    }\n  },\n  'quantifier': {\n    pattern: /\\b\\d+(?:\\s*\\+|\\s*-\\s*\\d+)?(?!\\w)/,\n    alias: 'number'\n  },\n  'operator': [{\n    pattern: /=/,\n    alias: 'pattern-def'\n  }, {\n    pattern: /&/,\n    alias: 'conjunction'\n  }, {\n    pattern: /~/,\n    alias: 'exception'\n  }, {\n    pattern: /\\?/,\n    alias: 'optionality'\n  }, {\n    pattern: /[[\\]]/,\n    alias: 'repetition'\n  }, {\n    pattern: /[{}]/,\n    alias: 'variation'\n  }, {\n    pattern: /[+_]/,\n    alias: 'sequence'\n  }, {\n    pattern: /\\.{2,3}/,\n    alias: 'span'\n  }],\n  'field-capture': [{\n    pattern: /([a-zA-Z0-9\\-.]+\\s*\\()\\s*[a-zA-Z0-9\\-.]+\\s*:\\s*[a-zA-Z0-9\\-.]+(?:\\s*,\\s*[a-zA-Z0-9\\-.]+\\s*:\\s*[a-zA-Z0-9\\-.]+)*(?=\\s*\\))/,\n    lookbehind: true,\n    inside: {\n      'field-name': {\n        pattern: /[a-zA-Z0-9\\-.]+/,\n        alias: 'variable'\n      },\n      'colon': /:/\n    }\n  }, {\n    pattern: /[a-zA-Z0-9\\-.]+\\s*:/,\n    inside: {\n      'field-name': {\n        pattern: /[a-zA-Z0-9\\-.]+/,\n        alias: 'variable'\n      },\n      'colon': /:/\n    }\n  }],\n  'punctuation': /[:;,()]/,\n  'name': /[a-zA-Z0-9\\-.]+/\n};","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/jbook/node_modules/prismjs/components/prism-nevod.js"],"names":["Prism","languages","nevod","pattern","greedy","inside","lookbehind","alias"],"mappings":"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","sourcesContent":["Prism.languages.nevod = {\n\t'comment': /\\/\\/.*|(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$))/,\n\t'string': {\n\t\tpattern: /(?:\"(?:\"\"|[^\"])*\"(?!\")|'(?:''|[^'])*'(?!'))!?\\*?/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'string-attrs': /!$|!\\*$|\\*$/,\n\t\t},\n\t},\n\t'namespace': {\n\t\tpattern: /(@namespace\\s+)[a-zA-Z0-9\\-.]+(?=\\s*\\{)/,\n\t\tlookbehind: true,\n\t},\n\t'pattern': {\n\t\tpattern: /(@pattern\\s+)?#?[a-zA-Z0-9\\-.]+(?:\\s*\\(\\s*(?:~\\s*)?[a-zA-Z0-9\\-.]+\\s*(?:,\\s*(?:~\\s*)?[a-zA-Z0-9\\-.]*)*\\))?(?=\\s*=)/,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'pattern-name': {\n\t\t\t\tpattern: /^#?[a-zA-Z0-9\\-.]+/,\n\t\t\t\talias: 'class-name',\n\t\t\t},\n\t\t\t'fields': {\n\t\t\t\tpattern: /\\(.*\\)/,\n\t\t\t\tinside: {\n\t\t\t\t\t'field-name': {\n\t\t\t\t\t\tpattern: /[a-zA-Z0-9\\-.]+/,\n\t\t\t\t\t\talias: 'variable',\n\t\t\t\t\t},\n\t\t\t\t\t'punctuation': /[,()]/,\n\t\t\t\t\t'operator': {\n\t\t\t\t\t\tpattern: /~/,\n\t\t\t\t\t\talias: 'field-hidden-mark',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\t'search': {\n\t\tpattern: /(@search\\s+|#)[a-zA-Z0-9\\-.]+(?:\\.\\*)?(?=\\s*;)/,\n\t\talias: 'function',\n\t\tlookbehind: true,\n\t},\n\t'keyword': /@(?:require|namespace|pattern|search|inside|outside|having|where)\\b/,\n\t'standard-pattern': {\n\t\tpattern: /\\b(?:Word|Punct|Symbol|Space|LineBreak|Start|End|Alpha|AlphaNum|Num|NumAlpha|Blank|WordBreak|Any)(?:\\([a-zA-Z0-9\\-.,\\s+]*\\))?/,\n\t\tinside: {\n\t\t\t'standard-pattern-name': {\n\t\t\t\tpattern: /^[a-zA-Z0-9\\-.]+/,\n\t\t\t\talias: 'builtin',\n\t\t\t},\n\t\t\t'quantifier': {\n\t\t\t\tpattern: /\\b\\d+(?:\\s*\\+|\\s*-\\s*\\d+)?(?!\\w)/,\n\t\t\t\talias: 'number',\n\t\t\t},\n\t\t\t'standard-pattern-attr': {\n\t\t\t\tpattern: /[a-zA-Z0-9\\-.]+/,\n\t\t\t\talias: 'builtin',\n\t\t\t},\n\t\t\t'punctuation': /[,()]/,\n\t\t},\n\t},\n\t'quantifier': {\n\t\tpattern: /\\b\\d+(?:\\s*\\+|\\s*-\\s*\\d+)?(?!\\w)/,\n\t\talias: 'number',\n\t},\n\t'operator': [\n\t\t{\n\t\t\tpattern: /=/,\n\t\t\talias: 'pattern-def',\n\t\t},\n\t\t{\n\t\t\tpattern: /&/,\n\t\t\talias: 'conjunction',\n\t\t},\n\t\t{\n\t\t\tpattern: /~/,\n\t\t\talias: 'exception',\n\t\t},\n\t\t{\n\t\t\tpattern: /\\?/,\n\t\t\talias: 'optionality',\n\t\t},\n\t\t{\n\t\t\tpattern: /[[\\]]/,\n\t\t\talias: 'repetition',\n\t\t},\n\t\t{\n\t\t\tpattern: /[{}]/,\n\t\t\talias: 'variation',\n\t\t},\n\t\t{\n\t\t\tpattern: /[+_]/,\n\t\t\talias: 'sequence',\n\t\t},\n\t\t{\n\t\t\tpattern: /\\.{2,3}/,\n\t\t\talias: 'span',\n\t\t},\n\t],\n\t'field-capture': [\n\t\t{\n\t\t\tpattern: /([a-zA-Z0-9\\-.]+\\s*\\()\\s*[a-zA-Z0-9\\-.]+\\s*:\\s*[a-zA-Z0-9\\-.]+(?:\\s*,\\s*[a-zA-Z0-9\\-.]+\\s*:\\s*[a-zA-Z0-9\\-.]+)*(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'field-name': {\n\t\t\t\t\tpattern: /[a-zA-Z0-9\\-.]+/,\n\t\t\t\t\talias: 'variable',\n\t\t\t\t},\n\t\t\t\t'colon': /:/,\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tpattern: /[a-zA-Z0-9\\-.]+\\s*:/,\n\t\t\tinside: {\n\t\t\t\t'field-name': {\n\t\t\t\t\tpattern: /[a-zA-Z0-9\\-.]+/,\n\t\t\t\t\talias: 'variable',\n\t\t\t\t},\n\t\t\t\t'colon': /:/,\n\t\t\t},\n\t\t},\n\t],\n\t'punctuation': /[:;,()]/,\n\t'name': /[a-zA-Z0-9\\-.]+/\n};\n"]},"metadata":{},"sourceType":"script"}