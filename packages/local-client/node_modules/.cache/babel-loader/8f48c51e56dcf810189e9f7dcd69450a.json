{"ast":null,"code":"!function ($) {\n  var e = [\"$eq\", \"$gt\", \"$gte\", \"$in\", \"$lt\", \"$lte\", \"$ne\", \"$nin\", \"$and\", \"$not\", \"$nor\", \"$or\", \"$exists\", \"$type\", \"$expr\", \"$jsonSchema\", \"$mod\", \"$regex\", \"$text\", \"$where\", \"$geoIntersects\", \"$geoWithin\", \"$near\", \"$nearSphere\", \"$all\", \"$elemMatch\", \"$size\", \"$bitsAllClear\", \"$bitsAllSet\", \"$bitsAnyClear\", \"$bitsAnySet\", \"$comment\", \"$elemMatch\", \"$meta\", \"$slice\", \"$currentDate\", \"$inc\", \"$min\", \"$max\", \"$mul\", \"$rename\", \"$set\", \"$setOnInsert\", \"$unset\", \"$addToSet\", \"$pop\", \"$pull\", \"$push\", \"$pullAll\", \"$each\", \"$position\", \"$slice\", \"$sort\", \"$bit\", \"$addFields\", \"$bucket\", \"$bucketAuto\", \"$collStats\", \"$count\", \"$currentOp\", \"$facet\", \"$geoNear\", \"$graphLookup\", \"$group\", \"$indexStats\", \"$limit\", \"$listLocalSessions\", \"$listSessions\", \"$lookup\", \"$match\", \"$merge\", \"$out\", \"$planCacheStats\", \"$project\", \"$redact\", \"$replaceRoot\", \"$replaceWith\", \"$sample\", \"$set\", \"$skip\", \"$sort\", \"$sortByCount\", \"$unionWith\", \"$unset\", \"$unwind\", \"$abs\", \"$accumulator\", \"$acos\", \"$acosh\", \"$add\", \"$addToSet\", \"$allElementsTrue\", \"$and\", \"$anyElementTrue\", \"$arrayElemAt\", \"$arrayToObject\", \"$asin\", \"$asinh\", \"$atan\", \"$atan2\", \"$atanh\", \"$avg\", \"$binarySize\", \"$bsonSize\", \"$ceil\", \"$cmp\", \"$concat\", \"$concatArrays\", \"$cond\", \"$convert\", \"$cos\", \"$dateFromParts\", \"$dateToParts\", \"$dateFromString\", \"$dateToString\", \"$dayOfMonth\", \"$dayOfWeek\", \"$dayOfYear\", \"$degreesToRadians\", \"$divide\", \"$eq\", \"$exp\", \"$filter\", \"$first\", \"$floor\", \"$function\", \"$gt\", \"$gte\", \"$hour\", \"$ifNull\", \"$in\", \"$indexOfArray\", \"$indexOfBytes\", \"$indexOfCP\", \"$isArray\", \"$isNumber\", \"$isoDayOfWeek\", \"$isoWeek\", \"$isoWeekYear\", \"$last\", \"$last\", \"$let\", \"$literal\", \"$ln\", \"$log\", \"$log10\", \"$lt\", \"$lte\", \"$ltrim\", \"$map\", \"$max\", \"$mergeObjects\", \"$meta\", \"$min\", \"$millisecond\", \"$minute\", \"$mod\", \"$month\", \"$multiply\", \"$ne\", \"$not\", \"$objectToArray\", \"$or\", \"$pow\", \"$push\", \"$radiansToDegrees\", \"$range\", \"$reduce\", \"$regexFind\", \"$regexFindAll\", \"$regexMatch\", \"$replaceOne\", \"$replaceAll\", \"$reverseArray\", \"$round\", \"$rtrim\", \"$second\", \"$setDifference\", \"$setEquals\", \"$setIntersection\", \"$setIsSubset\", \"$setUnion\", \"$size\", \"$sin\", \"$slice\", \"$split\", \"$sqrt\", \"$stdDevPop\", \"$stdDevSamp\", \"$strcasecmp\", \"$strLenBytes\", \"$strLenCP\", \"$substr\", \"$substrBytes\", \"$substrCP\", \"$subtract\", \"$sum\", \"$switch\", \"$tan\", \"$toBool\", \"$toDate\", \"$toDecimal\", \"$toDouble\", \"$toInt\", \"$toLong\", \"$toObjectId\", \"$toString\", \"$toLower\", \"$toUpper\", \"$trim\", \"$trunc\", \"$type\", \"$week\", \"$year\", \"$zip\", \"$comment\", \"$explain\", \"$hint\", \"$max\", \"$maxTimeMS\", \"$min\", \"$orderby\", \"$query\", \"$returnKey\", \"$showDiskLoc\", \"$natural\"],\n      t = \"(?:\" + (e = e.map(function ($) {\n    return $.replace(\"$\", \"\\\\$\");\n  })).join(\"|\") + \")\\\\b\";\n  $.languages.mongodb = $.languages.extend(\"javascript\", {}), $.languages.insertBefore(\"mongodb\", \"string\", {\n    property: {\n      pattern: /(?:([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)(?=\\s*:)/,\n      greedy: !0,\n      inside: {\n        keyword: RegExp(\"^(['\\\"])?\" + t + \"(?:\\\\1)?$\")\n      }\n    }\n  }), $.languages.mongodb.string.inside = {\n    url: {\n      pattern: /https?:\\/\\/[-\\w@:%.+~#=]{1,256}\\.[a-z0-9()]{1,6}\\b[-\\w()@:%+.~#?&/=]*/i,\n      greedy: !0\n    },\n    entity: {\n      pattern: /\\b(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\b/,\n      greedy: !0\n    }\n  }, $.languages.insertBefore(\"mongodb\", \"constant\", {\n    builtin: {\n      pattern: RegExp(\"\\\\b(?:\" + [\"ObjectId\", \"Code\", \"BinData\", \"DBRef\", \"Timestamp\", \"NumberLong\", \"NumberDecimal\", \"MaxKey\", \"MinKey\", \"RegExp\", \"ISODate\", \"UUID\"].join(\"|\") + \")\\\\b\"),\n      alias: \"keyword\"\n    }\n  });\n}(Prism);","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/github/react-snippy/node_modules/prismjs/components/prism-mongodb.min.js"],"names":["$","e","t","map","replace","join","languages","mongodb","extend","insertBefore","property","pattern","greedy","inside","keyword","RegExp","string","url","entity","builtin","alias","Prism"],"mappings":"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","sourcesContent":["!function($){var e=[\"$eq\",\"$gt\",\"$gte\",\"$in\",\"$lt\",\"$lte\",\"$ne\",\"$nin\",\"$and\",\"$not\",\"$nor\",\"$or\",\"$exists\",\"$type\",\"$expr\",\"$jsonSchema\",\"$mod\",\"$regex\",\"$text\",\"$where\",\"$geoIntersects\",\"$geoWithin\",\"$near\",\"$nearSphere\",\"$all\",\"$elemMatch\",\"$size\",\"$bitsAllClear\",\"$bitsAllSet\",\"$bitsAnyClear\",\"$bitsAnySet\",\"$comment\",\"$elemMatch\",\"$meta\",\"$slice\",\"$currentDate\",\"$inc\",\"$min\",\"$max\",\"$mul\",\"$rename\",\"$set\",\"$setOnInsert\",\"$unset\",\"$addToSet\",\"$pop\",\"$pull\",\"$push\",\"$pullAll\",\"$each\",\"$position\",\"$slice\",\"$sort\",\"$bit\",\"$addFields\",\"$bucket\",\"$bucketAuto\",\"$collStats\",\"$count\",\"$currentOp\",\"$facet\",\"$geoNear\",\"$graphLookup\",\"$group\",\"$indexStats\",\"$limit\",\"$listLocalSessions\",\"$listSessions\",\"$lookup\",\"$match\",\"$merge\",\"$out\",\"$planCacheStats\",\"$project\",\"$redact\",\"$replaceRoot\",\"$replaceWith\",\"$sample\",\"$set\",\"$skip\",\"$sort\",\"$sortByCount\",\"$unionWith\",\"$unset\",\"$unwind\",\"$abs\",\"$accumulator\",\"$acos\",\"$acosh\",\"$add\",\"$addToSet\",\"$allElementsTrue\",\"$and\",\"$anyElementTrue\",\"$arrayElemAt\",\"$arrayToObject\",\"$asin\",\"$asinh\",\"$atan\",\"$atan2\",\"$atanh\",\"$avg\",\"$binarySize\",\"$bsonSize\",\"$ceil\",\"$cmp\",\"$concat\",\"$concatArrays\",\"$cond\",\"$convert\",\"$cos\",\"$dateFromParts\",\"$dateToParts\",\"$dateFromString\",\"$dateToString\",\"$dayOfMonth\",\"$dayOfWeek\",\"$dayOfYear\",\"$degreesToRadians\",\"$divide\",\"$eq\",\"$exp\",\"$filter\",\"$first\",\"$floor\",\"$function\",\"$gt\",\"$gte\",\"$hour\",\"$ifNull\",\"$in\",\"$indexOfArray\",\"$indexOfBytes\",\"$indexOfCP\",\"$isArray\",\"$isNumber\",\"$isoDayOfWeek\",\"$isoWeek\",\"$isoWeekYear\",\"$last\",\"$last\",\"$let\",\"$literal\",\"$ln\",\"$log\",\"$log10\",\"$lt\",\"$lte\",\"$ltrim\",\"$map\",\"$max\",\"$mergeObjects\",\"$meta\",\"$min\",\"$millisecond\",\"$minute\",\"$mod\",\"$month\",\"$multiply\",\"$ne\",\"$not\",\"$objectToArray\",\"$or\",\"$pow\",\"$push\",\"$radiansToDegrees\",\"$range\",\"$reduce\",\"$regexFind\",\"$regexFindAll\",\"$regexMatch\",\"$replaceOne\",\"$replaceAll\",\"$reverseArray\",\"$round\",\"$rtrim\",\"$second\",\"$setDifference\",\"$setEquals\",\"$setIntersection\",\"$setIsSubset\",\"$setUnion\",\"$size\",\"$sin\",\"$slice\",\"$split\",\"$sqrt\",\"$stdDevPop\",\"$stdDevSamp\",\"$strcasecmp\",\"$strLenBytes\",\"$strLenCP\",\"$substr\",\"$substrBytes\",\"$substrCP\",\"$subtract\",\"$sum\",\"$switch\",\"$tan\",\"$toBool\",\"$toDate\",\"$toDecimal\",\"$toDouble\",\"$toInt\",\"$toLong\",\"$toObjectId\",\"$toString\",\"$toLower\",\"$toUpper\",\"$trim\",\"$trunc\",\"$type\",\"$week\",\"$year\",\"$zip\",\"$comment\",\"$explain\",\"$hint\",\"$max\",\"$maxTimeMS\",\"$min\",\"$orderby\",\"$query\",\"$returnKey\",\"$showDiskLoc\",\"$natural\"],t=\"(?:\"+(e=e.map(function($){return $.replace(\"$\",\"\\\\$\")})).join(\"|\")+\")\\\\b\";$.languages.mongodb=$.languages.extend(\"javascript\",{}),$.languages.insertBefore(\"mongodb\",\"string\",{property:{pattern:/(?:([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)(?=\\s*:)/,greedy:!0,inside:{keyword:RegExp(\"^(['\\\"])?\"+t+\"(?:\\\\1)?$\")}}}),$.languages.mongodb.string.inside={url:{pattern:/https?:\\/\\/[-\\w@:%.+~#=]{1,256}\\.[a-z0-9()]{1,6}\\b[-\\w()@:%+.~#?&/=]*/i,greedy:!0},entity:{pattern:/\\b(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\b/,greedy:!0}},$.languages.insertBefore(\"mongodb\",\"constant\",{builtin:{pattern:RegExp(\"\\\\b(?:\"+[\"ObjectId\",\"Code\",\"BinData\",\"DBRef\",\"Timestamp\",\"NumberLong\",\"NumberDecimal\",\"MaxKey\",\"MinKey\",\"RegExp\",\"ISODate\",\"UUID\"].join(\"|\")+\")\\\\b\"),alias:\"keyword\"}})}(Prism);"]},"metadata":{},"sourceType":"script"}