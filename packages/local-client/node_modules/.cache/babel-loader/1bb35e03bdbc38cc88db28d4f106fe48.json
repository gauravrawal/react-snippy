{"ast":null,"code":"!function (a) {\n  var e = /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*|#(?!\\[).*/,\n      t = [{\n    pattern: /\\b(?:false|true)\\b/i,\n    alias: \"boolean\"\n  }, {\n    pattern: /(::\\s*)\\b[a-z_]\\w*\\b(?!\\s*\\()/i,\n    greedy: !0,\n    lookbehind: !0\n  }, {\n    pattern: /(\\b(?:case|const)\\s+)\\b[a-z_]\\w*(?=\\s*[;=])/i,\n    greedy: !0,\n    lookbehind: !0\n  }, /\\b(?:null)\\b/i, /\\b[A-Z_][A-Z0-9_]*\\b(?!\\s*\\()/],\n      i = /\\b0b[01]+(?:_[01]+)*\\b|\\b0o[0-7]+(?:_[0-7]+)*\\b|\\b0x[\\da-f]+(?:_[\\da-f]+)*\\b|(?:\\b\\d+(?:_\\d+)*\\.?(?:\\d+(?:_\\d+)*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n      n = /<?=>|\\?\\?=?|\\.{3}|\\??->|[!=]=?=?|::|\\*\\*=?|--|\\+\\+|&&|\\|\\||<<|>>|[?~]|[/^|%*&<>.+-]=?/,\n      s = /[{}\\[\\](),:;]/;\n  a.languages.php = {\n    delimiter: {\n      pattern: /\\?>$|^<\\?(?:php(?=\\s)|=)?/i,\n      alias: \"important\"\n    },\n    comment: e,\n    variable: /\\$+(?:\\w+\\b|(?=\\{))/i,\n    package: {\n      pattern: /(namespace\\s+|use\\s+(?:function\\s+)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n      lookbehind: !0,\n      inside: {\n        punctuation: /\\\\/\n      }\n    },\n    \"class-name-definition\": {\n      pattern: /(\\b(?:class|enum|interface|trait)\\s+)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n      lookbehind: !0,\n      alias: \"class-name\"\n    },\n    \"function-definition\": {\n      pattern: /(\\bfunction\\s+)[a-z_]\\w*(?=\\s*\\()/i,\n      lookbehind: !0,\n      alias: \"function\"\n    },\n    keyword: [{\n      pattern: /(\\(\\s*)\\b(?:bool|boolean|int|integer|float|string|object|array)\\b(?=\\s*\\))/i,\n      alias: \"type-casting\",\n      greedy: !0,\n      lookbehind: !0\n    }, {\n      pattern: /([(,?]\\s*)\\b(?:bool|int|float|string|object|array(?!\\s*\\()|mixed|self|static|callable|iterable|(?:null|false)(?=\\s*\\|))\\b(?=\\s*\\$)/i,\n      alias: \"type-hint\",\n      greedy: !0,\n      lookbehind: !0\n    }, {\n      pattern: /([(,?]\\s*[\\w|]\\|\\s*)(?:null|false)\\b(?=\\s*\\$)/i,\n      alias: \"type-hint\",\n      greedy: !0,\n      lookbehind: !0\n    }, {\n      pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)\\b(?:bool|int|float|string|object|void|array(?!\\s*\\()|mixed|self|static|callable|iterable|(?:null|false)(?=\\s*\\|))\\b/i,\n      alias: \"return-type\",\n      greedy: !0,\n      lookbehind: !0\n    }, {\n      pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?[\\w|]\\|\\s*)(?:null|false)\\b/i,\n      alias: \"return-type\",\n      greedy: !0,\n      lookbehind: !0\n    }, {\n      pattern: /\\b(?:bool|int|float|string|object|void|array(?!\\s*\\()|mixed|iterable|(?:null|false)(?=\\s*\\|))\\b/i,\n      alias: \"type-declaration\",\n      greedy: !0\n    }, {\n      pattern: /(\\|\\s*)(?:null|false)\\b/i,\n      alias: \"type-declaration\",\n      greedy: !0,\n      lookbehind: !0\n    }, {\n      pattern: /\\b(?:parent|self|static)(?=\\s*::)/i,\n      alias: \"static-context\",\n      greedy: !0\n    }, {\n      pattern: /(\\byield\\s+)from\\b/i,\n      lookbehind: !0\n    }, /\\bclass\\b/i, {\n      pattern: /((?:^|[^\\s>:]|(?:^|[^-])>|(?:^|[^:]):)\\s*)\\b(?:__halt_compiler|abstract|and|array|as|break|callable|case|catch|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|enum|eval|exit|extends|final|finally|fn|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|namespace|match|new|or|parent|print|private|protected|public|require|require_once|return|self|static|switch|throw|trait|try|unset|use|var|while|xor|yield)\\b/i,\n      lookbehind: !0\n    }],\n    \"argument-name\": {\n      pattern: /([(,]\\s+)\\b[a-z_]\\w*(?=\\s*:(?!:))/i,\n      lookbehind: !0\n    },\n    \"class-name\": [{\n      pattern: /(\\b(?:extends|implements|instanceof|new(?!\\s+self|\\s+static))\\s+|\\bcatch\\s*\\()\\b[a-z_]\\w*(?!\\\\)\\b/i,\n      greedy: !0,\n      lookbehind: !0\n    }, {\n      pattern: /(\\|\\s*)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n      greedy: !0,\n      lookbehind: !0\n    }, {\n      pattern: /\\b[a-z_]\\w*(?!\\\\)\\b(?=\\s*\\|)/i,\n      greedy: !0\n    }, {\n      pattern: /(\\|\\s*)(?:\\\\?\\b[a-z_]\\w*)+\\b/i,\n      alias: \"class-name-fully-qualified\",\n      greedy: !0,\n      lookbehind: !0,\n      inside: {\n        punctuation: /\\\\/\n      }\n    }, {\n      pattern: /(?:\\\\?\\b[a-z_]\\w*)+\\b(?=\\s*\\|)/i,\n      alias: \"class-name-fully-qualified\",\n      greedy: !0,\n      inside: {\n        punctuation: /\\\\/\n      }\n    }, {\n      pattern: /(\\b(?:extends|implements|instanceof|new(?!\\s+self\\b|\\s+static\\b))\\s+|\\bcatch\\s*\\()(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n      alias: \"class-name-fully-qualified\",\n      greedy: !0,\n      lookbehind: !0,\n      inside: {\n        punctuation: /\\\\/\n      }\n    }, {\n      pattern: /\\b[a-z_]\\w*(?=\\s*\\$)/i,\n      alias: \"type-declaration\",\n      greedy: !0\n    }, {\n      pattern: /(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,\n      alias: [\"class-name-fully-qualified\", \"type-declaration\"],\n      greedy: !0,\n      inside: {\n        punctuation: /\\\\/\n      }\n    }, {\n      pattern: /\\b[a-z_]\\w*(?=\\s*::)/i,\n      alias: \"static-context\",\n      greedy: !0\n    }, {\n      pattern: /(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*::)/i,\n      alias: [\"class-name-fully-qualified\", \"static-context\"],\n      greedy: !0,\n      inside: {\n        punctuation: /\\\\/\n      }\n    }, {\n      pattern: /([(,?]\\s*)[a-z_]\\w*(?=\\s*\\$)/i,\n      alias: \"type-hint\",\n      greedy: !0,\n      lookbehind: !0\n    }, {\n      pattern: /([(,?]\\s*)(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,\n      alias: [\"class-name-fully-qualified\", \"type-hint\"],\n      greedy: !0,\n      lookbehind: !0,\n      inside: {\n        punctuation: /\\\\/\n      }\n    }, {\n      pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n      alias: \"return-type\",\n      greedy: !0,\n      lookbehind: !0\n    }, {\n      pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n      alias: [\"class-name-fully-qualified\", \"return-type\"],\n      greedy: !0,\n      lookbehind: !0,\n      inside: {\n        punctuation: /\\\\/\n      }\n    }],\n    constant: t,\n    function: {\n      pattern: /(^|[^\\\\\\w])\\\\?[a-z_](?:[\\w\\\\]*\\w)?(?=\\s*\\()/i,\n      lookbehind: !0,\n      inside: {\n        punctuation: /\\\\/\n      }\n    },\n    property: {\n      pattern: /(->\\s*)\\w+/,\n      lookbehind: !0\n    },\n    number: i,\n    operator: n,\n    punctuation: s\n  };\n  var l = {\n    pattern: /\\{\\$(?:\\{(?:\\{[^{}]+\\}|[^{}]+)\\}|[^{}])+\\}|(^|[^\\\\{])\\$+(?:\\w+(?:\\[[^\\r\\n\\[\\]]+\\]|->\\w+)?)/,\n    lookbehind: !0,\n    inside: a.languages.php\n  },\n      r = [{\n    pattern: /<<<'([^']+)'[\\r\\n](?:.*[\\r\\n])*?\\1;/,\n    alias: \"nowdoc-string\",\n    greedy: !0,\n    inside: {\n      delimiter: {\n        pattern: /^<<<'[^']+'|[a-z_]\\w*;$/i,\n        alias: \"symbol\",\n        inside: {\n          punctuation: /^<<<'?|[';]$/\n        }\n      }\n    }\n  }, {\n    pattern: /<<<(?:\"([^\"]+)\"[\\r\\n](?:.*[\\r\\n])*?\\1;|([a-z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?\\2;)/i,\n    alias: \"heredoc-string\",\n    greedy: !0,\n    inside: {\n      delimiter: {\n        pattern: /^<<<(?:\"[^\"]+\"|[a-z_]\\w*)|[a-z_]\\w*;$/i,\n        alias: \"symbol\",\n        inside: {\n          punctuation: /^<<<\"?|[\";]$/\n        }\n      },\n      interpolation: l\n    }\n  }, {\n    pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n    alias: \"backtick-quoted-string\",\n    greedy: !0\n  }, {\n    pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n    alias: \"single-quoted-string\",\n    greedy: !0\n  }, {\n    pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n    alias: \"double-quoted-string\",\n    greedy: !0,\n    inside: {\n      interpolation: l\n    }\n  }];\n  a.languages.insertBefore(\"php\", \"variable\", {\n    string: r,\n    attribute: {\n      pattern: /#\\[(?:[^\"'\\/#]|\\/(?![*/])|\\/\\/.*$|#(?!\\[).*$|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*')+\\](?=\\s*[a-z$#])/im,\n      greedy: !0,\n      inside: {\n        \"attribute-content\": {\n          pattern: /^(#\\[)[\\s\\S]+(?=\\]$)/,\n          lookbehind: !0,\n          inside: {\n            comment: e,\n            string: r,\n            \"attribute-class-name\": [{\n              pattern: /([^:]|^)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n              alias: \"class-name\",\n              greedy: !0,\n              lookbehind: !0\n            }, {\n              pattern: /([^:]|^)(?:\\\\?\\b[a-z_]\\w*)+/i,\n              alias: [\"class-name\", \"class-name-fully-qualified\"],\n              greedy: !0,\n              lookbehind: !0,\n              inside: {\n                punctuation: /\\\\/\n              }\n            }],\n            constant: t,\n            number: i,\n            operator: n,\n            punctuation: s\n          }\n        },\n        delimiter: {\n          pattern: /^#\\[|\\]$/,\n          alias: \"punctuation\"\n        }\n      }\n    }\n  }), a.hooks.add(\"before-tokenize\", function (e) {\n    if (/<\\?/.test(e.code)) {\n      a.languages[\"markup-templating\"].buildPlaceholders(e, \"php\", /<\\?(?:[^\"'/#]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|(?:\\/\\/|#(?!\\[))(?:[^?\\n\\r]|\\?(?!>))*(?=$|\\?>|[\\r\\n])|#\\[|\\/\\*(?:[^*]|\\*(?!\\/))*(?:\\*\\/|$))*?(?:\\?>|$)/gi);\n    }\n  }), a.hooks.add(\"after-tokenize\", function (e) {\n    a.languages[\"markup-templating\"].tokenizePlaceholders(e, \"php\");\n  });\n}(Prism);","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/github/react-snippy/node_modules/prismjs/components/prism-php.min.js"],"names":["a","e","t","pattern","alias","greedy","lookbehind","i","n","s","languages","php","delimiter","comment","variable","package","inside","punctuation","keyword","constant","function","property","number","operator","l","r","interpolation","insertBefore","string","attribute","hooks","add","test","code","buildPlaceholders","tokenizePlaceholders","Prism"],"mappings":"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","sourcesContent":["!function(a){var e=/\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*|#(?!\\[).*/,t=[{pattern:/\\b(?:false|true)\\b/i,alias:\"boolean\"},{pattern:/(::\\s*)\\b[a-z_]\\w*\\b(?!\\s*\\()/i,greedy:!0,lookbehind:!0},{pattern:/(\\b(?:case|const)\\s+)\\b[a-z_]\\w*(?=\\s*[;=])/i,greedy:!0,lookbehind:!0},/\\b(?:null)\\b/i,/\\b[A-Z_][A-Z0-9_]*\\b(?!\\s*\\()/],i=/\\b0b[01]+(?:_[01]+)*\\b|\\b0o[0-7]+(?:_[0-7]+)*\\b|\\b0x[\\da-f]+(?:_[\\da-f]+)*\\b|(?:\\b\\d+(?:_\\d+)*\\.?(?:\\d+(?:_\\d+)*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,n=/<?=>|\\?\\?=?|\\.{3}|\\??->|[!=]=?=?|::|\\*\\*=?|--|\\+\\+|&&|\\|\\||<<|>>|[?~]|[/^|%*&<>.+-]=?/,s=/[{}\\[\\](),:;]/;a.languages.php={delimiter:{pattern:/\\?>$|^<\\?(?:php(?=\\s)|=)?/i,alias:\"important\"},comment:e,variable:/\\$+(?:\\w+\\b|(?=\\{))/i,package:{pattern:/(namespace\\s+|use\\s+(?:function\\s+)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,lookbehind:!0,inside:{punctuation:/\\\\/}},\"class-name-definition\":{pattern:/(\\b(?:class|enum|interface|trait)\\s+)\\b[a-z_]\\w*(?!\\\\)\\b/i,lookbehind:!0,alias:\"class-name\"},\"function-definition\":{pattern:/(\\bfunction\\s+)[a-z_]\\w*(?=\\s*\\()/i,lookbehind:!0,alias:\"function\"},keyword:[{pattern:/(\\(\\s*)\\b(?:bool|boolean|int|integer|float|string|object|array)\\b(?=\\s*\\))/i,alias:\"type-casting\",greedy:!0,lookbehind:!0},{pattern:/([(,?]\\s*)\\b(?:bool|int|float|string|object|array(?!\\s*\\()|mixed|self|static|callable|iterable|(?:null|false)(?=\\s*\\|))\\b(?=\\s*\\$)/i,alias:\"type-hint\",greedy:!0,lookbehind:!0},{pattern:/([(,?]\\s*[\\w|]\\|\\s*)(?:null|false)\\b(?=\\s*\\$)/i,alias:\"type-hint\",greedy:!0,lookbehind:!0},{pattern:/(\\)\\s*:\\s*(?:\\?\\s*)?)\\b(?:bool|int|float|string|object|void|array(?!\\s*\\()|mixed|self|static|callable|iterable|(?:null|false)(?=\\s*\\|))\\b/i,alias:\"return-type\",greedy:!0,lookbehind:!0},{pattern:/(\\)\\s*:\\s*(?:\\?\\s*)?[\\w|]\\|\\s*)(?:null|false)\\b/i,alias:\"return-type\",greedy:!0,lookbehind:!0},{pattern:/\\b(?:bool|int|float|string|object|void|array(?!\\s*\\()|mixed|iterable|(?:null|false)(?=\\s*\\|))\\b/i,alias:\"type-declaration\",greedy:!0},{pattern:/(\\|\\s*)(?:null|false)\\b/i,alias:\"type-declaration\",greedy:!0,lookbehind:!0},{pattern:/\\b(?:parent|self|static)(?=\\s*::)/i,alias:\"static-context\",greedy:!0},{pattern:/(\\byield\\s+)from\\b/i,lookbehind:!0},/\\bclass\\b/i,{pattern:/((?:^|[^\\s>:]|(?:^|[^-])>|(?:^|[^:]):)\\s*)\\b(?:__halt_compiler|abstract|and|array|as|break|callable|case|catch|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|enum|eval|exit|extends|final|finally|fn|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|namespace|match|new|or|parent|print|private|protected|public|require|require_once|return|self|static|switch|throw|trait|try|unset|use|var|while|xor|yield)\\b/i,lookbehind:!0}],\"argument-name\":{pattern:/([(,]\\s+)\\b[a-z_]\\w*(?=\\s*:(?!:))/i,lookbehind:!0},\"class-name\":[{pattern:/(\\b(?:extends|implements|instanceof|new(?!\\s+self|\\s+static))\\s+|\\bcatch\\s*\\()\\b[a-z_]\\w*(?!\\\\)\\b/i,greedy:!0,lookbehind:!0},{pattern:/(\\|\\s*)\\b[a-z_]\\w*(?!\\\\)\\b/i,greedy:!0,lookbehind:!0},{pattern:/\\b[a-z_]\\w*(?!\\\\)\\b(?=\\s*\\|)/i,greedy:!0},{pattern:/(\\|\\s*)(?:\\\\?\\b[a-z_]\\w*)+\\b/i,alias:\"class-name-fully-qualified\",greedy:!0,lookbehind:!0,inside:{punctuation:/\\\\/}},{pattern:/(?:\\\\?\\b[a-z_]\\w*)+\\b(?=\\s*\\|)/i,alias:\"class-name-fully-qualified\",greedy:!0,inside:{punctuation:/\\\\/}},{pattern:/(\\b(?:extends|implements|instanceof|new(?!\\s+self\\b|\\s+static\\b))\\s+|\\bcatch\\s*\\()(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,alias:\"class-name-fully-qualified\",greedy:!0,lookbehind:!0,inside:{punctuation:/\\\\/}},{pattern:/\\b[a-z_]\\w*(?=\\s*\\$)/i,alias:\"type-declaration\",greedy:!0},{pattern:/(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,alias:[\"class-name-fully-qualified\",\"type-declaration\"],greedy:!0,inside:{punctuation:/\\\\/}},{pattern:/\\b[a-z_]\\w*(?=\\s*::)/i,alias:\"static-context\",greedy:!0},{pattern:/(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*::)/i,alias:[\"class-name-fully-qualified\",\"static-context\"],greedy:!0,inside:{punctuation:/\\\\/}},{pattern:/([(,?]\\s*)[a-z_]\\w*(?=\\s*\\$)/i,alias:\"type-hint\",greedy:!0,lookbehind:!0},{pattern:/([(,?]\\s*)(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,alias:[\"class-name-fully-qualified\",\"type-hint\"],greedy:!0,lookbehind:!0,inside:{punctuation:/\\\\/}},{pattern:/(\\)\\s*:\\s*(?:\\?\\s*)?)\\b[a-z_]\\w*(?!\\\\)\\b/i,alias:\"return-type\",greedy:!0,lookbehind:!0},{pattern:/(\\)\\s*:\\s*(?:\\?\\s*)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,alias:[\"class-name-fully-qualified\",\"return-type\"],greedy:!0,lookbehind:!0,inside:{punctuation:/\\\\/}}],constant:t,function:{pattern:/(^|[^\\\\\\w])\\\\?[a-z_](?:[\\w\\\\]*\\w)?(?=\\s*\\()/i,lookbehind:!0,inside:{punctuation:/\\\\/}},property:{pattern:/(->\\s*)\\w+/,lookbehind:!0},number:i,operator:n,punctuation:s};var l={pattern:/\\{\\$(?:\\{(?:\\{[^{}]+\\}|[^{}]+)\\}|[^{}])+\\}|(^|[^\\\\{])\\$+(?:\\w+(?:\\[[^\\r\\n\\[\\]]+\\]|->\\w+)?)/,lookbehind:!0,inside:a.languages.php},r=[{pattern:/<<<'([^']+)'[\\r\\n](?:.*[\\r\\n])*?\\1;/,alias:\"nowdoc-string\",greedy:!0,inside:{delimiter:{pattern:/^<<<'[^']+'|[a-z_]\\w*;$/i,alias:\"symbol\",inside:{punctuation:/^<<<'?|[';]$/}}}},{pattern:/<<<(?:\"([^\"]+)\"[\\r\\n](?:.*[\\r\\n])*?\\1;|([a-z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?\\2;)/i,alias:\"heredoc-string\",greedy:!0,inside:{delimiter:{pattern:/^<<<(?:\"[^\"]+\"|[a-z_]\\w*)|[a-z_]\\w*;$/i,alias:\"symbol\",inside:{punctuation:/^<<<\"?|[\";]$/}},interpolation:l}},{pattern:/`(?:\\\\[\\s\\S]|[^\\\\`])*`/,alias:\"backtick-quoted-string\",greedy:!0},{pattern:/'(?:\\\\[\\s\\S]|[^\\\\'])*'/,alias:\"single-quoted-string\",greedy:!0},{pattern:/\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,alias:\"double-quoted-string\",greedy:!0,inside:{interpolation:l}}];a.languages.insertBefore(\"php\",\"variable\",{string:r,attribute:{pattern:/#\\[(?:[^\"'\\/#]|\\/(?![*/])|\\/\\/.*$|#(?!\\[).*$|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*')+\\](?=\\s*[a-z$#])/im,greedy:!0,inside:{\"attribute-content\":{pattern:/^(#\\[)[\\s\\S]+(?=\\]$)/,lookbehind:!0,inside:{comment:e,string:r,\"attribute-class-name\":[{pattern:/([^:]|^)\\b[a-z_]\\w*(?!\\\\)\\b/i,alias:\"class-name\",greedy:!0,lookbehind:!0},{pattern:/([^:]|^)(?:\\\\?\\b[a-z_]\\w*)+/i,alias:[\"class-name\",\"class-name-fully-qualified\"],greedy:!0,lookbehind:!0,inside:{punctuation:/\\\\/}}],constant:t,number:i,operator:n,punctuation:s}},delimiter:{pattern:/^#\\[|\\]$/,alias:\"punctuation\"}}}}),a.hooks.add(\"before-tokenize\",function(e){if(/<\\?/.test(e.code)){a.languages[\"markup-templating\"].buildPlaceholders(e,\"php\",/<\\?(?:[^\"'/#]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|(?:\\/\\/|#(?!\\[))(?:[^?\\n\\r]|\\?(?!>))*(?=$|\\?>|[\\r\\n])|#\\[|\\/\\*(?:[^*]|\\*(?!\\/))*(?:\\*\\/|$))*?(?:\\?>|$)/gi)}}),a.hooks.add(\"after-tokenize\",function(e){a.languages[\"markup-templating\"].tokenizePlaceholders(e,\"php\")})}(Prism);"]},"metadata":{},"sourceType":"script"}