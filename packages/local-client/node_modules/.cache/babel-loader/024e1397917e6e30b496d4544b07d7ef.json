{"ast":null,"code":"import React, { useEffect, useMemo, useRef } from 'react';\nimport \"./index.css\";\n\nvar DragBar = function DragBar(props) {\n  var _ref = props || {},\n      prefixCls = _ref.prefixCls,\n      onChange = _ref.onChange;\n\n  var dragRef = useRef();\n\n  function handleMouseMove(event) {\n    if (dragRef.current) {\n      var newHeight = dragRef.current.height + event.clientY - dragRef.current.dragY;\n\n      if (newHeight >= props.minHeight && newHeight <= props.maxHeight) {\n        onChange && onChange(dragRef.current.height + (event.clientY - dragRef.current.dragY));\n      }\n    }\n  }\n\n  function handleMouseUp() {\n    dragRef.current = undefined;\n  }\n\n  function handleMouseDown(event) {\n    dragRef.current = {\n      height: props.height,\n      dragY: event.clientY\n    };\n  }\n\n  useEffect(function () {\n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n    return function () {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, []);\n  var svg = useMemo(function () {\n    return /*#__PURE__*/React.createElement(\"svg\", {\n      viewBox: \"0 0 512 512\",\n      height: \"100%\"\n    }, /*#__PURE__*/React.createElement(\"path\", {\n      fill: \"currentColor\",\n      d: \"M304 256c0 26.5-21.5 48-48 48s-48-21.5-48-48 21.5-48 48-48 48 21.5 48 48zm120-48c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48zm-336 0c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48z\"\n    }));\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-bar\"),\n    onMouseDown: handleMouseDown\n  }, svg);\n};\n\nexport default DragBar;","map":{"version":3,"sources":["../../../../src/components/DragBar/index.tsx"],"names":["DragBar","prefixCls","onChange","props","dragRef","useRef","newHeight","event","height","dragY","clientY","useEffect","document","svg","useMemo","handleMouseDown"],"mappings":"AAAA,OAAA,KAAA,IAAA,SAAA,EAAA,OAAA,EAAA,MAAA,QAAA,OAAA;AAEA,OAAA,aAAA;;AASA,IAAMA,OAAgC,GAAG,SAAnCA,OAAmC,CAAA,KAAA,EAAW;AAAA,MAAA,IAAA,GAClBG,KAAK,IADa,EAAA;AAAA,MAC1CF,SAD0C,GAAA,IAAA,CAAA,SAAA;AAAA,MAC/BC,QAD+B,GAAA,IAAA,CAAA,QAAA;;AAElD,MAAME,OAAO,GAAGC,MAAhB,EAAA;;AACA,WAAA,eAAA,CAAA,KAAA,EAA4C;AAC1C,QAAID,OAAO,CAAX,OAAA,EAAqB;AACnB,UAAME,SAAS,GAAGF,OAAO,CAAPA,OAAAA,CAAAA,MAAAA,GAAyBG,KAAK,CAA9BH,OAAAA,GAAyCA,OAAO,CAAPA,OAAAA,CAA3D,KAAA;;AACA,UAAIE,SAAS,IAAIH,KAAK,CAAlBG,SAAAA,IAAgCA,SAAS,IAAIH,KAAK,CAAtD,SAAA,EAAkE;AAChED,QAAAA,QAAQ,IAAIA,QAAQ,CAACE,OAAO,CAAPA,OAAAA,CAAAA,MAAAA,IAA0BG,KAAK,CAALA,OAAAA,GAAgBH,OAAO,CAAPA,OAAAA,CAA/DF,KAAqBE,CAAD,CAApBF;AACD;AACF;AACF;;AACD,WAAA,aAAA,GAAyB;AACvBE,IAAAA,OAAO,CAAPA,OAAAA,GAAAA,SAAAA;AACD;;AACD,WAAA,eAAA,CAAA,KAAA,EAA8E;AAC5EA,IAAAA,OAAO,CAAPA,OAAAA,GAAkB;AAChBI,MAAAA,MAAM,EAAEL,KAAK,CADG,MAAA;AAEhBM,MAAAA,KAAK,EAAEF,KAAK,CAACG;AAFG,KAAlBN;AAID;;AAEDO,EAAAA,SAAS,CAAC,YAAM;AACdC,IAAAA,QAAQ,CAARA,gBAAAA,CAAAA,WAAAA,EAAAA,eAAAA;AACAA,IAAAA,QAAQ,CAARA,gBAAAA,CAAAA,SAAAA,EAAAA,aAAAA;AACA,WAAO,YAAM;AACXA,MAAAA,QAAQ,CAARA,mBAAAA,CAAAA,WAAAA,EAAAA,eAAAA;AACAA,MAAAA,QAAQ,CAARA,mBAAAA,CAAAA,SAAAA,EAAAA,aAAAA;AAFF,KAAA;AAHO,GAAA,EAATD,EAAS,CAATA;AAQA,MAAME,GAAG,GAAGC,OAAO,CAAC,YAAA;AAAA,WAAA,aAClB,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,OAAO,EAAZ,aAAA;AAA2B,MAAA,MAAM,EAAC;AAAlC,KAAA,EAAA,aACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,MAAA,IAAI,EAAV,cAAA;AAA0B,MAAA,CAAC,EAAC;AAA5B,KAAA,CADF,CADkB;AAAD,GAAA,EAAnB,EAAmB,CAAnB;AAKA,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAA,GAAA,MAAA,CAAA,SAAA,EAAd,MAAc,CAAd;AAAoC,IAAA,WAAW,EAAEC;AAAjD,GAAA,EADF,GACE,CADF;AAlCF,CAAA;;AAyCA,eAAA,OAAA","sourcesContent":["import React, { useEffect, useMemo, useRef } from 'react';\nimport { IProps } from '../../utils';\nimport './index.less';\n\nexport interface IDragBarProps extends IProps {\n  height: number;\n  maxHeight: number;\n  minHeight: number;\n  onChange: (value: number) => void;\n}\n\nconst DragBar: React.FC<IDragBarProps> = (props) => {\n  const { prefixCls, onChange } = props || {};\n  const dragRef = useRef<{ height: number, dragY: number }>();\n  function handleMouseMove(event: MouseEvent) {\n    if (dragRef.current) {\n      const newHeight = dragRef.current.height + event.clientY - dragRef.current.dragY;\n      if (newHeight >= props.minHeight && newHeight <= props.maxHeight) {\n        onChange && onChange(dragRef.current.height + (event.clientY - dragRef.current.dragY));\n      }\n    }\n  }\n  function handleMouseUp() {\n    dragRef.current = undefined;\n  }\n  function handleMouseDown(event: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    dragRef.current = {\n      height: props.height,\n      dragY: event.clientY\n    };\n  }\n\n  useEffect(() => {\n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    }\n  }, []);\n  const svg = useMemo(() => (\n    <svg viewBox=\"0 0 512 512\" height=\"100%\">\n      <path fill=\"currentColor\" d=\"M304 256c0 26.5-21.5 48-48 48s-48-21.5-48-48 21.5-48 48-48 48 21.5 48 48zm120-48c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48zm-336 0c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48z\" />\n    </svg>\n  ), []);\n  return (\n    <div className={`${prefixCls}-bar`} onMouseDown={handleMouseDown}>\n      {svg}\n    </div>\n  );\n}\n\nexport default DragBar;\n"]},"metadata":{},"sourceType":"module"}