{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nmodule.exports = function (arrays) {\n  const result = new Set(arrays[0]);\n  let resultSize = result.length;\n  let i, value, valuesToCheck;\n\n  for (i = 1; i < arrays.length; i++) {\n    valuesToCheck = new Set(arrays[i]);\n\n    for (value of result) {\n      if (!valuesToCheck.has(value)) {\n        result.delete(value);\n        resultSize -= 1;\n      }\n\n      if (resultSize === 0) {\n        return [];\n      }\n    }\n  }\n\n  return Array.from(result);\n};","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/jbook/node_modules/jscodeshift/src/utils/intersection.js"],"names":["module","exports","arrays","result","Set","resultSize","length","i","value","valuesToCheck","has","delete","Array","from"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEAA,MAAM,CAACC,OAAP,GAAiB,UAASC,MAAT,EAAiB;AAChC,QAAMC,MAAM,GAAG,IAAIC,GAAJ,CAAQF,MAAM,CAAC,CAAD,CAAd,CAAf;AACA,MAAIG,UAAU,GAAGF,MAAM,CAACG,MAAxB;AAEA,MAAIC,CAAJ,EAAOC,KAAP,EAAcC,aAAd;;AACA,OAAKF,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGL,MAAM,CAACI,MAAvB,EAA+BC,CAAC,EAAhC,EAAoC;AAClCE,IAAAA,aAAa,GAAG,IAAIL,GAAJ,CAAQF,MAAM,CAACK,CAAD,CAAd,CAAhB;;AACA,SAAKC,KAAL,IAAcL,MAAd,EAAsB;AACpB,UAAI,CAACM,aAAa,CAACC,GAAd,CAAkBF,KAAlB,CAAL,EAA+B;AAC7BL,QAAAA,MAAM,CAACQ,MAAP,CAAcH,KAAd;AACAH,QAAAA,UAAU,IAAI,CAAd;AACD;;AACD,UAAIA,UAAU,KAAK,CAAnB,EAAsB;AACpB,eAAO,EAAP;AACD;AACF;AACF;;AAED,SAAOO,KAAK,CAACC,IAAN,CAAWV,MAAX,CAAP;AACD,CAnBD","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nmodule.exports = function(arrays) {\n  const result = new Set(arrays[0]);\n  let resultSize = result.length;\n\n  let i, value, valuesToCheck;\n  for (i = 1; i < arrays.length; i++) {\n    valuesToCheck = new Set(arrays[i]);\n    for (value of result) {\n      if (!valuesToCheck.has(value)) {\n        result.delete(value);\n        resultSize -= 1;\n      }\n      if (resultSize === 0) {\n        return [];\n      }\n    }\n  }\n\n  return Array.from(result);\n};\n"]},"metadata":{},"sourceType":"script"}