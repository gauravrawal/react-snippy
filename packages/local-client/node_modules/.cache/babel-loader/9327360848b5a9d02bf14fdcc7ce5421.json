{"ast":null,"code":"(function (Prism) {\n  // CAREFUL!\n  // The following patterns are concatenated, so the group referenced by a back reference is non-obvious!\n  var strings = [// normal string\n  /\"(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|[^\"\\\\`$])*\"/.source, /'[^']*'/.source, /\\$'(?:[^'\\\\]|\\\\[\\s\\S])*'/.source, // here doc\n  // 2 capturing groups\n  /<<-?\\s*([\"']?)(\\w+)\\1\\s[\\s\\S]*?[\\r\\n]\\2/.source].join('|');\n  Prism.languages['shell-session'] = {\n    'command': {\n      pattern: RegExp( // user info\n      /^(?:[^\\s@:$#*!/\\\\]+@[^\\r\\n@:$#*!/\\\\]+(?::[^\\0-\\x1F$#*?\"<>:;|]+)?|[^\\0-\\x1F$#*?\"<>@:;|]+)?/.source + // shell symbol\n      /[$#]/.source + // bash command\n      /(?:[^\\\\\\r\\n'\"<$]|\\\\(?:[^\\r]|\\r\\n?)|\\$(?!')|<<str>>)+/.source.replace(/<<str>>/g, function () {\n        return strings;\n      }), 'm'),\n      greedy: true,\n      inside: {\n        'info': {\n          // foo@bar:~/files$ exit\n          // foo@bar$ exit\n          // ~/files$ exit\n          pattern: /^[^#$]+/,\n          alias: 'punctuation',\n          inside: {\n            'user': /^[^\\s@:$#*!/\\\\]+@[^\\r\\n@:$#*!/\\\\]+/,\n            'punctuation': /:/,\n            'path': /[\\s\\S]+/\n          }\n        },\n        'bash': {\n          pattern: /(^[$#]\\s*)\\S[\\s\\S]*/,\n          lookbehind: true,\n          alias: 'language-bash',\n          inside: Prism.languages.bash\n        },\n        'shell-symbol': {\n          pattern: /^[$#]/,\n          alias: 'important'\n        }\n      }\n    },\n    'output': /.(?:.*(?:[\\r\\n]|.$))*/\n  };\n  Prism.languages['sh-session'] = Prism.languages['shellsession'] = Prism.languages['shell-session'];\n})(Prism);","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/github/react-snippy/node_modules/prismjs/components/prism-shell-session.js"],"names":["Prism","strings","source","join","languages","pattern","RegExp","replace","greedy","inside","alias","lookbehind","bash"],"mappings":"AAAC,WAAUA,KAAV,EAAiB;AAEjB;AACA;AAEA,MAAIC,OAAO,GAAG,CACb;AACA,0DAAwDC,MAF3C,EAGb,UAAUA,MAHG,EAIb,2BAA2BA,MAJd,EAMb;AACA;AACA,4CAA0CA,MAR7B,EASZC,IATY,CASP,GATO,CAAd;AAWAH,EAAAA,KAAK,CAACI,SAAN,CAAgB,eAAhB,IAAmC;AAClC,eAAW;AACVC,MAAAA,OAAO,EAAEC,MAAM,EACd;AACA,kGAA4FJ,MAA5F,GACA;AACA,aAAOA,MAFP,GAGA;AACA,6DAAuDA,MAAvD,CAA8DK,OAA9D,CAAsE,UAAtE,EAAkF,YAAY;AAAE,eAAON,OAAP;AAAiB,OAAjH,CANc,EAOd,GAPc,CADL;AAUVO,MAAAA,MAAM,EAAE,IAVE;AAWVC,MAAAA,MAAM,EAAE;AACP,gBAAQ;AACP;AACA;AACA;AACAJ,UAAAA,OAAO,EAAE,SAJF;AAKPK,UAAAA,KAAK,EAAE,aALA;AAMPD,UAAAA,MAAM,EAAE;AACP,oBAAQ,oCADD;AAEP,2BAAe,GAFR;AAGP,oBAAQ;AAHD;AAND,SADD;AAaP,gBAAQ;AACPJ,UAAAA,OAAO,EAAE,qBADF;AAEPM,UAAAA,UAAU,EAAE,IAFL;AAGPD,UAAAA,KAAK,EAAE,eAHA;AAIPD,UAAAA,MAAM,EAAET,KAAK,CAACI,SAAN,CAAgBQ;AAJjB,SAbD;AAmBP,wBAAgB;AACfP,UAAAA,OAAO,EAAE,OADM;AAEfK,UAAAA,KAAK,EAAE;AAFQ;AAnBT;AAXE,KADuB;AAqClC,cAAU;AArCwB,GAAnC;AAwCAV,EAAAA,KAAK,CAACI,SAAN,CAAgB,YAAhB,IAAgCJ,KAAK,CAACI,SAAN,CAAgB,cAAhB,IAAkCJ,KAAK,CAACI,SAAN,CAAgB,eAAhB,CAAlE;AAEA,CA1DA,EA0DCJ,KA1DD,CAAD","sourcesContent":["(function (Prism) {\n\n\t// CAREFUL!\n\t// The following patterns are concatenated, so the group referenced by a back reference is non-obvious!\n\n\tvar strings = [\n\t\t// normal string\n\t\t/\"(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|[^\"\\\\`$])*\"/.source,\n\t\t/'[^']*'/.source,\n\t\t/\\$'(?:[^'\\\\]|\\\\[\\s\\S])*'/.source,\n\n\t\t// here doc\n\t\t// 2 capturing groups\n\t\t/<<-?\\s*([\"']?)(\\w+)\\1\\s[\\s\\S]*?[\\r\\n]\\2/.source\n\t].join('|');\n\n\tPrism.languages['shell-session'] = {\n\t\t'command': {\n\t\t\tpattern: RegExp(\n\t\t\t\t// user info\n\t\t\t\t/^(?:[^\\s@:$#*!/\\\\]+@[^\\r\\n@:$#*!/\\\\]+(?::[^\\0-\\x1F$#*?\"<>:;|]+)?|[^\\0-\\x1F$#*?\"<>@:;|]+)?/.source +\n\t\t\t\t// shell symbol\n\t\t\t\t/[$#]/.source +\n\t\t\t\t// bash command\n\t\t\t\t/(?:[^\\\\\\r\\n'\"<$]|\\\\(?:[^\\r]|\\r\\n?)|\\$(?!')|<<str>>)+/.source.replace(/<<str>>/g, function () { return strings; }),\n\t\t\t\t'm'\n\t\t\t),\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'info': {\n\t\t\t\t\t// foo@bar:~/files$ exit\n\t\t\t\t\t// foo@bar$ exit\n\t\t\t\t\t// ~/files$ exit\n\t\t\t\t\tpattern: /^[^#$]+/,\n\t\t\t\t\talias: 'punctuation',\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'user': /^[^\\s@:$#*!/\\\\]+@[^\\r\\n@:$#*!/\\\\]+/,\n\t\t\t\t\t\t'punctuation': /:/,\n\t\t\t\t\t\t'path': /[\\s\\S]+/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'bash': {\n\t\t\t\t\tpattern: /(^[$#]\\s*)\\S[\\s\\S]*/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'language-bash',\n\t\t\t\t\tinside: Prism.languages.bash\n\t\t\t\t},\n\t\t\t\t'shell-symbol': {\n\t\t\t\t\tpattern: /^[$#]/,\n\t\t\t\t\talias: 'important'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'output': /.(?:.*(?:[\\r\\n]|.$))*/\n\t};\n\n\tPrism.languages['sh-session'] = Prism.languages['shellsession'] = Prism.languages['shell-session'];\n\n}(Prism));\n"]},"metadata":{},"sourceType":"script"}