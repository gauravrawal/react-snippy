{"ast":null,"code":"Prism.languages.warpscript = {\n  comment: /#.*|\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n  string: {\n    pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'|<'(?:[^\\\\']|'(?!>)|\\\\.)*'>/,\n    greedy: !0\n  },\n  variable: /\\$\\S+/,\n  macro: {\n    pattern: /@\\S+/,\n    alias: \"property\"\n  },\n  keyword: /\\b(?:BREAK|CHECKMACRO|CONTINUE|CUDF|DEFINED|DEFINEDMACRO|EVAL|FAIL|FOR|FOREACH|FORSTEP|IFT|IFTE|MSGFAIL|NRETURN|RETHROW|RETURN|SWITCH|TRY|UDF|UNTIL|WHILE)\\b/,\n  number: /[+-]?\\b(?:NaN|Infinity|\\d+(?:\\.\\d*)?(?:[Ee][+-]?\\d+)?|0x[\\da-fA-F]+|0b[01]+)\\b/,\n  boolean: /\\b(?:false|true|F|T)\\b/,\n  punctuation: /<%|%>|[{}[\\]()]/,\n  operator: /==|&&?|\\|\\|?|\\*\\*?|>>>?|<<|[<>!~]=?|[-/%^]|\\+!?|\\b(?:AND|NOT|OR)\\b/\n};","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/github/react-snippy/node_modules/prismjs/components/prism-warpscript.min.js"],"names":["Prism","languages","warpscript","comment","string","pattern","greedy","variable","macro","alias","keyword","number","boolean","punctuation","operator"],"mappings":"AAAAA,KAAK,CAACC,SAAN,CAAgBC,UAAhB,GAA2B;AAACC,EAAAA,OAAO,EAAC,6BAAT;AAAuCC,EAAAA,MAAM,EAAC;AAACC,IAAAA,OAAO,EAAC,wEAAT;AAAkFC,IAAAA,MAAM,EAAC,CAAC;AAA1F,GAA9C;AAA2IC,EAAAA,QAAQ,EAAC,OAApJ;AAA4JC,EAAAA,KAAK,EAAC;AAACH,IAAAA,OAAO,EAAC,MAAT;AAAgBI,IAAAA,KAAK,EAAC;AAAtB,GAAlK;AAAoMC,EAAAA,OAAO,EAAC,8JAA5M;AAA2WC,EAAAA,MAAM,EAAC,gFAAlX;AAAmcC,EAAAA,OAAO,EAAC,wBAA3c;AAAoeC,EAAAA,WAAW,EAAC,iBAAhf;AAAkgBC,EAAAA,QAAQ,EAAC;AAA3gB,CAA3B","sourcesContent":["Prism.languages.warpscript={comment:/#.*|\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,string:{pattern:/\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'|<'(?:[^\\\\']|'(?!>)|\\\\.)*'>/,greedy:!0},variable:/\\$\\S+/,macro:{pattern:/@\\S+/,alias:\"property\"},keyword:/\\b(?:BREAK|CHECKMACRO|CONTINUE|CUDF|DEFINED|DEFINEDMACRO|EVAL|FAIL|FOR|FOREACH|FORSTEP|IFT|IFTE|MSGFAIL|NRETURN|RETHROW|RETURN|SWITCH|TRY|UDF|UNTIL|WHILE)\\b/,number:/[+-]?\\b(?:NaN|Infinity|\\d+(?:\\.\\d*)?(?:[Ee][+-]?\\d+)?|0x[\\da-fA-F]+|0b[01]+)\\b/,boolean:/\\b(?:false|true|F|T)\\b/,punctuation:/<%|%>|[{}[\\]()]/,operator:/==|&&?|\\|\\|?|\\*\\*?|>>>?|<<|[<>!~]=?|[-/%^]|\\+!?|\\b(?:AND|NOT|OR)\\b/};"]},"metadata":{},"sourceType":"script"}