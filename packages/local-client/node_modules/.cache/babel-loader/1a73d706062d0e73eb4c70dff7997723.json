{"ast":null,"code":"// This is a language definition for generic log files.\n// Since there is no one log format, this language definition has to support all formats to some degree.\n//\n// Based on https://github.com/MTDL9/vim-log-highlighting\nPrism.languages.log = {\n  'string': {\n    // Single-quoted strings must not be confused with plain text. E.g. Can't isn't Susan's Chris' toy\n    pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?![st] | \\w)(?:[^'\\\\\\r\\n]|\\\\.)*'/,\n    greedy: true\n  },\n  'level': [{\n    pattern: /\\b(?:ALERT|CRIT|CRITICAL|EMERG|EMERGENCY|ERR|ERROR|FAILURE|FATAL|SEVERE)\\b/,\n    alias: ['error', 'important']\n  }, {\n    pattern: /\\b(?:WARN|WARNING|WRN)\\b/,\n    alias: ['warning', 'important']\n  }, {\n    pattern: /\\b(?:DISPLAY|INF|INFO|NOTICE|STATUS)\\b/,\n    alias: ['info', 'keyword']\n  }, {\n    pattern: /\\b(?:DBG|DEBUG|FINE)\\b/,\n    alias: ['debug', 'keyword']\n  }, {\n    pattern: /\\b(?:FINER|FINEST|TRACE|TRC|VERBOSE|VRB)\\b/,\n    alias: ['trace', 'comment']\n  }],\n  'property': {\n    pattern: /((?:^|[\\]|])[ \\t]*)[a-z_](?:[\\w-]|\\b\\/\\b)*(?:[. ]\\(?\\w(?:[\\w-]|\\b\\/\\b)*\\)?)*:(?=\\s)/im,\n    lookbehind: true\n  },\n  'separator': {\n    pattern: /(^|[^-+])-{3,}|={3,}|\\*{3,}|- - /m,\n    lookbehind: true,\n    alias: 'comment'\n  },\n  'url': /\\b(?:https?|ftp|file):\\/\\/[^\\s|,;'\"]*[^\\s|,;'\">.]/,\n  'email': {\n    pattern: /(^|\\s)[-\\w+.]+@[a-z][a-z0-9-]*(?:\\.[a-z][a-z0-9-]*)+(?=\\s)/,\n    lookbehind: true,\n    alias: 'url'\n  },\n  'ip-address': {\n    pattern: /\\b(?:\\d{1,3}(?:\\.\\d{1,3}){3})\\b/i,\n    alias: 'constant'\n  },\n  'mac-address': {\n    pattern: /\\b[a-f0-9]{2}(?::[a-f0-9]{2}){5}\\b/i,\n    alias: 'constant'\n  },\n  'domain': {\n    pattern: /(^|\\s)[a-z][a-z0-9-]*(?:\\.[a-z][a-z0-9-]*)*\\.[a-z][a-z0-9-]+(?=\\s)/,\n    lookbehind: true,\n    alias: 'constant'\n  },\n  'uuid': {\n    pattern: /\\b[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\\b/i,\n    alias: 'constant'\n  },\n  'hash': {\n    pattern: /\\b(?:[a-f0-9]{32}){1,2}\\b/i,\n    alias: 'constant'\n  },\n  'file-path': {\n    pattern: /\\b[a-z]:[\\\\/][^\\s|,;:(){}\\[\\]\"']+|(^|[\\s:\\[\\](>|])\\.{0,2}\\/\\w[^\\s|,;:(){}\\[\\]\"']*/i,\n    lookbehind: true,\n    greedy: true,\n    alias: 'string'\n  },\n  'date': {\n    pattern: RegExp(/\\b\\d{4}[-/]\\d{2}[-/]\\d{2}(?:T(?=\\d{1,2}:)|(?=\\s\\d{1,2}:))/.source + '|' + /\\b\\d{1,4}[-/ ](?:\\d{1,2}|Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)[-/ ]\\d{2,4}T?\\b/.source + '|' + /\\b(?:(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun)(?:\\s{1,2}(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec))?|Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s{1,2}\\d{1,2}\\b/.source, 'i'),\n    alias: 'number'\n  },\n  'time': {\n    pattern: /\\b\\d{1,2}:\\d{1,2}:\\d{1,2}(?:[.,:]\\d+)?(?:\\s?[+-]\\d{2}:?\\d{2}|Z)?\\b/,\n    alias: 'number'\n  },\n  'boolean': /\\b(?:true|false|null)\\b/i,\n  'number': {\n    pattern: /(^|[^.\\w])(?:0x[a-f0-9]+|0o[0-7]+|0b[01]+|v?\\d[\\da-f]*(?:\\.\\d+)*(?:e[+-]?\\d+)?[a-z]{0,3}\\b)\\b(?!\\.\\w)/i,\n    lookbehind: true\n  },\n  'operator': /[;:?<=>~/@!$%&+\\-|^(){}*#]/,\n  'punctuation': /[\\[\\].,]/\n};","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/jbook/node_modules/prismjs/components/prism-log.js"],"names":["Prism","languages","log","pattern","greedy","alias","lookbehind","RegExp","source"],"mappings":"AAAA;AACA;AACA;AACA;AAEAA,KAAK,CAACC,SAAN,CAAgBC,GAAhB,GAAsB;AACrB,YAAU;AACT;AACAC,IAAAA,OAAO,EAAE,0DAFA;AAGTC,IAAAA,MAAM,EAAE;AAHC,GADW;AAOrB,WAAS,CACR;AACCD,IAAAA,OAAO,EAAE,4EADV;AAECE,IAAAA,KAAK,EAAE,CAAC,OAAD,EAAU,WAAV;AAFR,GADQ,EAKR;AACCF,IAAAA,OAAO,EAAE,0BADV;AAECE,IAAAA,KAAK,EAAE,CAAC,SAAD,EAAY,WAAZ;AAFR,GALQ,EASR;AACCF,IAAAA,OAAO,EAAE,wCADV;AAECE,IAAAA,KAAK,EAAE,CAAC,MAAD,EAAS,SAAT;AAFR,GATQ,EAaR;AACCF,IAAAA,OAAO,EAAE,wBADV;AAECE,IAAAA,KAAK,EAAE,CAAC,OAAD,EAAU,SAAV;AAFR,GAbQ,EAiBR;AACCF,IAAAA,OAAO,EAAE,4CADV;AAECE,IAAAA,KAAK,EAAE,CAAC,OAAD,EAAU,SAAV;AAFR,GAjBQ,CAPY;AA8BrB,cAAY;AACXF,IAAAA,OAAO,EAAE,uFADE;AAEXG,IAAAA,UAAU,EAAE;AAFD,GA9BS;AAmCrB,eAAa;AACZH,IAAAA,OAAO,EAAE,mCADG;AAEZG,IAAAA,UAAU,EAAE,IAFA;AAGZD,IAAAA,KAAK,EAAE;AAHK,GAnCQ;AAyCrB,SAAO,mDAzCc;AA0CrB,WAAS;AACRF,IAAAA,OAAO,EAAE,4DADD;AAERG,IAAAA,UAAU,EAAE,IAFJ;AAGRD,IAAAA,KAAK,EAAE;AAHC,GA1CY;AAgDrB,gBAAc;AACbF,IAAAA,OAAO,EAAE,kCADI;AAEbE,IAAAA,KAAK,EAAE;AAFM,GAhDO;AAoDrB,iBAAe;AACdF,IAAAA,OAAO,EAAE,qCADK;AAEdE,IAAAA,KAAK,EAAE;AAFO,GApDM;AAwDrB,YAAU;AACTF,IAAAA,OAAO,EAAE,oEADA;AAETG,IAAAA,UAAU,EAAE,IAFH;AAGTD,IAAAA,KAAK,EAAE;AAHE,GAxDW;AA8DrB,UAAQ;AACPF,IAAAA,OAAO,EAAE,mEADF;AAEPE,IAAAA,KAAK,EAAE;AAFA,GA9Da;AAkErB,UAAQ;AACPF,IAAAA,OAAO,EAAE,4BADF;AAEPE,IAAAA,KAAK,EAAE;AAFA,GAlEa;AAuErB,eAAa;AACZF,IAAAA,OAAO,EAAE,oFADG;AAEZG,IAAAA,UAAU,EAAE,IAFA;AAGZF,IAAAA,MAAM,EAAE,IAHI;AAIZC,IAAAA,KAAK,EAAE;AAJK,GAvEQ;AA8ErB,UAAQ;AACPF,IAAAA,OAAO,EAAEI,MAAM,CACd,4DAA4DC,MAA5D,GACA,GADA,GAEA,4FAA4FA,MAF5F,GAGA,GAHA,GAIA,uKAAuKA,MALzJ,EAMd,GANc,CADR;AASPH,IAAAA,KAAK,EAAE;AATA,GA9Ea;AAyFrB,UAAQ;AACPF,IAAAA,OAAO,EAAE,oEADF;AAEPE,IAAAA,KAAK,EAAE;AAFA,GAzFa;AA8FrB,aAAW,0BA9FU;AA+FrB,YAAU;AACTF,IAAAA,OAAO,EAAE,wGADA;AAETG,IAAAA,UAAU,EAAE;AAFH,GA/FW;AAoGrB,cAAY,4BApGS;AAqGrB,iBAAe;AArGM,CAAtB","sourcesContent":["// This is a language definition for generic log files.\n// Since there is no one log format, this language definition has to support all formats to some degree.\n//\n// Based on https://github.com/MTDL9/vim-log-highlighting\n\nPrism.languages.log = {\n\t'string': {\n\t\t// Single-quoted strings must not be confused with plain text. E.g. Can't isn't Susan's Chris' toy\n\t\tpattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?![st] | \\w)(?:[^'\\\\\\r\\n]|\\\\.)*'/,\n\t\tgreedy: true,\n\t},\n\n\t'level': [\n\t\t{\n\t\t\tpattern: /\\b(?:ALERT|CRIT|CRITICAL|EMERG|EMERGENCY|ERR|ERROR|FAILURE|FATAL|SEVERE)\\b/,\n\t\t\talias: ['error', 'important']\n\t\t},\n\t\t{\n\t\t\tpattern: /\\b(?:WARN|WARNING|WRN)\\b/,\n\t\t\talias: ['warning', 'important']\n\t\t},\n\t\t{\n\t\t\tpattern: /\\b(?:DISPLAY|INF|INFO|NOTICE|STATUS)\\b/,\n\t\t\talias: ['info', 'keyword']\n\t\t},\n\t\t{\n\t\t\tpattern: /\\b(?:DBG|DEBUG|FINE)\\b/,\n\t\t\talias: ['debug', 'keyword']\n\t\t},\n\t\t{\n\t\t\tpattern: /\\b(?:FINER|FINEST|TRACE|TRC|VERBOSE|VRB)\\b/,\n\t\t\talias: ['trace', 'comment']\n\t\t}\n\t],\n\n\t'property': {\n\t\tpattern: /((?:^|[\\]|])[ \\t]*)[a-z_](?:[\\w-]|\\b\\/\\b)*(?:[. ]\\(?\\w(?:[\\w-]|\\b\\/\\b)*\\)?)*:(?=\\s)/im,\n\t\tlookbehind: true\n\t},\n\n\t'separator': {\n\t\tpattern: /(^|[^-+])-{3,}|={3,}|\\*{3,}|- - /m,\n\t\tlookbehind: true,\n\t\talias: 'comment'\n\t},\n\n\t'url': /\\b(?:https?|ftp|file):\\/\\/[^\\s|,;'\"]*[^\\s|,;'\">.]/,\n\t'email': {\n\t\tpattern: /(^|\\s)[-\\w+.]+@[a-z][a-z0-9-]*(?:\\.[a-z][a-z0-9-]*)+(?=\\s)/,\n\t\tlookbehind: true,\n\t\talias: 'url'\n\t},\n\n\t'ip-address': {\n\t\tpattern: /\\b(?:\\d{1,3}(?:\\.\\d{1,3}){3})\\b/i,\n\t\talias: 'constant'\n\t},\n\t'mac-address': {\n\t\tpattern: /\\b[a-f0-9]{2}(?::[a-f0-9]{2}){5}\\b/i,\n\t\talias: 'constant'\n\t},\n\t'domain': {\n\t\tpattern: /(^|\\s)[a-z][a-z0-9-]*(?:\\.[a-z][a-z0-9-]*)*\\.[a-z][a-z0-9-]+(?=\\s)/,\n\t\tlookbehind: true,\n\t\talias: 'constant'\n\t},\n\n\t'uuid': {\n\t\tpattern: /\\b[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\\b/i,\n\t\talias: 'constant'\n\t},\n\t'hash': {\n\t\tpattern: /\\b(?:[a-f0-9]{32}){1,2}\\b/i,\n\t\talias: 'constant'\n\t},\n\n\t'file-path': {\n\t\tpattern: /\\b[a-z]:[\\\\/][^\\s|,;:(){}\\[\\]\"']+|(^|[\\s:\\[\\](>|])\\.{0,2}\\/\\w[^\\s|,;:(){}\\[\\]\"']*/i,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\talias: 'string'\n\t},\n\n\t'date': {\n\t\tpattern: RegExp(\n\t\t\t/\\b\\d{4}[-/]\\d{2}[-/]\\d{2}(?:T(?=\\d{1,2}:)|(?=\\s\\d{1,2}:))/.source +\n\t\t\t'|' +\n\t\t\t/\\b\\d{1,4}[-/ ](?:\\d{1,2}|Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)[-/ ]\\d{2,4}T?\\b/.source +\n\t\t\t'|' +\n\t\t\t/\\b(?:(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun)(?:\\s{1,2}(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec))?|Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s{1,2}\\d{1,2}\\b/.source,\n\t\t\t'i'\n\t\t),\n\t\talias: 'number'\n\t},\n\t'time': {\n\t\tpattern: /\\b\\d{1,2}:\\d{1,2}:\\d{1,2}(?:[.,:]\\d+)?(?:\\s?[+-]\\d{2}:?\\d{2}|Z)?\\b/,\n\t\talias: 'number'\n\t},\n\n\t'boolean': /\\b(?:true|false|null)\\b/i,\n\t'number': {\n\t\tpattern: /(^|[^.\\w])(?:0x[a-f0-9]+|0o[0-7]+|0b[01]+|v?\\d[\\da-f]*(?:\\.\\d+)*(?:e[+-]?\\d+)?[a-z]{0,3}\\b)\\b(?!\\.\\w)/i,\n\t\tlookbehind: true\n\t},\n\n\t'operator': /[;:?<=>~/@!$%&+\\-|^(){}*#]/,\n\t'punctuation': /[\\[\\].,]/\n};\n"]},"metadata":{},"sourceType":"script"}