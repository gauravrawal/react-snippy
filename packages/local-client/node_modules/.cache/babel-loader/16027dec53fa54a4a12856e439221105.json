{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/gauravrawal/gaurav/udemy/github/react-snippy/src/components/cell-list-item.tsx\";\nimport './cell-list-item.css';\nimport CodeCell from './code-cell';\nimport TextEditor from './text-editor';\nimport ActionBar from './action-bar';\n\nconst CellListItem = ({\n  cell\n}) => {\n  let child;\n\n  if (cell.type === 'code') {\n    child = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action-bar-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(ActionBar, {\n          id: cell.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CodeCell, {\n        cell: cell\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  } else {\n    child = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [' ', /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action-bar-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(ActionBar, {\n          id: cell.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextEditor, {\n          cell: cell\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cell-list-item\",\n    children: child\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, this);\n};\n\n_c = CellListItem;\nexport default CellListItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"CellListItem\");","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/github/react-snippy/src/components/cell-list-item.tsx"],"names":["CodeCell","TextEditor","ActionBar","CellListItem","cell","child","type","id"],"mappings":";;;AAAA,OAAO,sBAAP;AAEA,OAAOA,QAAP,MAAqB,aAArB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,SAAP,MAAsB,cAAtB;;AAKA,MAAMC,YAAyC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC9D,MAAIC,KAAJ;;AACA,MAAID,IAAI,CAACE,IAAL,KAAc,MAAlB,EAA0B;AACxBD,IAAAA,KAAK,gBACH;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,+BACE,QAAC,SAAD;AAAW,UAAA,EAAE,EAAED,IAAI,CAACG;AAApB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,QAAD;AAAU,QAAA,IAAI,EAAEH;AAAhB;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA,oBADF;AAQD,GATD,MASO;AACLC,IAAAA,KAAK,gBACH;AAAA,iBACG,GADH,eAEE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,gCACE,QAAC,SAAD;AAAW,UAAA,EAAE,EAAED,IAAI,CAACG;AAApB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,UAAD;AAAY,UAAA,IAAI,EAAEH;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADF;AASD;;AAED,sBAAO;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,cAAiCC;AAAjC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAxBD;;KAAMF,Y;AA0BN,eAAeA,YAAf","sourcesContent":["import './cell-list-item.css';\nimport { Cell } from '../state';\nimport CodeCell from './code-cell';\nimport TextEditor from './text-editor';\nimport ActionBar from './action-bar';\n\ninterface CellListItemProps {\n  cell: Cell;\n}\nconst CellListItem: React.FC<CellListItemProps> = ({ cell }) => {\n  let child: JSX.Element;\n  if (cell.type === 'code') {\n    child = (\n      <>\n        <div className=\"action-bar-wrapper\">\n          <ActionBar id={cell.id} />\n        </div>\n        <CodeCell cell={cell} />\n      </>\n    );\n  } else {\n    child = (\n      <>\n        {' '}\n        <div className=\"action-bar-wrapper\">\n          <ActionBar id={cell.id} />\n          <TextEditor cell={cell} />\n        </div>\n      </>\n    );\n  }\n\n  return <div className=\"cell-list-item\">{child}</div>;\n};\n\nexport default CellListItem;\n"]},"metadata":{},"sourceType":"module"}