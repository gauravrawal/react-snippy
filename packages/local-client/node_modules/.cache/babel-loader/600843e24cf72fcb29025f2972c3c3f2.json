{"ast":null,"code":"Prism.languages.agda = {\n  comment: /\\{-[\\s\\S]*?(?:-\\}|$)|--.*/,\n  string: {\n    pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n    greedy: !0\n  },\n  punctuation: /[(){}⦃⦄.;@]/,\n  \"class-name\": {\n    pattern: /((?:data|record) +)\\S+/,\n    lookbehind: !0\n  },\n  function: {\n    pattern: /(^[ \\t]*)(?!\\s)[^:\\r\\n]+(?=:)/m,\n    lookbehind: !0\n  },\n  operator: {\n    pattern: /(^\\s*|\\s)(?:[=|:∀→λ\\\\?_]|->)(?=\\s)/,\n    lookbehind: !0\n  },\n  keyword: /\\b(?:Set|abstract|constructor|data|eta-equality|field|forall|hiding|import|in|inductive|infix|infixl|infixr|instance|let|macro|module|mutual|no-eta-equality|open|overlap|pattern|postulate|primitive|private|public|quote|quoteContext|quoteGoal|quoteTerm|record|renaming|rewrite|syntax|tactic|unquote|unquoteDecl|unquoteDef|using|variable|where|with)\\b/\n};","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/jbook/node_modules/prismjs/components/prism-agda.min.js"],"names":["Prism","languages","agda","comment","string","pattern","greedy","punctuation","lookbehind","function","operator","keyword"],"mappings":"AAAAA,KAAK,CAACC,SAAN,CAAgBC,IAAhB,GAAqB;AAACC,EAAAA,OAAO,EAAC,2BAAT;AAAqCC,EAAAA,MAAM,EAAC;AAACC,IAAAA,OAAO,EAAC,qCAAT;AAA+CC,IAAAA,MAAM,EAAC,CAAC;AAAvD,GAA5C;AAAsGC,EAAAA,WAAW,EAAC,aAAlH;AAAgI,gBAAa;AAACF,IAAAA,OAAO,EAAC,wBAAT;AAAkCG,IAAAA,UAAU,EAAC,CAAC;AAA9C,GAA7I;AAA8LC,EAAAA,QAAQ,EAAC;AAACJ,IAAAA,OAAO,EAAC,gCAAT;AAA0CG,IAAAA,UAAU,EAAC,CAAC;AAAtD,GAAvM;AAAgQE,EAAAA,QAAQ,EAAC;AAACL,IAAAA,OAAO,EAAC,oCAAT;AAA8CG,IAAAA,UAAU,EAAC,CAAC;AAA1D,GAAzQ;AAAsUG,EAAAA,OAAO,EAAC;AAA9U,CAArB","sourcesContent":["Prism.languages.agda={comment:/\\{-[\\s\\S]*?(?:-\\}|$)|--.*/,string:{pattern:/\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,greedy:!0},punctuation:/[(){}⦃⦄.;@]/,\"class-name\":{pattern:/((?:data|record) +)\\S+/,lookbehind:!0},function:{pattern:/(^[ \\t]*)(?!\\s)[^:\\r\\n]+(?=:)/m,lookbehind:!0},operator:{pattern:/(^\\s*|\\s)(?:[=|:∀→λ\\\\?_]|->)(?=\\s)/,lookbehind:!0},keyword:/\\b(?:Set|abstract|constructor|data|eta-equality|field|forall|hiding|import|in|inductive|infix|infixl|infixr|instance|let|macro|module|mutual|no-eta-equality|open|overlap|pattern|postulate|primitive|private|public|quote|quoteContext|quoteGoal|quoteTerm|record|renaming|rewrite|syntax|tactic|unquote|unquoteDecl|unquoteDef|using|variable|where|with)\\b/};"]},"metadata":{},"sourceType":"script"}