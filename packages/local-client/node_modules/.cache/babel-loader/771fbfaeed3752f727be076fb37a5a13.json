{"ast":null,"code":"var autolinkLiteral = require('mdast-util-gfm-autolink-literal/from-markdown');\n\nvar strikethrough = require('mdast-util-gfm-strikethrough/from-markdown');\n\nvar table = require('mdast-util-gfm-table/from-markdown');\n\nvar taskListItem = require('mdast-util-gfm-task-list-item/from-markdown');\n\nvar own = {}.hasOwnProperty;\nmodule.exports = configure([autolinkLiteral, strikethrough, table, taskListItem]);\n\nfunction configure(extensions) {\n  var config = {\n    transforms: [],\n    canContainEols: []\n  };\n  var length = extensions.length;\n  var index = -1;\n\n  while (++index < length) {\n    extension(config, extensions[index]);\n  }\n\n  return config;\n}\n\nfunction extension(config, extension) {\n  var key;\n  var left;\n  var right;\n\n  for (key in extension) {\n    left = own.call(config, key) ? config[key] : config[key] = {};\n    right = extension[key];\n\n    if (key === 'canContainEols' || key === 'transforms') {\n      config[key] = [].concat(left, right);\n    } else {\n      Object.assign(left, right);\n    }\n  }\n}","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/github/react-snippy/node_modules/mdast-util-gfm/from-markdown.js"],"names":["autolinkLiteral","require","strikethrough","table","taskListItem","own","hasOwnProperty","module","exports","configure","extensions","config","transforms","canContainEols","length","index","extension","key","left","right","call","concat","Object","assign"],"mappings":"AAAA,IAAIA,eAAe,GAAGC,OAAO,CAAC,+CAAD,CAA7B;;AACA,IAAIC,aAAa,GAAGD,OAAO,CAAC,4CAAD,CAA3B;;AACA,IAAIE,KAAK,GAAGF,OAAO,CAAC,oCAAD,CAAnB;;AACA,IAAIG,YAAY,GAAGH,OAAO,CAAC,6CAAD,CAA1B;;AAEA,IAAII,GAAG,GAAG,GAAGC,cAAb;AAEAC,MAAM,CAACC,OAAP,GAAiBC,SAAS,CAAC,CACzBT,eADyB,EAEzBE,aAFyB,EAGzBC,KAHyB,EAIzBC,YAJyB,CAAD,CAA1B;;AAOA,SAASK,SAAT,CAAmBC,UAAnB,EAA+B;AAC7B,MAAIC,MAAM,GAAG;AAACC,IAAAA,UAAU,EAAE,EAAb;AAAiBC,IAAAA,cAAc,EAAE;AAAjC,GAAb;AACA,MAAIC,MAAM,GAAGJ,UAAU,CAACI,MAAxB;AACA,MAAIC,KAAK,GAAG,CAAC,CAAb;;AAEA,SAAO,EAAEA,KAAF,GAAUD,MAAjB,EAAyB;AACvBE,IAAAA,SAAS,CAACL,MAAD,EAASD,UAAU,CAACK,KAAD,CAAnB,CAAT;AACD;;AAED,SAAOJ,MAAP;AACD;;AAED,SAASK,SAAT,CAAmBL,MAAnB,EAA2BK,SAA3B,EAAsC;AACpC,MAAIC,GAAJ;AACA,MAAIC,IAAJ;AACA,MAAIC,KAAJ;;AAEA,OAAKF,GAAL,IAAYD,SAAZ,EAAuB;AACrBE,IAAAA,IAAI,GAAGb,GAAG,CAACe,IAAJ,CAAST,MAAT,EAAiBM,GAAjB,IAAwBN,MAAM,CAACM,GAAD,CAA9B,GAAuCN,MAAM,CAACM,GAAD,CAAN,GAAc,EAA5D;AACAE,IAAAA,KAAK,GAAGH,SAAS,CAACC,GAAD,CAAjB;;AAEA,QAAIA,GAAG,KAAK,gBAAR,IAA4BA,GAAG,KAAK,YAAxC,EAAsD;AACpDN,MAAAA,MAAM,CAACM,GAAD,CAAN,GAAc,GAAGI,MAAH,CAAUH,IAAV,EAAgBC,KAAhB,CAAd;AACD,KAFD,MAEO;AACLG,MAAAA,MAAM,CAACC,MAAP,CAAcL,IAAd,EAAoBC,KAApB;AACD;AACF;AACF","sourcesContent":["var autolinkLiteral = require('mdast-util-gfm-autolink-literal/from-markdown')\nvar strikethrough = require('mdast-util-gfm-strikethrough/from-markdown')\nvar table = require('mdast-util-gfm-table/from-markdown')\nvar taskListItem = require('mdast-util-gfm-task-list-item/from-markdown')\n\nvar own = {}.hasOwnProperty\n\nmodule.exports = configure([\n  autolinkLiteral,\n  strikethrough,\n  table,\n  taskListItem\n])\n\nfunction configure(extensions) {\n  var config = {transforms: [], canContainEols: []}\n  var length = extensions.length\n  var index = -1\n\n  while (++index < length) {\n    extension(config, extensions[index])\n  }\n\n  return config\n}\n\nfunction extension(config, extension) {\n  var key\n  var left\n  var right\n\n  for (key in extension) {\n    left = own.call(config, key) ? config[key] : (config[key] = {})\n    right = extension[key]\n\n    if (key === 'canContainEols' || key === 'transforms') {\n      config[key] = [].concat(left, right)\n    } else {\n      Object.assign(left, right)\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}