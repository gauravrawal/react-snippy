{"ast":null,"code":"// https://qiskit.github.io/openqasm/grammar/index.html\nPrism.languages.openqasm = {\n  'comment': /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*/,\n  'string': {\n    pattern: /\"[^\"\\r\\n\\t]*\"|'[^'\\r\\n\\t]*'/,\n    greedy: true\n  },\n  'keyword': /\\b(?:barrier|boxas|boxto|break|const|continue|ctrl|def|defcal|defcalgrammar|delay|else|end|for|gate|gphase|if|in|include|inv|kernel|lengthof|let|measure|pow|reset|return|rotary|stretchinf|while|CX|OPENQASM|U)\\b|#pragma\\b/,\n  'class-name': /\\b(?:angle|bit|bool|creg|fixed|float|int|length|qreg|qubit|stretch|uint)\\b/,\n  'function': /\\b(?:sin|cos|tan|exp|ln|sqrt|rotl|rotr|popcount)\\b(?=\\s*\\()/,\n  'constant': /\\b(?:pi|tau|euler)\\b|π|𝜏|ℇ/,\n  'number': {\n    pattern: /(^|[^.\\w$])(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?(?:dt|ns|us|µs|ms|s)?/i,\n    lookbehind: true\n  },\n  'operator': /->|>>=?|<<=?|&&|\\|\\||\\+\\+|--|[!=<>&|~^+\\-*/%]=?|@/,\n  'punctuation': /[(){}\\[\\];,:.]/\n};\nPrism.languages.qasm = Prism.languages.openqasm;","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/github/react-snippy/node_modules/prismjs/components/prism-openqasm.js"],"names":["Prism","languages","openqasm","pattern","greedy","lookbehind","qasm"],"mappings":"AAAA;AAEAA,KAAK,CAACC,SAAN,CAAgBC,QAAhB,GAA2B;AAC1B,aAAW,yBADe;AAE1B,YAAU;AACTC,IAAAA,OAAO,EAAE,6BADA;AAETC,IAAAA,MAAM,EAAE;AAFC,GAFgB;AAO1B,aAAW,8NAPe;AAQ1B,gBAAc,4EARY;AAS1B,cAAY,6DATc;AAW1B,cAAY,6BAXc;AAY1B,YAAU;AACTD,IAAAA,OAAO,EAAE,wEADA;AAETE,IAAAA,UAAU,EAAE;AAFH,GAZgB;AAgB1B,cAAY,mDAhBc;AAiB1B,iBAAe;AAjBW,CAA3B;AAoBAL,KAAK,CAACC,SAAN,CAAgBK,IAAhB,GAAuBN,KAAK,CAACC,SAAN,CAAgBC,QAAvC","sourcesContent":["// https://qiskit.github.io/openqasm/grammar/index.html\n\nPrism.languages.openqasm = {\n\t'comment': /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*/,\n\t'string': {\n\t\tpattern: /\"[^\"\\r\\n\\t]*\"|'[^'\\r\\n\\t]*'/,\n\t\tgreedy: true\n\t},\n\n\t'keyword': /\\b(?:barrier|boxas|boxto|break|const|continue|ctrl|def|defcal|defcalgrammar|delay|else|end|for|gate|gphase|if|in|include|inv|kernel|lengthof|let|measure|pow|reset|return|rotary|stretchinf|while|CX|OPENQASM|U)\\b|#pragma\\b/,\n\t'class-name': /\\b(?:angle|bit|bool|creg|fixed|float|int|length|qreg|qubit|stretch|uint)\\b/,\n\t'function': /\\b(?:sin|cos|tan|exp|ln|sqrt|rotl|rotr|popcount)\\b(?=\\s*\\()/,\n\n\t'constant': /\\b(?:pi|tau|euler)\\b|π|𝜏|ℇ/,\n\t'number': {\n\t\tpattern: /(^|[^.\\w$])(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?(?:dt|ns|us|µs|ms|s)?/i,\n\t\tlookbehind: true\n\t},\n\t'operator': /->|>>=?|<<=?|&&|\\|\\||\\+\\+|--|[!=<>&|~^+\\-*/%]=?|@/,\n\t'punctuation': /[(){}\\[\\];,:.]/\n};\n\nPrism.languages.qasm = Prism.languages.openqasm;\n"]},"metadata":{},"sourceType":"script"}