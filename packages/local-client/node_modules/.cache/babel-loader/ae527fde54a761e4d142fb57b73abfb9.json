{"ast":null,"code":"(function (Prism) {\n  var comment = {\n    pattern: /(^[ \\t]*| {2}|\\t)#.*/m,\n    lookbehind: true,\n    greedy: true\n  };\n  var variable = {\n    pattern: /((?:^|[^\\\\])(?:\\\\{2})*)[$@&%]\\{(?:[^{}\\r\\n]|\\{[^{}\\r\\n]*\\})*\\}/,\n    lookbehind: true,\n    inside: {\n      'punctuation': /^[$@&%]\\{|\\}$/\n    }\n  };\n\n  function createSection(name, inside) {\n    var extendecInside = {};\n    extendecInside['section-header'] = {\n      pattern: /^ ?\\*{3}.+?\\*{3}/,\n      alias: 'keyword'\n    }; // copy inside tokens\n\n    for (var token in inside) {\n      extendecInside[token] = inside[token];\n    }\n\n    extendecInside['tag'] = {\n      pattern: /([\\r\\n](?: {2}|\\t)[ \\t]*)\\[[-\\w]+\\]/,\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\[|\\]/\n      }\n    };\n    extendecInside['variable'] = variable;\n    extendecInside['comment'] = comment;\n    return {\n      pattern: RegExp(/^ ?\\*{3}[ \\t]*<name>[ \\t]*\\*{3}(?:.|[\\r\\n](?!\\*{3}))*/.source.replace(/<name>/g, function () {\n        return name;\n      }), 'im'),\n      alias: 'section',\n      inside: extendecInside\n    };\n  }\n\n  var docTag = {\n    pattern: /(\\[Documentation\\](?: {2}|\\t)[ \\t]*)(?![ \\t]|#)(?:.|(?:\\r\\n?|\\n)[ \\t]*\\.{3})+/,\n    lookbehind: true,\n    alias: 'string'\n  };\n  var testNameLike = {\n    pattern: /([\\r\\n] ?)(?!#)(?:\\S(?:[ \\t]\\S)*)+/,\n    lookbehind: true,\n    alias: 'function',\n    inside: {\n      'variable': variable\n    }\n  };\n  var testPropertyLike = {\n    pattern: /([\\r\\n](?: {2}|\\t)[ \\t]*)(?!\\[|\\.{3}|#)(?:\\S(?:[ \\t]\\S)*)+/,\n    lookbehind: true,\n    inside: {\n      'variable': variable\n    }\n  };\n  Prism.languages['robotframework'] = {\n    'settings': createSection('Settings', {\n      'documentation': {\n        pattern: /([\\r\\n] ?Documentation(?: {2}|\\t)[ \\t]*)(?![ \\t]|#)(?:.|(?:\\r\\n?|\\n)[ \\t]*\\.{3})+/,\n        lookbehind: true,\n        alias: 'string'\n      },\n      'property': {\n        pattern: /([\\r\\n] ?)(?!\\.{3}|#)(?:\\S(?:[ \\t]\\S)*)+/,\n        lookbehind: true\n      }\n    }),\n    'variables': createSection('Variables'),\n    'test-cases': createSection('Test Cases', {\n      'test-name': testNameLike,\n      'documentation': docTag,\n      'property': testPropertyLike\n    }),\n    'keywords': createSection('Keywords', {\n      'keyword-name': testNameLike,\n      'documentation': docTag,\n      'property': testPropertyLike\n    }),\n    'tasks': createSection('Tasks', {\n      'task-name': testNameLike,\n      'documentation': docTag,\n      'property': testPropertyLike\n    }),\n    'comment': comment\n  };\n  Prism.languages.robot = Prism.languages['robotframework'];\n})(Prism);","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/jbook/node_modules/prismjs/components/prism-robotframework.js"],"names":["Prism","comment","pattern","lookbehind","greedy","variable","inside","createSection","name","extendecInside","alias","token","RegExp","source","replace","docTag","testNameLike","testPropertyLike","languages","robot"],"mappings":"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","sourcesContent":["(function (Prism) {\n\n\tvar comment = {\n\t\tpattern: /(^[ \\t]*| {2}|\\t)#.*/m,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t};\n\n\tvar variable = {\n\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)[$@&%]\\{(?:[^{}\\r\\n]|\\{[^{}\\r\\n]*\\})*\\}/,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'punctuation': /^[$@&%]\\{|\\}$/\n\t\t}\n\t};\n\n\tfunction createSection(name, inside) {\n\t\tvar extendecInside = {};\n\n\t\textendecInside['section-header'] = {\n\t\t\tpattern: /^ ?\\*{3}.+?\\*{3}/,\n\t\t\talias: 'keyword'\n\t\t};\n\n\t\t// copy inside tokens\n\t\tfor (var token in inside) {\n\t\t\textendecInside[token] = inside[token];\n\t\t}\n\n\t\textendecInside['tag'] = {\n\t\t\tpattern: /([\\r\\n](?: {2}|\\t)[ \\t]*)\\[[-\\w]+\\]/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /\\[|\\]/\n\t\t\t}\n\t\t};\n\t\textendecInside['variable'] = variable;\n\t\textendecInside['comment'] = comment;\n\n\t\treturn {\n\t\t\tpattern: RegExp(/^ ?\\*{3}[ \\t]*<name>[ \\t]*\\*{3}(?:.|[\\r\\n](?!\\*{3}))*/.source.replace(/<name>/g, function () { return name; }), 'im'),\n\t\t\talias: 'section',\n\t\t\tinside: extendecInside\n\t\t};\n\t}\n\n\n\tvar docTag = {\n\t\tpattern: /(\\[Documentation\\](?: {2}|\\t)[ \\t]*)(?![ \\t]|#)(?:.|(?:\\r\\n?|\\n)[ \\t]*\\.{3})+/,\n\t\tlookbehind: true,\n\t\talias: 'string'\n\t};\n\n\tvar testNameLike = {\n\t\tpattern: /([\\r\\n] ?)(?!#)(?:\\S(?:[ \\t]\\S)*)+/,\n\t\tlookbehind: true,\n\t\talias: 'function',\n\t\tinside: {\n\t\t\t'variable': variable\n\t\t}\n\t};\n\n\tvar testPropertyLike = {\n\t\tpattern: /([\\r\\n](?: {2}|\\t)[ \\t]*)(?!\\[|\\.{3}|#)(?:\\S(?:[ \\t]\\S)*)+/,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'variable': variable\n\t\t}\n\t};\n\n\tPrism.languages['robotframework'] = {\n\t\t'settings': createSection('Settings', {\n\t\t\t'documentation': {\n\t\t\t\tpattern: /([\\r\\n] ?Documentation(?: {2}|\\t)[ \\t]*)(?![ \\t]|#)(?:.|(?:\\r\\n?|\\n)[ \\t]*\\.{3})+/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'property': {\n\t\t\t\tpattern: /([\\r\\n] ?)(?!\\.{3}|#)(?:\\S(?:[ \\t]\\S)*)+/,\n\t\t\t\tlookbehind: true\n\t\t\t}\n\t\t}),\n\t\t'variables': createSection('Variables'),\n\t\t'test-cases': createSection('Test Cases', {\n\t\t\t'test-name': testNameLike,\n\t\t\t'documentation': docTag,\n\t\t\t'property': testPropertyLike\n\t\t}),\n\t\t'keywords': createSection('Keywords', {\n\t\t\t'keyword-name': testNameLike,\n\t\t\t'documentation': docTag,\n\t\t\t'property': testPropertyLike\n\t\t}),\n\t\t'tasks': createSection('Tasks', {\n\t\t\t'task-name': testNameLike,\n\t\t\t'documentation': docTag,\n\t\t\t'property': testPropertyLike\n\t\t}),\n\t\t'comment': comment\n\t};\n\n\tPrism.languages.robot = Prism.languages['robotframework'];\n\n}(Prism));\n"]},"metadata":{},"sourceType":"script"}