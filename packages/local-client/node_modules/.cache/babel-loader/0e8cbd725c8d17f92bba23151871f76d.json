{"ast":null,"code":"!function (e) {\n  e.languages.puppet = {\n    heredoc: [{\n      pattern: /(@\\(\"([^\"\\r\\n\\/):]+)\"(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r(?!\\n)))*?[ \\t]*(?:\\|[ \\t]*)?(?:-[ \\t]*)?\\2/,\n      lookbehind: !0,\n      alias: \"string\",\n      inside: {\n        punctuation: /(?=\\S).*\\S(?= *$)/\n      }\n    }, {\n      pattern: /(@\\(([^\"\\r\\n\\/):]+)(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r(?!\\n)))*?[ \\t]*(?:\\|[ \\t]*)?(?:-[ \\t]*)?\\2/,\n      lookbehind: !0,\n      greedy: !0,\n      alias: \"string\",\n      inside: {\n        punctuation: /(?=\\S).*\\S(?= *$)/\n      }\n    }, {\n      pattern: /@\\(\"?(?:[^\"\\r\\n\\/):]+)\"?(?:\\/[nrts$uL]*)?\\)/,\n      alias: \"string\",\n      inside: {\n        punctuation: {\n          pattern: /(\\().+?(?=\\))/,\n          lookbehind: !0\n        }\n      }\n    }],\n    \"multiline-comment\": {\n      pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n      lookbehind: !0,\n      greedy: !0,\n      alias: \"comment\"\n    },\n    regex: {\n      pattern: /((?:\\bnode\\s+|[~=\\(\\[\\{,]\\s*|[=+]>\\s*|^\\s*))\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/(?:[imx]+\\b|\\B)/,\n      lookbehind: !0,\n      greedy: !0,\n      inside: {\n        \"extended-regex\": {\n          pattern: /^\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/[im]*x[im]*$/,\n          inside: {\n            comment: /#.*/\n          }\n        }\n      }\n    },\n    comment: {\n      pattern: /(^|[^\\\\])#.*/,\n      lookbehind: !0,\n      greedy: !0\n    },\n    string: {\n      pattern: /([\"'])(?:\\$\\{(?:[^'\"}]|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}|\\$(?!\\{)|(?!\\1)[^\\\\$]|\\\\[\\s\\S])*\\1/,\n      greedy: !0,\n      inside: {\n        \"double-quoted\": {\n          pattern: /^\"[\\s\\S]*\"$/,\n          inside: {}\n        }\n      }\n    },\n    variable: {\n      pattern: /\\$(?:::)?\\w+(?:::\\w+)*/,\n      inside: {\n        punctuation: /::/\n      }\n    },\n    \"attr-name\": /(?:\\b\\w+|\\*)(?=\\s*=>)/,\n    function: [{\n      pattern: /(\\.)(?!\\d)\\w+/,\n      lookbehind: !0\n    }, /\\b(?:contain|debug|err|fail|include|info|notice|realize|require|tag|warning)\\b|\\b(?!\\d)\\w+(?=\\()/],\n    number: /\\b(?:0x[a-f\\d]+|\\d+(?:\\.\\d+)?(?:e-?\\d+)?)\\b/i,\n    boolean: /\\b(?:true|false)\\b/,\n    keyword: /\\b(?:application|attr|case|class|consumes|default|define|else|elsif|function|if|import|inherits|node|private|produces|type|undef|unless)\\b/,\n    datatype: {\n      pattern: /\\b(?:Any|Array|Boolean|Callable|Catalogentry|Class|Collection|Data|Default|Enum|Float|Hash|Integer|NotUndef|Numeric|Optional|Pattern|Regexp|Resource|Runtime|Scalar|String|Struct|Tuple|Type|Undef|Variant)\\b/,\n      alias: \"symbol\"\n    },\n    operator: /=[=~>]?|![=~]?|<(?:<\\|?|[=~|-])?|>[>=]?|->?|~>|\\|>?>?|[*\\/%+?]|\\b(?:and|in|or)\\b/,\n    punctuation: /[\\[\\]{}().,;]|:+/\n  };\n  var n = [{\n    pattern: /(^|[^\\\\])\\$\\{(?:[^'\"{}]|\\{[^}]*\\}|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}/,\n    lookbehind: !0,\n    inside: {\n      \"short-variable\": {\n        pattern: /(^\\$\\{)(?!\\w+\\()(?:::)?\\w+(?:::\\w+)*/,\n        lookbehind: !0,\n        alias: \"variable\",\n        inside: {\n          punctuation: /::/\n        }\n      },\n      delimiter: {\n        pattern: /^\\$/,\n        alias: \"variable\"\n      },\n      rest: e.languages.puppet\n    }\n  }, {\n    pattern: /(^|[^\\\\])\\$(?:::)?\\w+(?:::\\w+)*/,\n    lookbehind: !0,\n    alias: \"variable\",\n    inside: {\n      punctuation: /::/\n    }\n  }];\n  e.languages.puppet.heredoc[0].inside.interpolation = n, e.languages.puppet.string.inside[\"double-quoted\"].inside.interpolation = n;\n}(Prism);","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/github/react-snippy/node_modules/prismjs/components/prism-puppet.min.js"],"names":["e","languages","puppet","heredoc","pattern","lookbehind","alias","inside","punctuation","greedy","regex","comment","string","variable","function","number","boolean","keyword","datatype","operator","n","delimiter","rest","interpolation","Prism"],"mappings":"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","sourcesContent":["!function(e){e.languages.puppet={heredoc:[{pattern:/(@\\(\"([^\"\\r\\n\\/):]+)\"(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r(?!\\n)))*?[ \\t]*(?:\\|[ \\t]*)?(?:-[ \\t]*)?\\2/,lookbehind:!0,alias:\"string\",inside:{punctuation:/(?=\\S).*\\S(?= *$)/}},{pattern:/(@\\(([^\"\\r\\n\\/):]+)(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r(?!\\n)))*?[ \\t]*(?:\\|[ \\t]*)?(?:-[ \\t]*)?\\2/,lookbehind:!0,greedy:!0,alias:\"string\",inside:{punctuation:/(?=\\S).*\\S(?= *$)/}},{pattern:/@\\(\"?(?:[^\"\\r\\n\\/):]+)\"?(?:\\/[nrts$uL]*)?\\)/,alias:\"string\",inside:{punctuation:{pattern:/(\\().+?(?=\\))/,lookbehind:!0}}}],\"multiline-comment\":{pattern:/(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,lookbehind:!0,greedy:!0,alias:\"comment\"},regex:{pattern:/((?:\\bnode\\s+|[~=\\(\\[\\{,]\\s*|[=+]>\\s*|^\\s*))\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/(?:[imx]+\\b|\\B)/,lookbehind:!0,greedy:!0,inside:{\"extended-regex\":{pattern:/^\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/[im]*x[im]*$/,inside:{comment:/#.*/}}}},comment:{pattern:/(^|[^\\\\])#.*/,lookbehind:!0,greedy:!0},string:{pattern:/([\"'])(?:\\$\\{(?:[^'\"}]|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}|\\$(?!\\{)|(?!\\1)[^\\\\$]|\\\\[\\s\\S])*\\1/,greedy:!0,inside:{\"double-quoted\":{pattern:/^\"[\\s\\S]*\"$/,inside:{}}}},variable:{pattern:/\\$(?:::)?\\w+(?:::\\w+)*/,inside:{punctuation:/::/}},\"attr-name\":/(?:\\b\\w+|\\*)(?=\\s*=>)/,function:[{pattern:/(\\.)(?!\\d)\\w+/,lookbehind:!0},/\\b(?:contain|debug|err|fail|include|info|notice|realize|require|tag|warning)\\b|\\b(?!\\d)\\w+(?=\\()/],number:/\\b(?:0x[a-f\\d]+|\\d+(?:\\.\\d+)?(?:e-?\\d+)?)\\b/i,boolean:/\\b(?:true|false)\\b/,keyword:/\\b(?:application|attr|case|class|consumes|default|define|else|elsif|function|if|import|inherits|node|private|produces|type|undef|unless)\\b/,datatype:{pattern:/\\b(?:Any|Array|Boolean|Callable|Catalogentry|Class|Collection|Data|Default|Enum|Float|Hash|Integer|NotUndef|Numeric|Optional|Pattern|Regexp|Resource|Runtime|Scalar|String|Struct|Tuple|Type|Undef|Variant)\\b/,alias:\"symbol\"},operator:/=[=~>]?|![=~]?|<(?:<\\|?|[=~|-])?|>[>=]?|->?|~>|\\|>?>?|[*\\/%+?]|\\b(?:and|in|or)\\b/,punctuation:/[\\[\\]{}().,;]|:+/};var n=[{pattern:/(^|[^\\\\])\\$\\{(?:[^'\"{}]|\\{[^}]*\\}|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}/,lookbehind:!0,inside:{\"short-variable\":{pattern:/(^\\$\\{)(?!\\w+\\()(?:::)?\\w+(?:::\\w+)*/,lookbehind:!0,alias:\"variable\",inside:{punctuation:/::/}},delimiter:{pattern:/^\\$/,alias:\"variable\"},rest:e.languages.puppet}},{pattern:/(^|[^\\\\])\\$(?:::)?\\w+(?:::\\w+)*/,lookbehind:!0,alias:\"variable\",inside:{punctuation:/::/}}];e.languages.puppet.heredoc[0].inside.interpolation=n,e.languages.puppet.string.inside[\"double-quoted\"].inside.interpolation=n}(Prism);"]},"metadata":{},"sourceType":"script"}