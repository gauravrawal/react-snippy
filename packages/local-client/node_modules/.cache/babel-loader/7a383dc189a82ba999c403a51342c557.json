{"ast":null,"code":"\"use strict\";\n\n;\n/**\n * Type annotation defs shared between Flow and TypeScript.\n * These defs could not be defined in ./flow.ts or ./typescript.ts directly\n * because they use the same name.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar types_1 = tslib_1.__importDefault(require(\"../lib/types\"));\n\nvar shared_1 = tslib_1.__importDefault(require(\"../lib/shared\"));\n\nfunction default_1(fork) {\n  var types = fork.use(types_1.default);\n  var def = types.Type.def;\n  var or = types.Type.or;\n  var defaults = fork.use(shared_1.default).defaults;\n  var TypeAnnotation = or(def(\"TypeAnnotation\"), def(\"TSTypeAnnotation\"), null);\n  var TypeParamDecl = or(def(\"TypeParameterDeclaration\"), def(\"TSTypeParameterDeclaration\"), null);\n  def(\"Identifier\").field(\"typeAnnotation\", TypeAnnotation, defaults[\"null\"]);\n  def(\"ObjectPattern\").field(\"typeAnnotation\", TypeAnnotation, defaults[\"null\"]);\n  def(\"Function\").field(\"returnType\", TypeAnnotation, defaults[\"null\"]).field(\"typeParameters\", TypeParamDecl, defaults[\"null\"]);\n  def(\"ClassProperty\").build(\"key\", \"value\", \"typeAnnotation\", \"static\").field(\"value\", or(def(\"Expression\"), null)).field(\"static\", Boolean, defaults[\"false\"]).field(\"typeAnnotation\", TypeAnnotation, defaults[\"null\"]);\n  [\"ClassDeclaration\", \"ClassExpression\"].forEach(function (typeName) {\n    def(typeName).field(\"typeParameters\", TypeParamDecl, defaults[\"null\"]).field(\"superTypeParameters\", or(def(\"TypeParameterInstantiation\"), def(\"TSTypeParameterInstantiation\"), null), defaults[\"null\"]).field(\"implements\", or([def(\"ClassImplements\")], [def(\"TSExpressionWithTypeArguments\")]), defaults.emptyArray);\n  });\n}\n\nexports.default = default_1;\nmodule.exports = exports[\"default\"];","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/github/react-snippy/node_modules/jscodeshift/node_modules/ast-types/def/type-annotations.js"],"names":["Object","defineProperty","exports","value","tslib_1","require","types_1","__importDefault","shared_1","default_1","fork","types","use","default","def","Type","or","defaults","TypeAnnotation","TypeParamDecl","field","build","Boolean","forEach","typeName","emptyArray","module"],"mappings":"AAAA;;AAAa;AACb;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,OAAO,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAIC,OAAO,GAAGF,OAAO,CAACG,eAAR,CAAwBF,OAAO,CAAC,cAAD,CAA/B,CAAd;;AACA,IAAIG,QAAQ,GAAGJ,OAAO,CAACG,eAAR,CAAwBF,OAAO,CAAC,eAAD,CAA/B,CAAf;;AACA,SAASI,SAAT,CAAmBC,IAAnB,EAAyB;AACrB,MAAIC,KAAK,GAAGD,IAAI,CAACE,GAAL,CAASN,OAAO,CAACO,OAAjB,CAAZ;AACA,MAAIC,GAAG,GAAGH,KAAK,CAACI,IAAN,CAAWD,GAArB;AACA,MAAIE,EAAE,GAAGL,KAAK,CAACI,IAAN,CAAWC,EAApB;AACA,MAAIC,QAAQ,GAAGP,IAAI,CAACE,GAAL,CAASJ,QAAQ,CAACK,OAAlB,EAA2BI,QAA1C;AACA,MAAIC,cAAc,GAAGF,EAAE,CAACF,GAAG,CAAC,gBAAD,CAAJ,EAAwBA,GAAG,CAAC,kBAAD,CAA3B,EAAiD,IAAjD,CAAvB;AACA,MAAIK,aAAa,GAAGH,EAAE,CAACF,GAAG,CAAC,0BAAD,CAAJ,EAAkCA,GAAG,CAAC,4BAAD,CAArC,EAAqE,IAArE,CAAtB;AACAA,EAAAA,GAAG,CAAC,YAAD,CAAH,CACKM,KADL,CACW,gBADX,EAC6BF,cAD7B,EAC6CD,QAAQ,CAAC,MAAD,CADrD;AAEAH,EAAAA,GAAG,CAAC,eAAD,CAAH,CACKM,KADL,CACW,gBADX,EAC6BF,cAD7B,EAC6CD,QAAQ,CAAC,MAAD,CADrD;AAEAH,EAAAA,GAAG,CAAC,UAAD,CAAH,CACKM,KADL,CACW,YADX,EACyBF,cADzB,EACyCD,QAAQ,CAAC,MAAD,CADjD,EAEKG,KAFL,CAEW,gBAFX,EAE6BD,aAF7B,EAE4CF,QAAQ,CAAC,MAAD,CAFpD;AAGAH,EAAAA,GAAG,CAAC,eAAD,CAAH,CACKO,KADL,CACW,KADX,EACkB,OADlB,EAC2B,gBAD3B,EAC6C,QAD7C,EAEKD,KAFL,CAEW,OAFX,EAEoBJ,EAAE,CAACF,GAAG,CAAC,YAAD,CAAJ,EAAoB,IAApB,CAFtB,EAGKM,KAHL,CAGW,QAHX,EAGqBE,OAHrB,EAG8BL,QAAQ,CAAC,OAAD,CAHtC,EAIKG,KAJL,CAIW,gBAJX,EAI6BF,cAJ7B,EAI6CD,QAAQ,CAAC,MAAD,CAJrD;AAKA,GAAC,kBAAD,EACI,iBADJ,EAEEM,OAFF,CAEU,UAAUC,QAAV,EAAoB;AAC1BV,IAAAA,GAAG,CAACU,QAAD,CAAH,CACKJ,KADL,CACW,gBADX,EAC6BD,aAD7B,EAC4CF,QAAQ,CAAC,MAAD,CADpD,EAEKG,KAFL,CAEW,qBAFX,EAEkCJ,EAAE,CAACF,GAAG,CAAC,4BAAD,CAAJ,EAAoCA,GAAG,CAAC,8BAAD,CAAvC,EAAyE,IAAzE,CAFpC,EAEoHG,QAAQ,CAAC,MAAD,CAF5H,EAGKG,KAHL,CAGW,YAHX,EAGyBJ,EAAE,CAAC,CAACF,GAAG,CAAC,iBAAD,CAAJ,CAAD,EAA2B,CAACA,GAAG,CAAC,+BAAD,CAAJ,CAA3B,CAH3B,EAG+FG,QAAQ,CAACQ,UAHxG;AAIH,GAPD;AAQH;;AACDvB,OAAO,CAACW,OAAR,GAAkBJ,SAAlB;AACAiB,MAAM,CAACxB,OAAP,GAAiBA,OAAO,CAAC,SAAD,CAAxB","sourcesContent":["\"use strict\";;\n/**\n * Type annotation defs shared between Flow and TypeScript.\n * These defs could not be defined in ./flow.ts or ./typescript.ts directly\n * because they use the same name.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar types_1 = tslib_1.__importDefault(require(\"../lib/types\"));\nvar shared_1 = tslib_1.__importDefault(require(\"../lib/shared\"));\nfunction default_1(fork) {\n    var types = fork.use(types_1.default);\n    var def = types.Type.def;\n    var or = types.Type.or;\n    var defaults = fork.use(shared_1.default).defaults;\n    var TypeAnnotation = or(def(\"TypeAnnotation\"), def(\"TSTypeAnnotation\"), null);\n    var TypeParamDecl = or(def(\"TypeParameterDeclaration\"), def(\"TSTypeParameterDeclaration\"), null);\n    def(\"Identifier\")\n        .field(\"typeAnnotation\", TypeAnnotation, defaults[\"null\"]);\n    def(\"ObjectPattern\")\n        .field(\"typeAnnotation\", TypeAnnotation, defaults[\"null\"]);\n    def(\"Function\")\n        .field(\"returnType\", TypeAnnotation, defaults[\"null\"])\n        .field(\"typeParameters\", TypeParamDecl, defaults[\"null\"]);\n    def(\"ClassProperty\")\n        .build(\"key\", \"value\", \"typeAnnotation\", \"static\")\n        .field(\"value\", or(def(\"Expression\"), null))\n        .field(\"static\", Boolean, defaults[\"false\"])\n        .field(\"typeAnnotation\", TypeAnnotation, defaults[\"null\"]);\n    [\"ClassDeclaration\",\n        \"ClassExpression\",\n    ].forEach(function (typeName) {\n        def(typeName)\n            .field(\"typeParameters\", TypeParamDecl, defaults[\"null\"])\n            .field(\"superTypeParameters\", or(def(\"TypeParameterInstantiation\"), def(\"TSTypeParameterInstantiation\"), null), defaults[\"null\"])\n            .field(\"implements\", or([def(\"ClassImplements\")], [def(\"TSExpressionWithTypeArguments\")]), defaults.emptyArray);\n    });\n}\nexports.default = default_1;\nmodule.exports = exports[\"default\"];\n"]},"metadata":{},"sourceType":"script"}