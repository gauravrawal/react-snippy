{"ast":null,"code":"!function (n) {\n  function e(e) {\n    return function () {\n      return e;\n    };\n  }\n\n  var r = /\\b(?:align|allowzero|and|asm|async|await|break|cancel|catch|comptime|const|continue|defer|else|enum|errdefer|error|export|extern|fn|for|if|inline|linksection|nakedcc|noalias|null|or|orelse|packed|promise|pub|resume|return|stdcallcc|struct|suspend|switch|test|threadlocal|try|undefined|union|unreachable|usingnamespace|var|volatile|while)\\b/,\n      a = \"\\\\b(?!\" + r.source + \")(?!\\\\d)\\\\w+\\\\b\",\n      o = \"align\\\\s*\\\\((?:[^()]|\\\\([^()]*\\\\))*\\\\)\",\n      s = \"(?!\\\\s)(?:!?\\\\s*(?:\" + \"(?:\\\\?|\\\\bpromise->|(?:\\\\[[^[\\\\]]*\\\\]|\\\\*(?!\\\\*)|\\\\*\\\\*)(?:\\\\s*<ALIGN>|\\\\s*const\\\\b|\\\\s*volatile\\\\b|\\\\s*allowzero\\\\b)*)\".replace(/<ALIGN>/g, e(o)) + \"\\\\s*)*\" + \"(?:\\\\bpromise\\\\b|(?:\\\\berror\\\\.)?<ID>(?:\\\\.<ID>)*(?!\\\\s+<ID>))\".replace(/<ID>/g, e(a)) + \")+\";\n  n.languages.zig = {\n    comment: [{\n      pattern: /\\/{3}.*/,\n      alias: \"doc-comment\"\n    }, /\\/{2}.*/],\n    string: [{\n      pattern: /(^|[^\\\\@])c?\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"/,\n      lookbehind: !0,\n      greedy: !0\n    }, {\n      pattern: /([\\r\\n])([ \\t]+c?\\\\{2}).*(?:(?:\\r\\n?|\\n)\\2.*)*/,\n      lookbehind: !0,\n      greedy: !0\n    }, {\n      pattern: /(^|[^\\\\])'(?:[^'\\\\\\r\\n]|\\\\(?:.|x[a-fA-F\\d]{2}|u\\{[a-fA-F\\d]{1,6}\\}))'/,\n      lookbehind: !0,\n      greedy: !0\n    }],\n    builtin: /\\B@(?!\\d)\\w+(?=\\s*\\()/,\n    label: {\n      pattern: /(\\b(?:break|continue)\\s*:\\s*)\\w+\\b|\\b(?!\\d)\\w+\\b(?=\\s*:\\s*(?:\\{|while\\b))/,\n      lookbehind: !0\n    },\n    \"class-name\": [/\\b(?!\\d)\\w+(?=\\s*=\\s*(?:(?:extern|packed)\\s+)?(?:enum|struct|union)\\s*[({])/, {\n      pattern: RegExp(\"(:\\\\s*)<TYPE>(?=\\\\s*(?:<ALIGN>\\\\s*)?[=;,)])|<TYPE>(?=\\\\s*(?:<ALIGN>\\\\s*)?\\\\{)\".replace(/<TYPE>/g, e(s)).replace(/<ALIGN>/g, e(o))),\n      lookbehind: !0,\n      inside: null\n    }, {\n      pattern: RegExp(\"(\\\\)\\\\s*)<TYPE>(?=\\\\s*(?:<ALIGN>\\\\s*)?;)\".replace(/<TYPE>/g, e(s)).replace(/<ALIGN>/g, e(o))),\n      lookbehind: !0,\n      inside: null\n    }],\n    \"builtin-types\": {\n      pattern: /\\b(?:anyerror|bool|c_u?(?:short|int|long|longlong)|c_longdouble|c_void|comptime_(?:float|int)|[iu](?:8|16|32|64|128|size)|f(?:16|32|64|128)|noreturn|type|void)\\b/,\n      alias: \"keyword\"\n    },\n    keyword: r,\n    function: /\\b(?!\\d)\\w+(?=\\s*\\()/,\n    number: /\\b(?:0b[01]+|0o[0-7]+|0x[a-fA-F\\d]+(?:\\.[a-fA-F\\d]*)?(?:[pP][+-]?[a-fA-F\\d]+)?|\\d+(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    operator: /\\.[*?]|\\.{2,3}|[-=]>|\\*\\*|\\+\\+|\\|\\||(?:<<|>>|[-+*]%|[-+*/%^&|<>!=])=?|[?~]/,\n    punctuation: /[.:,;(){}[\\]]/\n  }, n.languages.zig[\"class-name\"].forEach(function (e) {\n    null === e.inside && (e.inside = n.languages.zig);\n  });\n}(Prism);","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/github/react-snippy/node_modules/prismjs/components/prism-zig.min.js"],"names":["n","e","r","a","source","o","s","replace","languages","zig","comment","pattern","alias","string","lookbehind","greedy","builtin","label","RegExp","inside","keyword","function","number","boolean","operator","punctuation","forEach","Prism"],"mappings":"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","sourcesContent":["!function(n){function e(e){return function(){return e}}var r=/\\b(?:align|allowzero|and|asm|async|await|break|cancel|catch|comptime|const|continue|defer|else|enum|errdefer|error|export|extern|fn|for|if|inline|linksection|nakedcc|noalias|null|or|orelse|packed|promise|pub|resume|return|stdcallcc|struct|suspend|switch|test|threadlocal|try|undefined|union|unreachable|usingnamespace|var|volatile|while)\\b/,a=\"\\\\b(?!\"+r.source+\")(?!\\\\d)\\\\w+\\\\b\",o=\"align\\\\s*\\\\((?:[^()]|\\\\([^()]*\\\\))*\\\\)\",s=\"(?!\\\\s)(?:!?\\\\s*(?:\"+\"(?:\\\\?|\\\\bpromise->|(?:\\\\[[^[\\\\]]*\\\\]|\\\\*(?!\\\\*)|\\\\*\\\\*)(?:\\\\s*<ALIGN>|\\\\s*const\\\\b|\\\\s*volatile\\\\b|\\\\s*allowzero\\\\b)*)\".replace(/<ALIGN>/g,e(o))+\"\\\\s*)*\"+\"(?:\\\\bpromise\\\\b|(?:\\\\berror\\\\.)?<ID>(?:\\\\.<ID>)*(?!\\\\s+<ID>))\".replace(/<ID>/g,e(a))+\")+\";n.languages.zig={comment:[{pattern:/\\/{3}.*/,alias:\"doc-comment\"},/\\/{2}.*/],string:[{pattern:/(^|[^\\\\@])c?\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"/,lookbehind:!0,greedy:!0},{pattern:/([\\r\\n])([ \\t]+c?\\\\{2}).*(?:(?:\\r\\n?|\\n)\\2.*)*/,lookbehind:!0,greedy:!0},{pattern:/(^|[^\\\\])'(?:[^'\\\\\\r\\n]|\\\\(?:.|x[a-fA-F\\d]{2}|u\\{[a-fA-F\\d]{1,6}\\}))'/,lookbehind:!0,greedy:!0}],builtin:/\\B@(?!\\d)\\w+(?=\\s*\\()/,label:{pattern:/(\\b(?:break|continue)\\s*:\\s*)\\w+\\b|\\b(?!\\d)\\w+\\b(?=\\s*:\\s*(?:\\{|while\\b))/,lookbehind:!0},\"class-name\":[/\\b(?!\\d)\\w+(?=\\s*=\\s*(?:(?:extern|packed)\\s+)?(?:enum|struct|union)\\s*[({])/,{pattern:RegExp(\"(:\\\\s*)<TYPE>(?=\\\\s*(?:<ALIGN>\\\\s*)?[=;,)])|<TYPE>(?=\\\\s*(?:<ALIGN>\\\\s*)?\\\\{)\".replace(/<TYPE>/g,e(s)).replace(/<ALIGN>/g,e(o))),lookbehind:!0,inside:null},{pattern:RegExp(\"(\\\\)\\\\s*)<TYPE>(?=\\\\s*(?:<ALIGN>\\\\s*)?;)\".replace(/<TYPE>/g,e(s)).replace(/<ALIGN>/g,e(o))),lookbehind:!0,inside:null}],\"builtin-types\":{pattern:/\\b(?:anyerror|bool|c_u?(?:short|int|long|longlong)|c_longdouble|c_void|comptime_(?:float|int)|[iu](?:8|16|32|64|128|size)|f(?:16|32|64|128)|noreturn|type|void)\\b/,alias:\"keyword\"},keyword:r,function:/\\b(?!\\d)\\w+(?=\\s*\\()/,number:/\\b(?:0b[01]+|0o[0-7]+|0x[a-fA-F\\d]+(?:\\.[a-fA-F\\d]*)?(?:[pP][+-]?[a-fA-F\\d]+)?|\\d+(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\b/,boolean:/\\b(?:false|true)\\b/,operator:/\\.[*?]|\\.{2,3}|[-=]>|\\*\\*|\\+\\+|\\|\\||(?:<<|>>|[-+*]%|[-+*/%^&|<>!=])=?|[?~]/,punctuation:/[.:,;(){}[\\]]/},n.languages.zig[\"class-name\"].forEach(function(e){null===e.inside&&(e.inside=n.languages.zig)})}(Prism);"]},"metadata":{},"sourceType":"script"}