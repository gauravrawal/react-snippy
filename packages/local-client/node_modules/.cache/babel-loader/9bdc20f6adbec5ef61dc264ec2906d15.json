{"ast":null,"code":"'use strict';\n\nvar syntax = require('micromark-extension-gfm');\n\nvar fromMarkdown = require('mdast-util-gfm/from-markdown');\n\nvar toMarkdown = require('mdast-util-gfm/to-markdown');\n\nvar warningIssued;\nmodule.exports = gfm;\n\nfunction gfm(options) {\n  var data = this.data();\n  /* istanbul ignore next - old remark. */\n\n  if (!warningIssued && (this.Parser && this.Parser.prototype && this.Parser.prototype.blockTokenizers || this.Compiler && this.Compiler.prototype && this.Compiler.prototype.visitors)) {\n    warningIssued = true;\n    console.warn('[remark-gfm] Warning: please upgrade to remark 13 to use this plugin');\n  }\n\n  add('micromarkExtensions', syntax(options));\n  add('fromMarkdownExtensions', fromMarkdown);\n  add('toMarkdownExtensions', toMarkdown(options));\n\n  function add(field, value) {\n    /* istanbul ignore if - other extensions. */\n    if (data[field]) data[field].push(value);else data[field] = [value];\n  }\n}","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/github/react-snippy/node_modules/remark-gfm/index.js"],"names":["syntax","require","fromMarkdown","toMarkdown","warningIssued","module","exports","gfm","options","data","Parser","prototype","blockTokenizers","Compiler","visitors","console","warn","add","field","value","push"],"mappings":"AAAA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,yBAAD,CAApB;;AACA,IAAIC,YAAY,GAAGD,OAAO,CAAC,8BAAD,CAA1B;;AACA,IAAIE,UAAU,GAAGF,OAAO,CAAC,4BAAD,CAAxB;;AAEA,IAAIG,aAAJ;AAEAC,MAAM,CAACC,OAAP,GAAiBC,GAAjB;;AAEA,SAASA,GAAT,CAAaC,OAAb,EAAsB;AACpB,MAAIC,IAAI,GAAG,KAAKA,IAAL,EAAX;AAEA;;AACA,MACE,CAACL,aAAD,KACE,KAAKM,MAAL,IACA,KAAKA,MAAL,CAAYC,SADZ,IAEA,KAAKD,MAAL,CAAYC,SAAZ,CAAsBC,eAFvB,IAGE,KAAKC,QAAL,IACC,KAAKA,QAAL,CAAcF,SADf,IAEC,KAAKE,QAAL,CAAcF,SAAd,CAAwBG,QAN5B,CADF,EAQE;AACAV,IAAAA,aAAa,GAAG,IAAhB;AACAW,IAAAA,OAAO,CAACC,IAAR,CACE,sEADF;AAGD;;AAEDC,EAAAA,GAAG,CAAC,qBAAD,EAAwBjB,MAAM,CAACQ,OAAD,CAA9B,CAAH;AACAS,EAAAA,GAAG,CAAC,wBAAD,EAA2Bf,YAA3B,CAAH;AACAe,EAAAA,GAAG,CAAC,sBAAD,EAAyBd,UAAU,CAACK,OAAD,CAAnC,CAAH;;AAEA,WAASS,GAAT,CAAaC,KAAb,EAAoBC,KAApB,EAA2B;AACzB;AACA,QAAIV,IAAI,CAACS,KAAD,CAAR,EAAiBT,IAAI,CAACS,KAAD,CAAJ,CAAYE,IAAZ,CAAiBD,KAAjB,EAAjB,KACKV,IAAI,CAACS,KAAD,CAAJ,GAAc,CAACC,KAAD,CAAd;AACN;AACF","sourcesContent":["'use strict'\n\nvar syntax = require('micromark-extension-gfm')\nvar fromMarkdown = require('mdast-util-gfm/from-markdown')\nvar toMarkdown = require('mdast-util-gfm/to-markdown')\n\nvar warningIssued\n\nmodule.exports = gfm\n\nfunction gfm(options) {\n  var data = this.data()\n\n  /* istanbul ignore next - old remark. */\n  if (\n    !warningIssued &&\n    ((this.Parser &&\n      this.Parser.prototype &&\n      this.Parser.prototype.blockTokenizers) ||\n      (this.Compiler &&\n        this.Compiler.prototype &&\n        this.Compiler.prototype.visitors))\n  ) {\n    warningIssued = true\n    console.warn(\n      '[remark-gfm] Warning: please upgrade to remark 13 to use this plugin'\n    )\n  }\n\n  add('micromarkExtensions', syntax(options))\n  add('fromMarkdownExtensions', fromMarkdown)\n  add('toMarkdownExtensions', toMarkdown(options))\n\n  function add(field, value) {\n    /* istanbul ignore if - other extensions. */\n    if (data[field]) data[field].push(value)\n    else data[field] = [value]\n  }\n}\n"]},"metadata":{},"sourceType":"script"}