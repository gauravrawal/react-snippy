{"ast":null,"code":"!function (e) {\n  var n = {\n    pattern: /[\\s\\S]+/,\n    inside: null\n  };\n  e.languages.v = e.languages.extend(\"clike\", {\n    string: [{\n      pattern: /`(?:\\\\`|\\\\?[^`]{1,2})`/,\n      alias: \"rune\"\n    }, {\n      pattern: /r?([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      alias: \"quoted-string\",\n      greedy: !0,\n      inside: {\n        interpolation: {\n          pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:\\{[^{}]*\\}|\\w+(?:\\.\\w+(?:\\([^\\(\\)]*\\))?|\\[[^\\[\\]]+\\])*)/,\n          lookbehind: !0,\n          inside: {\n            \"interpolation-variable\": {\n              pattern: /^\\$\\w[\\s\\S]*$/,\n              alias: \"variable\"\n            },\n            \"interpolation-punctuation\": {\n              pattern: /^\\$\\{|\\}$/,\n              alias: \"punctuation\"\n            },\n            \"interpolation-expression\": n\n          }\n        }\n      }\n    }],\n    \"class-name\": {\n      pattern: /(\\b(?:enum|interface|struct|type)\\s+)(?:C\\.)?\\w+/,\n      lookbehind: !0\n    },\n    keyword: /(?:\\b(?:as|asm|assert|atomic|break|chan|const|continue|defer|else|embed|enum|fn|for|__global|go(?:to)?|if|import|in|interface|is|lock|match|module|mut|none|or|pub|return|rlock|select|shared|sizeof|static|struct|type(?:of)?|union|unsafe)|\\$(?:if|else|for)|#(?:include|flag))\\b/,\n    number: /\\b(?:0x[a-f\\d]+(?:_[a-f\\d]+)*|0b[01]+(?:_[01]+)*|0o[0-7]+(?:_[0-7]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?)\\b/i,\n    operator: /~|\\?|[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\.?/,\n    builtin: /\\b(?:any(?:_int|_float)?|bool|byte(?:ptr)?|charptr|f(?:32|64)|i(?:8|16|nt|64|128)|rune|size_t|string|u(?:16|32|64|128)|voidptr)\\b/\n  }), n.inside = e.languages.v, e.languages.insertBefore(\"v\", \"operator\", {\n    attribute: {\n      pattern: /(^[\\t ]*)\\[(?:deprecated|unsafe_fn|typedef|live|inline|flag|ref_only|windows_stdcall|direct_array_access)\\]/m,\n      lookbehind: !0,\n      alias: \"annotation\",\n      inside: {\n        punctuation: /[\\[\\]]/,\n        keyword: /\\w+/\n      }\n    },\n    generic: {\n      pattern: /<\\w+>(?=\\s*[\\)\\{])/,\n      inside: {\n        punctuation: /[<>]/,\n        \"class-name\": /\\w+/\n      }\n    }\n  }), e.languages.insertBefore(\"v\", \"function\", {\n    \"generic-function\": {\n      pattern: /\\b\\w+\\s*<\\w+>(?=\\()/,\n      inside: {\n        function: /^\\w+/,\n        generic: {\n          pattern: /<\\w+>/,\n          inside: e.languages.v.generic.inside\n        }\n      }\n    }\n  });\n}(Prism);","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/github/react-snippy/node_modules/prismjs/components/prism-v.min.js"],"names":["e","n","pattern","inside","languages","v","extend","string","alias","greedy","interpolation","lookbehind","keyword","number","operator","builtin","insertBefore","attribute","punctuation","generic","function","Prism"],"mappings":"AAAA,CAAC,UAASA,CAAT,EAAW;AAAC,MAAIC,CAAC,GAAC;AAACC,IAAAA,OAAO,EAAC,SAAT;AAAmBC,IAAAA,MAAM,EAAC;AAA1B,GAAN;AAAsCH,EAAAA,CAAC,CAACI,SAAF,CAAYC,CAAZ,GAAcL,CAAC,CAACI,SAAF,CAAYE,MAAZ,CAAmB,OAAnB,EAA2B;AAACC,IAAAA,MAAM,EAAC,CAAC;AAACL,MAAAA,OAAO,EAAC,wBAAT;AAAkCM,MAAAA,KAAK,EAAC;AAAxC,KAAD,EAAiD;AAACN,MAAAA,OAAO,EAAC,kDAAT;AAA4DM,MAAAA,KAAK,EAAC,eAAlE;AAAkFC,MAAAA,MAAM,EAAC,CAAC,CAA1F;AAA4FN,MAAAA,MAAM,EAAC;AAACO,QAAAA,aAAa,EAAC;AAACR,UAAAA,OAAO,EAAC,qFAAT;AAA+FS,UAAAA,UAAU,EAAC,CAAC,CAA3G;AAA6GR,UAAAA,MAAM,EAAC;AAAC,sCAAyB;AAACD,cAAAA,OAAO,EAAC,eAAT;AAAyBM,cAAAA,KAAK,EAAC;AAA/B,aAA1B;AAAqE,yCAA4B;AAACN,cAAAA,OAAO,EAAC,WAAT;AAAqBM,cAAAA,KAAK,EAAC;AAA3B,aAAjG;AAA2I,wCAA2BP;AAAtK;AAApH;AAAf;AAAnG,KAAjD,CAAR;AAA4c,kBAAa;AAACC,MAAAA,OAAO,EAAC,kDAAT;AAA4DS,MAAAA,UAAU,EAAC,CAAC;AAAxE,KAAzd;AAAoiBC,IAAAA,OAAO,EAAC,qRAA5iB;AAAk0BC,IAAAA,MAAM,EAAC,2GAAz0B;AAAq7BC,IAAAA,QAAQ,EAAC,6FAA97B;AAA4hCC,IAAAA,OAAO,EAAC;AAApiC,GAA3B,CAAd,EAAmtCd,CAAC,CAACE,MAAF,GAASH,CAAC,CAACI,SAAF,CAAYC,CAAxuC,EAA0uCL,CAAC,CAACI,SAAF,CAAYY,YAAZ,CAAyB,GAAzB,EAA6B,UAA7B,EAAwC;AAACC,IAAAA,SAAS,EAAC;AAACf,MAAAA,OAAO,EAAC,8GAAT;AAAwHS,MAAAA,UAAU,EAAC,CAAC,CAApI;AAAsIH,MAAAA,KAAK,EAAC,YAA5I;AAAyJL,MAAAA,MAAM,EAAC;AAACe,QAAAA,WAAW,EAAC,QAAb;AAAsBN,QAAAA,OAAO,EAAC;AAA9B;AAAhK,KAAX;AAAiNO,IAAAA,OAAO,EAAC;AAACjB,MAAAA,OAAO,EAAC,oBAAT;AAA8BC,MAAAA,MAAM,EAAC;AAACe,QAAAA,WAAW,EAAC,MAAb;AAAoB,sBAAa;AAAjC;AAArC;AAAzN,GAAxC,CAA1uC,EAA2jDlB,CAAC,CAACI,SAAF,CAAYY,YAAZ,CAAyB,GAAzB,EAA6B,UAA7B,EAAwC;AAAC,wBAAmB;AAACd,MAAAA,OAAO,EAAC,qBAAT;AAA+BC,MAAAA,MAAM,EAAC;AAACiB,QAAAA,QAAQ,EAAC,MAAV;AAAiBD,QAAAA,OAAO,EAAC;AAACjB,UAAAA,OAAO,EAAC,OAAT;AAAiBC,UAAAA,MAAM,EAACH,CAAC,CAACI,SAAF,CAAYC,CAAZ,CAAcc,OAAd,CAAsBhB;AAA9C;AAAzB;AAAtC;AAApB,GAAxC,CAA3jD;AAAgvD,CAAlyD,CAAmyDkB,KAAnyD,CAAD","sourcesContent":["!function(e){var n={pattern:/[\\s\\S]+/,inside:null};e.languages.v=e.languages.extend(\"clike\",{string:[{pattern:/`(?:\\\\`|\\\\?[^`]{1,2})`/,alias:\"rune\"},{pattern:/r?([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,alias:\"quoted-string\",greedy:!0,inside:{interpolation:{pattern:/((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:\\{[^{}]*\\}|\\w+(?:\\.\\w+(?:\\([^\\(\\)]*\\))?|\\[[^\\[\\]]+\\])*)/,lookbehind:!0,inside:{\"interpolation-variable\":{pattern:/^\\$\\w[\\s\\S]*$/,alias:\"variable\"},\"interpolation-punctuation\":{pattern:/^\\$\\{|\\}$/,alias:\"punctuation\"},\"interpolation-expression\":n}}}}],\"class-name\":{pattern:/(\\b(?:enum|interface|struct|type)\\s+)(?:C\\.)?\\w+/,lookbehind:!0},keyword:/(?:\\b(?:as|asm|assert|atomic|break|chan|const|continue|defer|else|embed|enum|fn|for|__global|go(?:to)?|if|import|in|interface|is|lock|match|module|mut|none|or|pub|return|rlock|select|shared|sizeof|static|struct|type(?:of)?|union|unsafe)|\\$(?:if|else|for)|#(?:include|flag))\\b/,number:/\\b(?:0x[a-f\\d]+(?:_[a-f\\d]+)*|0b[01]+(?:_[01]+)*|0o[0-7]+(?:_[0-7]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?)\\b/i,operator:/~|\\?|[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\.?/,builtin:/\\b(?:any(?:_int|_float)?|bool|byte(?:ptr)?|charptr|f(?:32|64)|i(?:8|16|nt|64|128)|rune|size_t|string|u(?:16|32|64|128)|voidptr)\\b/}),n.inside=e.languages.v,e.languages.insertBefore(\"v\",\"operator\",{attribute:{pattern:/(^[\\t ]*)\\[(?:deprecated|unsafe_fn|typedef|live|inline|flag|ref_only|windows_stdcall|direct_array_access)\\]/m,lookbehind:!0,alias:\"annotation\",inside:{punctuation:/[\\[\\]]/,keyword:/\\w+/}},generic:{pattern:/<\\w+>(?=\\s*[\\)\\{])/,inside:{punctuation:/[<>]/,\"class-name\":/\\w+/}}}),e.languages.insertBefore(\"v\",\"function\",{\"generic-function\":{pattern:/\\b\\w+\\s*<\\w+>(?=\\()/,inside:{function:/^\\w+/,generic:{pattern:/<\\w+>/,inside:e.languages.v.generic.inside}}}})}(Prism);"]},"metadata":{},"sourceType":"script"}