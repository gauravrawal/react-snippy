{"ast":null,"code":"(function (Prism) {\n  Prism.languages.xeora = Prism.languages.extend('markup', {\n    'constant': {\n      pattern: /\\$(?:DomainContents|PageRenderDuration)\\$/,\n      inside: {\n        'punctuation': {\n          pattern: /\\$/\n        }\n      }\n    },\n    'variable': {\n      pattern: /\\$@?(?:#+|[-+*~=^])?[\\w.]+\\$/,\n      inside: {\n        'punctuation': {\n          pattern: /[$.]/\n        },\n        'operator': {\n          pattern: /#+|[-+*~=^@]/\n        }\n      }\n    },\n    'function-inline': {\n      pattern: /\\$F:[-\\w.]+\\?[-\\w.]+(?:,(?:(?:@[-#]*\\w+\\.[\\w+.]\\.*)*\\|)*(?:(?:[\\w+]|[-#*.~^]+[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*|(?:@[-#]*\\w+\\.[\\w+.]\\.*)+(?:(?:[\\w+]|[-#*~^][-#*.~^]*[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*)?)?)?\\$/,\n      inside: {\n        'variable': {\n          pattern: /(?:[,|])@?(?:#+|[-+*~=^])?[\\w.]+/,\n          inside: {\n            'punctuation': {\n              pattern: /[,.|]/\n            },\n            'operator': {\n              pattern: /#+|[-+*~=^@]/\n            }\n          }\n        },\n        'punctuation': {\n          pattern: /\\$\\w:|[$:?.,|]/\n        }\n      },\n      alias: 'function'\n    },\n    'function-block': {\n      pattern: /\\$XF:\\{[-\\w.]+\\?[-\\w.]+(?:,(?:(?:@[-#]*\\w+\\.[\\w+.]\\.*)*\\|)*(?:(?:[\\w+]|[-#*.~^]+[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*|(?:@[-#]*\\w+\\.[\\w+.]\\.*)+(?:(?:[\\w+]|[-#*~^][-#*.~^]*[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*)?)?)?\\}:XF\\$/,\n      inside: {\n        'punctuation': {\n          pattern: /[$:{}?.,|]/\n        }\n      },\n      alias: 'function'\n    },\n    'directive-inline': {\n      pattern: /\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+\\])?:[-\\/\\w.]+\\$/,\n      inside: {\n        'punctuation': {\n          pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n          inside: {\n            'tag': {\n              pattern: /#\\d/\n            }\n          }\n        }\n      },\n      alias: 'function'\n    },\n    'directive-block-open': {\n      pattern: /\\$\\w+:\\{|\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+\\])?:[-\\w.]+:\\{(?:![A-Z]+)?/,\n      inside: {\n        'punctuation': {\n          pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n          inside: {\n            'tag': {\n              pattern: /#\\d/\n            }\n          }\n        },\n        'attribute': {\n          pattern: /![A-Z]+$/,\n          inside: {\n            'punctuation': {\n              pattern: /!/\n            }\n          },\n          alias: 'keyword'\n        }\n      },\n      alias: 'function'\n    },\n    'directive-block-separator': {\n      pattern: /\\}:[-\\w.]+:\\{/,\n      inside: {\n        'punctuation': {\n          pattern: /[:{}]/\n        }\n      },\n      alias: 'function'\n    },\n    'directive-block-close': {\n      pattern: /\\}:[-\\w.]+\\$/,\n      inside: {\n        'punctuation': {\n          pattern: /[:{}$]/\n        }\n      },\n      alias: 'function'\n    }\n  });\n  Prism.languages.insertBefore('inside', 'punctuation', {\n    'variable': Prism.languages.xeora['function-inline'].inside['variable']\n  }, Prism.languages.xeora['function-block']);\n  Prism.languages.xeoracube = Prism.languages.xeora;\n})(Prism);","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/github/react-snippy/node_modules/prismjs/components/prism-xeora.js"],"names":["Prism","languages","xeora","extend","pattern","inside","alias","insertBefore","xeoracube"],"mappings":"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","sourcesContent":["(function (Prism) {\n\tPrism.languages.xeora = Prism.languages.extend('markup', {\n\t\t'constant': {\n\t\t\tpattern: /\\$(?:DomainContents|PageRenderDuration)\\$/,\n\t\t\tinside: {\n\t\t\t\t'punctuation': {\n\t\t\t\t\tpattern: /\\$/\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'variable': {\n\t\t\tpattern: /\\$@?(?:#+|[-+*~=^])?[\\w.]+\\$/,\n\t\t\tinside: {\n\t\t\t\t'punctuation': {\n\t\t\t\t\tpattern: /[$.]/\n\t\t\t\t},\n\t\t\t\t'operator': {\n\t\t\t\t\tpattern: /#+|[-+*~=^@]/\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'function-inline': {\n\t\t\tpattern: /\\$F:[-\\w.]+\\?[-\\w.]+(?:,(?:(?:@[-#]*\\w+\\.[\\w+.]\\.*)*\\|)*(?:(?:[\\w+]|[-#*.~^]+[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*|(?:@[-#]*\\w+\\.[\\w+.]\\.*)+(?:(?:[\\w+]|[-#*~^][-#*.~^]*[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*)?)?)?\\$/,\n\t\t\tinside: {\n\t\t\t\t'variable': {\n\t\t\t\t\tpattern: /(?:[,|])@?(?:#+|[-+*~=^])?[\\w.]+/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': {\n\t\t\t\t\t\t\tpattern: /[,.|]/\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'operator': {\n\t\t\t\t\t\t\tpattern: /#+|[-+*~=^@]/\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'punctuation': {\n\t\t\t\t\tpattern: /\\$\\w:|[$:?.,|]/\n\t\t\t\t}\n\t\t\t},\n\t\t\talias: 'function'\n\t\t},\n\t\t'function-block': {\n\t\t\tpattern: /\\$XF:\\{[-\\w.]+\\?[-\\w.]+(?:,(?:(?:@[-#]*\\w+\\.[\\w+.]\\.*)*\\|)*(?:(?:[\\w+]|[-#*.~^]+[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*|(?:@[-#]*\\w+\\.[\\w+.]\\.*)+(?:(?:[\\w+]|[-#*~^][-#*.~^]*[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*)?)?)?\\}:XF\\$/,\n\t\t\tinside: {\n\t\t\t\t'punctuation': {\n\t\t\t\t\tpattern: /[$:{}?.,|]/\n\t\t\t\t}\n\t\t\t},\n\t\t\talias: 'function'\n\t\t},\n\t\t'directive-inline': {\n\t\t\tpattern: /\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+\\])?:[-\\/\\w.]+\\$/,\n\t\t\tinside: {\n\t\t\t\t'punctuation': {\n\t\t\t\t\tpattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'tag': {\n\t\t\t\t\t\t\tpattern: /#\\d/\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\talias: 'function'\n\t\t},\n\t\t'directive-block-open': {\n\t\t\tpattern: /\\$\\w+:\\{|\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+\\])?:[-\\w.]+:\\{(?:![A-Z]+)?/,\n\t\t\tinside: {\n\t\t\t\t'punctuation': {\n\t\t\t\t\tpattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'tag': {\n\t\t\t\t\t\t\tpattern: /#\\d/\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'attribute': {\n\t\t\t\t\tpattern: /![A-Z]+$/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': {\n\t\t\t\t\t\t\tpattern: /!/\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\talias: 'keyword'\n\t\t\t\t}\n\t\t\t},\n\t\t\talias: 'function'\n\t\t},\n\t\t'directive-block-separator': {\n\t\t\tpattern: /\\}:[-\\w.]+:\\{/,\n\t\t\tinside: {\n\t\t\t\t'punctuation': {\n\t\t\t\t\tpattern: /[:{}]/\n\t\t\t\t}\n\t\t\t},\n\t\t\talias: 'function'\n\t\t},\n\t\t'directive-block-close': {\n\t\t\tpattern: /\\}:[-\\w.]+\\$/,\n\t\t\tinside: {\n\t\t\t\t'punctuation': {\n\t\t\t\t\tpattern: /[:{}$]/\n\t\t\t\t}\n\t\t\t},\n\t\t\talias: 'function'\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('inside', 'punctuation', {\n\t\t'variable': Prism.languages.xeora['function-inline'].inside['variable']\n\t}, Prism.languages.xeora['function-block']);\n\n\tPrism.languages.xeoracube = Prism.languages.xeora;\n\n}(Prism));\n"]},"metadata":{},"sourceType":"script"}