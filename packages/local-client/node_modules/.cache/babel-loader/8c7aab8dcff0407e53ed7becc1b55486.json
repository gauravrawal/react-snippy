{"ast":null,"code":"module.exports = listItem;\n\nvar repeat = require('repeat-string');\n\nvar checkBullet = require('../util/check-bullet');\n\nvar checkListItemIndent = require('../util/check-list-item-indent');\n\nvar flow = require('../util/container-flow');\n\nvar indentLines = require('../util/indent-lines');\n\nfunction listItem(node, parent, context) {\n  var bullet = checkBullet(context);\n  var listItemIndent = checkListItemIndent(context);\n  var size;\n  var value;\n  var exit;\n\n  if (parent && parent.ordered) {\n    bullet = (parent.start > -1 ? parent.start : 1) + (context.options.incrementListMarker === false ? 0 : parent.children.indexOf(node)) + '.';\n  }\n\n  size = bullet.length + 1;\n\n  if (listItemIndent === 'tab' || listItemIndent === 'mixed' && (parent && parent.spread || node.spread)) {\n    size = Math.ceil(size / 4) * 4;\n  }\n\n  exit = context.enter('listItem');\n  value = indentLines(flow(node, context), map);\n  exit();\n  return value;\n\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : repeat(' ', size)) + line;\n    }\n\n    return (blank ? bullet : bullet + repeat(' ', size - bullet.length)) + line;\n  }\n}","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/jbook/node_modules/mdast-util-to-markdown/lib/handle/list-item.js"],"names":["module","exports","listItem","repeat","require","checkBullet","checkListItemIndent","flow","indentLines","node","parent","context","bullet","listItemIndent","size","value","exit","ordered","start","options","incrementListMarker","children","indexOf","length","spread","Math","ceil","enter","map","line","index","blank"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiBC,QAAjB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,eAAD,CAApB;;AACA,IAAIC,WAAW,GAAGD,OAAO,CAAC,sBAAD,CAAzB;;AACA,IAAIE,mBAAmB,GAAGF,OAAO,CAAC,gCAAD,CAAjC;;AACA,IAAIG,IAAI,GAAGH,OAAO,CAAC,wBAAD,CAAlB;;AACA,IAAII,WAAW,GAAGJ,OAAO,CAAC,sBAAD,CAAzB;;AAEA,SAASF,QAAT,CAAkBO,IAAlB,EAAwBC,MAAxB,EAAgCC,OAAhC,EAAyC;AACvC,MAAIC,MAAM,GAAGP,WAAW,CAACM,OAAD,CAAxB;AACA,MAAIE,cAAc,GAAGP,mBAAmB,CAACK,OAAD,CAAxC;AACA,MAAIG,IAAJ;AACA,MAAIC,KAAJ;AACA,MAAIC,IAAJ;;AAEA,MAAIN,MAAM,IAAIA,MAAM,CAACO,OAArB,EAA8B;AAC5BL,IAAAA,MAAM,GACJ,CAACF,MAAM,CAACQ,KAAP,GAAe,CAAC,CAAhB,GAAoBR,MAAM,CAACQ,KAA3B,GAAmC,CAApC,KACCP,OAAO,CAACQ,OAAR,CAAgBC,mBAAhB,KAAwC,KAAxC,GACG,CADH,GAEGV,MAAM,CAACW,QAAP,CAAgBC,OAAhB,CAAwBb,IAAxB,CAHJ,IAIA,GALF;AAMD;;AAEDK,EAAAA,IAAI,GAAGF,MAAM,CAACW,MAAP,GAAgB,CAAvB;;AAEA,MACEV,cAAc,KAAK,KAAnB,IACCA,cAAc,KAAK,OAAnB,KAAgCH,MAAM,IAAIA,MAAM,CAACc,MAAlB,IAA6Bf,IAAI,CAACe,MAAjE,CAFH,EAGE;AACAV,IAAAA,IAAI,GAAGW,IAAI,CAACC,IAAL,CAAUZ,IAAI,GAAG,CAAjB,IAAsB,CAA7B;AACD;;AAEDE,EAAAA,IAAI,GAAGL,OAAO,CAACgB,KAAR,CAAc,UAAd,CAAP;AACAZ,EAAAA,KAAK,GAAGP,WAAW,CAACD,IAAI,CAACE,IAAD,EAAOE,OAAP,CAAL,EAAsBiB,GAAtB,CAAnB;AACAZ,EAAAA,IAAI;AAEJ,SAAOD,KAAP;;AAEA,WAASa,GAAT,CAAaC,IAAb,EAAmBC,KAAnB,EAA0BC,KAA1B,EAAiC;AAC/B,QAAID,KAAJ,EAAW;AACT,aAAO,CAACC,KAAK,GAAG,EAAH,GAAQ5B,MAAM,CAAC,GAAD,EAAMW,IAAN,CAApB,IAAmCe,IAA1C;AACD;;AAED,WAAO,CAACE,KAAK,GAAGnB,MAAH,GAAYA,MAAM,GAAGT,MAAM,CAAC,GAAD,EAAMW,IAAI,GAAGF,MAAM,CAACW,MAApB,CAAjC,IAAgEM,IAAvE;AACD;AACF","sourcesContent":["module.exports = listItem\n\nvar repeat = require('repeat-string')\nvar checkBullet = require('../util/check-bullet')\nvar checkListItemIndent = require('../util/check-list-item-indent')\nvar flow = require('../util/container-flow')\nvar indentLines = require('../util/indent-lines')\n\nfunction listItem(node, parent, context) {\n  var bullet = checkBullet(context)\n  var listItemIndent = checkListItemIndent(context)\n  var size\n  var value\n  var exit\n\n  if (parent && parent.ordered) {\n    bullet =\n      (parent.start > -1 ? parent.start : 1) +\n      (context.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      '.'\n  }\n\n  size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' && ((parent && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  exit = context.enter('listItem')\n  value = indentLines(flow(node, context), map)\n  exit()\n\n  return value\n\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : repeat(' ', size)) + line\n    }\n\n    return (blank ? bullet : bullet + repeat(' ', size - bullet.length)) + line\n  }\n}\n"]},"metadata":{},"sourceType":"script"}