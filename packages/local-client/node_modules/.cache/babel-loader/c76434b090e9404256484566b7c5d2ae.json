{"ast":null,"code":"Prism.languages.livescript = {\n  comment: [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n    lookbehind: !0\n  }, {\n    pattern: /(^|[^\\\\])#.*/,\n    lookbehind: !0\n  }],\n  \"interpolated-string\": {\n    pattern: /(^|[^\"])(\"\"\"|\")(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2(?!\")/,\n    lookbehind: !0,\n    greedy: !0,\n    inside: {\n      variable: {\n        pattern: /(^|[^\\\\])#[a-z_](?:-?[a-z]|[\\d_])*/m,\n        lookbehind: !0\n      },\n      interpolation: {\n        pattern: /(^|[^\\\\])#\\{[^}]+\\}/m,\n        lookbehind: !0,\n        inside: {\n          \"interpolation-punctuation\": {\n            pattern: /^#\\{|\\}$/,\n            alias: \"variable\"\n          }\n        }\n      },\n      string: /[\\s\\S]+/\n    }\n  },\n  string: [{\n    pattern: /('''|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n    greedy: !0\n  }, {\n    pattern: /<\\[[\\s\\S]*?\\]>/,\n    greedy: !0\n  }, /\\\\[^\\s,;\\])}]+/],\n  regex: [{\n    pattern: /\\/\\/(?:\\[[^\\r\\n\\]]*\\]|\\\\.|(?!\\/\\/)[^\\\\\\[])+\\/\\/[gimyu]{0,5}/,\n    greedy: !0,\n    inside: {\n      comment: {\n        pattern: /(^|[^\\\\])#.*/,\n        lookbehind: !0\n      }\n    }\n  }, {\n    pattern: /\\/(?:\\[[^\\r\\n\\]]*\\]|\\\\.|[^/\\\\\\r\\n\\[])+\\/[gimyu]{0,5}/,\n    greedy: !0\n  }],\n  keyword: {\n    pattern: /(^|(?!-).)\\b(?:break|case|catch|class|const|continue|default|do|else|extends|fallthrough|finally|for(?: ever)?|function|if|implements|it|let|loop|new|null|otherwise|own|return|super|switch|that|then|this|throw|try|unless|until|var|void|when|while|yield)(?!-)\\b/m,\n    lookbehind: !0\n  },\n  \"keyword-operator\": {\n    pattern: /(^|[^-])\\b(?:(?:delete|require|typeof)!|(?:and|by|delete|export|from|import(?: all)?|in|instanceof|is(?:nt| not)?|not|of|or|til|to|typeof|with|xor)(?!-)\\b)/m,\n    lookbehind: !0,\n    alias: \"operator\"\n  },\n  boolean: {\n    pattern: /(^|[^-])\\b(?:false|no|off|on|true|yes)(?!-)\\b/m,\n    lookbehind: !0\n  },\n  argument: {\n    pattern: /(^|(?!\\.&\\.)[^&])&(?!&)\\d*/m,\n    lookbehind: !0,\n    alias: \"variable\"\n  },\n  number: /\\b(?:\\d+~[\\da-z]+|\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[a-z]\\w*)?)/i,\n  identifier: /[a-z_](?:-?[a-z]|[\\d_])*/i,\n  operator: [{\n    pattern: /( )\\.(?= )/,\n    lookbehind: !0\n  }, /\\.(?:[=~]|\\.\\.?)|\\.(?:[&|^]|<<|>>>?)\\.|:(?:=|:=?)|&&|\\|[|>]|<(?:<<?<?|--?!?|~~?!?|[|=?])?|>[>=?]?|-(?:->?|>)?|\\+\\+?|@@?|%%?|\\*\\*?|!(?:~?=|--?>|~?~>)?|~(?:~?>|=)?|==?|\\^\\^?|[\\/?]/],\n  punctuation: /[(){}\\[\\]|.,:;`]/\n}, Prism.languages.livescript[\"interpolated-string\"].inside.interpolation.inside.rest = Prism.languages.livescript;","map":{"version":3,"sources":["/Users/gauravrawal/gaurav/udemy/github/react-snippy/node_modules/prismjs/components/prism-livescript.min.js"],"names":["Prism","languages","livescript","comment","pattern","lookbehind","greedy","inside","variable","interpolation","alias","string","regex","keyword","boolean","argument","number","identifier","operator","punctuation","rest"],"mappings":"AAAAA,KAAK,CAACC,SAAN,CAAgBC,UAAhB,GAA2B;AAACC,EAAAA,OAAO,EAAC,CAAC;AAACC,IAAAA,OAAO,EAAC,2BAAT;AAAqCC,IAAAA,UAAU,EAAC,CAAC;AAAjD,GAAD,EAAqD;AAACD,IAAAA,OAAO,EAAC,cAAT;AAAwBC,IAAAA,UAAU,EAAC,CAAC;AAApC,GAArD,CAAT;AAAsG,yBAAsB;AAACD,IAAAA,OAAO,EAAC,iDAAT;AAA2DC,IAAAA,UAAU,EAAC,CAAC,CAAvE;AAAyEC,IAAAA,MAAM,EAAC,CAAC,CAAjF;AAAmFC,IAAAA,MAAM,EAAC;AAACC,MAAAA,QAAQ,EAAC;AAACJ,QAAAA,OAAO,EAAC,qCAAT;AAA+CC,QAAAA,UAAU,EAAC,CAAC;AAA3D,OAAV;AAAwEI,MAAAA,aAAa,EAAC;AAACL,QAAAA,OAAO,EAAC,sBAAT;AAAgCC,QAAAA,UAAU,EAAC,CAAC,CAA5C;AAA8CE,QAAAA,MAAM,EAAC;AAAC,uCAA4B;AAACH,YAAAA,OAAO,EAAC,UAAT;AAAoBM,YAAAA,KAAK,EAAC;AAA1B;AAA7B;AAArD,OAAtF;AAAgNC,MAAAA,MAAM,EAAC;AAAvN;AAA1F,GAA5H;AAAybA,EAAAA,MAAM,EAAC,CAAC;AAACP,IAAAA,OAAO,EAAC,oCAAT;AAA8CE,IAAAA,MAAM,EAAC,CAAC;AAAtD,GAAD,EAA0D;AAACF,IAAAA,OAAO,EAAC,gBAAT;AAA0BE,IAAAA,MAAM,EAAC,CAAC;AAAlC,GAA1D,EAA+F,gBAA/F,CAAhc;AAAijBM,EAAAA,KAAK,EAAC,CAAC;AAACR,IAAAA,OAAO,EAAC,6DAAT;AAAuEE,IAAAA,MAAM,EAAC,CAAC,CAA/E;AAAiFC,IAAAA,MAAM,EAAC;AAACJ,MAAAA,OAAO,EAAC;AAACC,QAAAA,OAAO,EAAC,cAAT;AAAwBC,QAAAA,UAAU,EAAC,CAAC;AAApC;AAAT;AAAxF,GAAD,EAA2I;AAACD,IAAAA,OAAO,EAAC,sDAAT;AAAgEE,IAAAA,MAAM,EAAC,CAAC;AAAxE,GAA3I,CAAvjB;AAA8wBO,EAAAA,OAAO,EAAC;AAACT,IAAAA,OAAO,EAAC,uQAAT;AAAiRC,IAAAA,UAAU,EAAC,CAAC;AAA7R,GAAtxB;AAAsjC,sBAAmB;AAACD,IAAAA,OAAO,EAAC,8JAAT;AAAwKC,IAAAA,UAAU,EAAC,CAAC,CAApL;AAAsLK,IAAAA,KAAK,EAAC;AAA5L,GAAzkC;AAAixCI,EAAAA,OAAO,EAAC;AAACV,IAAAA,OAAO,EAAC,gDAAT;AAA0DC,IAAAA,UAAU,EAAC,CAAC;AAAtE,GAAzxC;AAAk2CU,EAAAA,QAAQ,EAAC;AAACX,IAAAA,OAAO,EAAC,6BAAT;AAAuCC,IAAAA,UAAU,EAAC,CAAC,CAAnD;AAAqDK,IAAAA,KAAK,EAAC;AAA3D,GAA32C;AAAk7CM,EAAAA,MAAM,EAAC,0DAAz7C;AAAo/CC,EAAAA,UAAU,EAAC,2BAA//C;AAA2hDC,EAAAA,QAAQ,EAAC,CAAC;AAACd,IAAAA,OAAO,EAAC,YAAT;AAAsBC,IAAAA,UAAU,EAAC,CAAC;AAAlC,GAAD,EAAsC,mLAAtC,CAApiD;AAA+vDc,EAAAA,WAAW,EAAC;AAA3wD,CAA3B,EAA0zDnB,KAAK,CAACC,SAAN,CAAgBC,UAAhB,CAA2B,qBAA3B,EAAkDK,MAAlD,CAAyDE,aAAzD,CAAuEF,MAAvE,CAA8Ea,IAA9E,GAAmFpB,KAAK,CAACC,SAAN,CAAgBC,UAA75D","sourcesContent":["Prism.languages.livescript={comment:[{pattern:/(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,lookbehind:!0},{pattern:/(^|[^\\\\])#.*/,lookbehind:!0}],\"interpolated-string\":{pattern:/(^|[^\"])(\"\"\"|\")(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2(?!\")/,lookbehind:!0,greedy:!0,inside:{variable:{pattern:/(^|[^\\\\])#[a-z_](?:-?[a-z]|[\\d_])*/m,lookbehind:!0},interpolation:{pattern:/(^|[^\\\\])#\\{[^}]+\\}/m,lookbehind:!0,inside:{\"interpolation-punctuation\":{pattern:/^#\\{|\\}$/,alias:\"variable\"}}},string:/[\\s\\S]+/}},string:[{pattern:/('''|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,greedy:!0},{pattern:/<\\[[\\s\\S]*?\\]>/,greedy:!0},/\\\\[^\\s,;\\])}]+/],regex:[{pattern:/\\/\\/(?:\\[[^\\r\\n\\]]*\\]|\\\\.|(?!\\/\\/)[^\\\\\\[])+\\/\\/[gimyu]{0,5}/,greedy:!0,inside:{comment:{pattern:/(^|[^\\\\])#.*/,lookbehind:!0}}},{pattern:/\\/(?:\\[[^\\r\\n\\]]*\\]|\\\\.|[^/\\\\\\r\\n\\[])+\\/[gimyu]{0,5}/,greedy:!0}],keyword:{pattern:/(^|(?!-).)\\b(?:break|case|catch|class|const|continue|default|do|else|extends|fallthrough|finally|for(?: ever)?|function|if|implements|it|let|loop|new|null|otherwise|own|return|super|switch|that|then|this|throw|try|unless|until|var|void|when|while|yield)(?!-)\\b/m,lookbehind:!0},\"keyword-operator\":{pattern:/(^|[^-])\\b(?:(?:delete|require|typeof)!|(?:and|by|delete|export|from|import(?: all)?|in|instanceof|is(?:nt| not)?|not|of|or|til|to|typeof|with|xor)(?!-)\\b)/m,lookbehind:!0,alias:\"operator\"},boolean:{pattern:/(^|[^-])\\b(?:false|no|off|on|true|yes)(?!-)\\b/m,lookbehind:!0},argument:{pattern:/(^|(?!\\.&\\.)[^&])&(?!&)\\d*/m,lookbehind:!0,alias:\"variable\"},number:/\\b(?:\\d+~[\\da-z]+|\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[a-z]\\w*)?)/i,identifier:/[a-z_](?:-?[a-z]|[\\d_])*/i,operator:[{pattern:/( )\\.(?= )/,lookbehind:!0},/\\.(?:[=~]|\\.\\.?)|\\.(?:[&|^]|<<|>>>?)\\.|:(?:=|:=?)|&&|\\|[|>]|<(?:<<?<?|--?!?|~~?!?|[|=?])?|>[>=?]?|-(?:->?|>)?|\\+\\+?|@@?|%%?|\\*\\*?|!(?:~?=|--?>|~?~>)?|~(?:~?>|=)?|==?|\\^\\^?|[\\/?]/],punctuation:/[(){}\\[\\]|.,:;`]/},Prism.languages.livescript[\"interpolated-string\"].inside.interpolation.inside.rest=Prism.languages.livescript;"]},"metadata":{},"sourceType":"script"}